(this["webpackJsonpdedelend-old"]=this["webpackJsonpdedelend-old"]||[]).push([[0],{102:function(e,n,t){"use strict";t.r(n);var a=t(4),i=t.n(a),r=t(73),o=t.n(r),s=t(10),d=(t(87),t(1)),b=t(24),c=t(14),l=t(16),u=t(2),f=function(){return Object(u.jsx)("div",{className:"logo-wrapper",children:Object(u.jsx)("a",{className:"logo",href:"/",children:"DeDeLend"})})},p=t(23),m=["children","className","clickHandler","disabled","isMain"],y=function(e){var n=e.children,t=e.className,a=(e.clickHandler,e.disabled),i=e.isMain,r=Object(p.a)(e,m),o=["btn",i?"btn_main":"",a?"disabled":"",r.btnActive?"highlighted":"",t],s=Object(c.a)({},r);return delete s.btnActive,Object(u.jsx)("button",Object(c.a)(Object(c.a)({},s),{},{disabled:a,className:o.join(" "),"data-text":n,children:i?Object(u.jsx)("span",{children:n.toString()}):n}))},v=function(e){var n=e.address;return Object(u.jsxs)("div",{className:"wallet-container",children:[Object(u.jsxs)("div",{className:"wallet",children:[Object(u.jsx)("div",{className:"wallet__avatar-wrapper",children:Object(u.jsx)("div",{className:"wallet__avatar"})}),Object(u.jsx)("div",{className:"wallet__address",children:window.outerWidth<768?n.substr(0,5)+"..."+n.substr(-4):n})]}),Object(u.jsx)("button",{className:"logout-btn",onClick:function(){}})]})},h=Object(a.createContext)(null),w=Object(a.createContext)(null),g=t(15),T=42161,I=function(){var e=Object(l.a)(Object(d.a)().mark((function e(n){var t;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!window.ethereum){e.next=29;break}if(e.prev=1,!window.ethereum.networkVersion||Number(window.ethereum.networkVersion)===T){e.next=18;break}return alert("Change your network (Arbitrum) and reload the page"),e.prev=4,e.next=7,window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:g.a.utils.hexlify(T)}]});case 7:window.location.reload(),e.next=17;break;case 10:if(e.prev=10,e.t0=e.catch(4),console.log(e.t0),4902!==e.t0.code){e.next=17;break}return e.next=16,window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:g.a.utils.hexlify(T),chainName:"Arbitrum One",nativeCurrency:{symbol:"ETH",decimals:18},rpcUrls:["https://arb1.arbitrum.io/rpc"],blockExplorerUrls:["https://arbiscan.io/"]}]});case 16:window.location.reload();case 17:return e.abrupt("return");case 18:return e.next=20,window.ethereum.request({method:"eth_requestAccounts"});case 20:t=e.sent,n(t[0]),e.next=27;break;case 24:e.prev=24,e.t1=e.catch(1),console.log(e.t1);case 27:e.next=30;break;case 29:alert("Please, install MetaMask extension to use this application.");case 30:case"end":return e.stop()}}),e,null,[[1,24],[4,10]])})));return function(n){return e.apply(this,arguments)}}(),x=function(){var e=Object(l.a)(Object(d.a)().mark((function e(n){return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,I(n);case 2:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),C=t(43),k=t(44),O=t(45),_=t(46),R=t(47),E=t(48),D=t(49),L=t(50),A=t(51),S=t(52),M=t(53),j=t(54),P=t(55),B=t(56),q=t(57),F=t(58),N=t(36),H=t(59),U=new g.a.getDefaultProvider("https://arb-mainnet.g.alchemy.com/v2/r6kd0heyoOCe8RFndkyv0XW0F-BG38Fy"),z=window.ethereum?new g.a.providers.Web3Provider(window.ethereum):void 0,V=null===z||void 0===z?void 0:z.getSigner(),W=t(60),X=t(61),Z=t(62),J=t(63),G=t(64),Y=t(65),$=new g.a.Contract(W.address,W.abi,null!==z&&void 0!==z?z:U),K=$.connect(V),Q=new g.a.Contract(X.address,X.abi,null!==z&&void 0!==z?z:U),ee=Q.connect(V),ne=new g.a.Contract(Z.address,Z.abi,null!==z&&void 0!==z?z:U),te=ne.connect(V),ae=new g.a.Contract(N.address,N.abi,V),ie=new g.a.Contract(J.address,J.abi,null!==z&&void 0!==z?z:U),re=ie.connect(V),oe=new g.a.Contract(G.address,G.abi,null!==z&&void 0!==z?z:U),se=new g.a.Contract(Y.address,Y.abi,null!==z&&void 0!==z?z:U),de=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";if("undefined"===typeof e)return"";var t=e.toString(),a=t.split("."),i=Object(s.a)(a,2),r=i[0],o=i[1],d=void 0!==o;return r=r.replace(/\B(?=(\d{3})+(?!\d))/g,d?",":n),d?(1===o.length&&" "!==n&&(o+="0"),r+"."+o):r},be=function(e){return de(function(e){var n,t=e.toString().replace(/^\./g,"").replace(/[^0-9.]/g,"").replace(/^0\d/,"");(null===(n=t.match(/\./g))||void 0===n?void 0:n.length)>1&&(t=t.replace(/\.$/,""));var a=t.split("."),i=Object(s.a)(a,2)[1];return(null===i||void 0===i?void 0:i.length)>6&&(t=t.substr(0,t.length-1)),t}(e)," ")},ce=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" ";return"string"!==typeof e?e:Number(e.split(n).join(""))},le=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return Math.floor(e*Math.pow(10,n))/Math.pow(10,n)},ue=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:6;return Math.floor(ce(e)*Math.pow(10,n))},fe=function(){var e=Object(l.a)(Object(d.a)().mark((function e(){var n,t,a,i;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n={},e.next=3,ne.getTotalBalance();case 3:return t=e.sent.toNumber(),e.next=6,ne.totalLocked();case 6:return a=e.sent.toNumber(),i=t+a,n.totalSupplied=Math.round(g.a.utils.formatUnits(i,6)),n.availToBorrow=Math.round(g.a.utils.formatUnits(t,6)),n.totalBorrowed=Math.round(g.a.utils.formatUnits(a,6)),console.log(t),n.utilRate=le(0===i?0:a/i*100),n.borrowAPY=10,e.abrupt("return",n);case 15:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),pe=function(){var e=Object(l.a)(Object(d.a)().mark((function e(n){var t,a,i,r,o;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.t0=Number,e.t1=g.a.utils,e.next=5,ie.balanceOf(n);case 5:return e.t2=e.sent,e.t3=e.t1.formatUnits.call(e.t1,e.t2,6),t=(0,e.t0)(e.t3),e.t4=Number,e.t5=g.a.utils,e.next=12,ne.shareOf(n);case 12:return e.t6=e.sent,e.t7=e.t5.formatUnits.call(e.t5,e.t6,6),a=(0,e.t4)(e.t7),e.next=17,ne.getTotalBalance();case 17:return i=e.sent.toNumber(),r=Math.min(a,i),o={balance:le(t),curBalance:le(a),avail:le(r)},e.abrupt("return",o);case 23:e.prev=23,e.t8=e.catch(0),console.log(e.t8);case 26:case"end":return e.stop()}}),e,null,[[0,23]])})));return function(n){return e.apply(this,arguments)}}(),me=function(){var e=Object(l.a)(Object(d.a)().mark((function e(n,t){var a,i,r,o,s,b;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("getting option stats",n),a=t?$:Q,i=t?K:ee,e.t0=Number,e.t1=g.a.utils,e.next=7,a.profitByOption(n);case 7:return e.t2=e.sent,e.t3=e.t1.formatUnits.call(e.t1,e.t2,6),r=(0,e.t0)(e.t3),e.t4=Number,e.t5=g.a.utils,e.next=14,a.maxBorrowLimit(n);case 14:return e.t6=e.sent,e.t7=e.t5.formatUnits.call(e.t5,e.t6,6),o=(0,e.t4)(e.t7),e.t8=Number,e.t9=g.a.utils,e.next=21,a.borrowedByOption(n);case 21:if(e.t10=e.sent[0],e.t11=e.t9.formatUnits.call(e.t9,e.t10,6),s=(0,e.t8)(e.t11),0!==Number(s)){e.next=28;break}e.t12="",e.next=35;break;case 28:return e.t13=Number,e.t14=g.a.utils,e.next=32,a.currentLiqPrice(n);case 32:e.t15=e.sent,e.t16=e.t14.formatUnits.call(e.t14,e.t15,8),e.t12=(0,e.t13)(e.t16);case 35:return b=e.t12,e.abrupt("return",{intrinsicValue:le(r),borrowLimit:le(o),borrowLimitUsed:le(s),liqPrice:"string"===typeof b?b:le(b),realVals:{intrinsicValue:r,borrowLimit:o,borrowLimitUsed:s,liqPrice:b},contracts:[a,i]});case 37:case"end":return e.stop()}}),e)})));return function(n,t){return e.apply(this,arguments)}}(),ye=function(e){var n,t=e.walletAddress,i=e.setWalletAddress,r=Object(a.useContext)(h).setGlobalStats,o=Object(a.useContext)(w).setUserStats;function s(){return(s=Object(l.a)(Object(d.a)().mark((function e(n){var t,a,i,r,o,s,c,l,u,f,p,m,y,v,h,w,T,I,x,U,V,W,X,Z,J,G,Y,$,K,Q,ee;return Object(d.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=ae,a=new g.a.Contract(H.address,H.abi,z),i=new g.a.utils.Interface(N.abi),r=new Map([[C.address,{name:"ETH-ATM-CALL",inf:C}],[k.address,{name:"ETH-OTM-CALL-10%",inf:k}],[O.address,{name:"ETH-OTM-CALL-20%",inf:O}],[_.address,{name:"ETH-OTM-CALL-30%",inf:_}],[R.address,{name:"BTC-ATM-CALL",inf:R}],[E.address,{name:"BTC-OTM-CALL-10%",inf:E}],[D.address,{name:"BTC-OTM-CALL-20%",inf:D}],[L.address,{name:"BTC-OTM-CALL-30%",inf:L}],[A.address,{name:"ETH-ATM-PUT",inf:A}],[S.address,{name:"ETH-OTM-PUT-30%",inf:S}],[M.address,{name:"ETH-OTM-PUT-20%",inf:M}],[j.address,{name:"ETH-OTM-PUT-10%",inf:j}],[P.address,{name:"BTC-ATM-PUT",inf:P}],[B.address,{name:"BTC-OTM-PUT-30%",inf:B}],[q.address,{name:"BTC-OTM-PUT-20%",inf:q}],[F.address,{name:"BTC-OTM-PUT-10%",inf:F}]]),o=i.encodeFilterTopics("Transfer",[null,n]),e.next=7,z.getLogs({address:t.address,fromBlock:6661745,topics:o});case 7:s=e.sent,c=[],l=[],u=Object(b.a)(s),e.prev=11,u.s();case 13:if((f=u.n()).done){e.next=55;break}return p=f.value,m=i.decodeEventLog("Transfer",p.data,p.topics),e.next=18,a.lockedLiquidity(m.tokenId);case 18:if(y=e.sent,0===Number(y.state)){e.next=53;break}if(I=m.tokenId.toNumber(),!l.includes(I)){e.next=23;break}return e.abrupt("continue",53);case 23:if(!((x=1e3*y.expiration-Date.now())<=0)){e.next=26;break}return e.abrupt("continue",53);case 26:if(U=r.get(y.strategy)){e.next=29;break}return e.abrupt("continue",53);case 29:return l.push(I),V=new g.a.Contract(y.strategy,U.inf.abi,z),e.next=33,V.strategyData(I);case 33:return W=e.sent,X=null===(v=U.name)||void 0===v?void 0:v.includes("ETH"),Z=Number(g.a.utils.formatUnits(W.amount.toString(),X?18:8)),J=Number(g.a.utils.formatUnits(W.strike.toString(),8)),e.next=39,me(I,X);case 39:return G=e.sent,Y=null===(h=U.name)||void 0===h?void 0:h.includes("CALL"),$=X?oe:se,e.t0=Number,e.t1=g.a.utils,e.next=46,$.latestRoundData();case 46:e.t2=e.sent[1],e.t3=e.t1.formatUnits.call(e.t1,e.t2,8),K=(0,e.t0)(e.t3),Q=X?.04:.03,ee=void 0,Y?K<=(ee=J*(1+Q))&&(G.borrowLimit=0):K>=(ee=J*(1-Q))&&(G.borrowLimit=0),c.push({id:I,name:U.name,amount:Math.floor(100*Z)/100,strike:Math.floor(100*J)/100,expiration:x,intrinsicValue:G.intrinsicValue,borrowLimit:G.borrowLimit,borrowLimitUsed:G.borrowLimitUsed,liqPrice:null!==(w=G.liqPrice)&&void 0!==w?w:"",realVals:null!==(T=G.realVals)&&void 0!==T?T:{},contracts:G.contracts,isETH:X,priorLiqPrice:ee});case 53:e.next=13;break;case 55:e.next=60;break;case 57:e.prev=57,e.t4=e.catch(11),u.e(e.t4);case 60:return e.prev=60,u.f(),e.finish(60);case 63:return c.length||c.push("You don\u2019t have active Hegic Options"),e.abrupt("return",c);case 65:case"end":return e.stop()}}),e,null,[[11,57,60,63]])})))).apply(this,arguments)}return Object(a.useEffect)((function(){x(i),fe().then((function(e){r(e)}))}),[null===(n=window.ethereum)||void 0===n?void 0:n.networkVersion]),Object(a.useEffect)((function(){t&&pe(t).then((function(e){o(e),function(e){return s.apply(this,arguments)}(t).then((function(n){o(Object(c.a)(Object(c.a)({},e),{},{options:n}))}))}))}),[t]),Object(u.jsx)("header",{className:"header",children:Object(u.jsxs)("div",{className:"header__content _container",children:[Object(u.jsx)(f,{}),t?Object(u.jsx)(v,{address:t}):Object(u.jsx)(y,{isMain:!0,onClick:function(e){x(i)},children:"Connect wallet"})]})})},ve=function(){return Object(u.jsx)("footer",{className:"footer",children:Object(u.jsxs)("div",{className:"footer__content _container",children:[Object(u.jsx)(f,{}),Object(u.jsxs)("div",{className:"footer__smedia-items",children:[Object(u.jsx)("a",{className:"footer__smedia-item",target:"_blank",href:"https://mirror.xyz/dedelend.eth/gJriRVVlVGqU3l4qKIP6v08z5KUrdHDpGki6j4jLhss",children:Object(u.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"30",height:"30",viewBox:"0 0 30 30",fill:"none",children:[Object(u.jsxs)("g",{clipPath:"url(#clip0_58_113)",children:[Object(u.jsx)("rect",{width:"30",height:"30",rx:"5",fill:"#181A3C"}),Object(u.jsx)("path",{d:"M9 14C9 10.6863 11.6863 8 15 8C18.3137 8 21 10.6863 21 14V21.3929C21 22.2805 20.2805 23 19.3929 23H10.6071C9.71954 23 9 22.2805 9 21.3929V14Z",fill:"#6988FF"})]}),Object(u.jsx)("defs",{children:Object(u.jsx)("clipPath",{id:"clip0_58_113",children:Object(u.jsx)("rect",{width:"30",height:"30",rx:"3",fill:"white"})})})]})}),Object(u.jsx)("a",{className:"footer__smedia-item",target:"_blank",href:"https://github.com/DeDeLend",children:Object(u.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"30",height:"30",viewBox:"0 0 30 30",fill:"none",children:[Object(u.jsx)("rect",{width:"30",height:"30",rx:"5",fill:"#181A3C"}),Object(u.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M15.5 8C11.3562 8 8 11.4411 8 15.6897C8 19.0924 10.1469 21.9664 13.1281 22.9853C13.5031 23.0526 13.6437 22.8219 13.6437 22.62C13.6437 22.4374 13.6344 21.8319 13.6344 21.1878C11.75 21.5435 11.2625 20.7168 11.1125 20.2843C11.0281 20.0632 10.6625 19.3808 10.3438 19.1981C10.0812 19.0539 9.70625 18.6983 10.3344 18.6887C10.925 18.6791 11.3469 19.2462 11.4875 19.4769C12.1625 20.64 13.2406 20.3131 13.6719 20.1113C13.7375 19.6115 13.9344 19.275 14.15 19.0828C12.4812 18.8905 10.7375 18.2273 10.7375 15.286C10.7375 14.4497 11.0281 13.7577 11.5063 13.2194C11.4313 13.0271 11.1688 12.2389 11.5812 11.1816C11.5812 11.1816 12.2094 10.9798 13.6437 11.9698C14.2437 11.7968 14.8812 11.7103 15.5187 11.7103C16.1562 11.7103 16.7937 11.7968 17.3938 11.9698C18.8281 10.9701 19.4563 11.1816 19.4563 11.1816C19.8687 12.2389 19.6063 13.0271 19.5312 13.2194C20.0094 13.7577 20.3 14.4401 20.3 15.286C20.3 18.2369 18.5469 18.8905 16.8781 19.0828C17.15 19.3231 17.3844 19.7845 17.3844 20.5054C17.3844 21.5339 17.375 22.3605 17.375 22.62C17.375 22.8219 17.5156 23.0622 17.8906 22.9853C19.3795 22.4699 20.6732 21.4888 21.5898 20.1801C22.5063 18.8714 22.9996 17.3009 23 15.6897C23 11.4411 19.6438 8 15.5 8Z",fill:"#6988FF"})]})}),Object(u.jsx)("a",{className:"footer__smedia-item",target:"_blank",href:"https://twitter.com/DeDeLend",children:Object(u.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"30",height:"30",viewBox:"0 0 30 30",fill:"none",children:[Object(u.jsx)("rect",{width:"30",height:"30",rx:"5",fill:"#181A3C"}),Object(u.jsx)("path",{d:"M23 10.4234C22.4484 10.664 21.8558 10.8265 21.2328 10.8999C21.8756 10.5215 22.3565 9.92574 22.5858 9.22397C21.9819 9.57697 21.3209 9.82545 20.6317 9.95859C20.1682 9.47158 19.5543 9.14877 18.8852 9.0403C18.2162 8.93183 17.5295 9.04376 16.9317 9.35871C16.334 9.67366 15.8586 10.174 15.5794 10.7821C15.3002 11.3902 15.2328 12.0719 15.3877 12.7215C14.164 12.6611 12.9669 12.3481 11.8741 11.8029C10.7813 11.2577 9.81726 10.4924 9.04444 9.55683C8.78019 10.0054 8.62825 10.5255 8.62825 11.0794C8.62795 11.578 8.75273 12.069 8.99151 12.5088C9.23029 12.9486 9.57568 13.3236 9.99705 13.6005C9.50837 13.5852 9.03048 13.4552 8.60314 13.2215V13.2605C8.6031 13.9598 8.84892 14.6377 9.2989 15.1789C9.74888 15.7202 10.3753 16.0916 11.0719 16.2302C10.6185 16.3509 10.1433 16.3687 9.68193 16.2822C9.87847 16.8839 10.2613 17.4101 10.7768 17.7871C11.2923 18.1641 11.9148 18.373 12.5569 18.3846C11.4668 19.2268 10.1205 19.6836 8.73461 19.6816C8.48911 19.6816 8.24382 19.6675 8 19.6393C9.40677 20.5294 11.0444 21.0018 12.7168 21C18.3783 21 21.4733 16.3855 21.4733 12.3835C21.4733 12.2535 21.47 12.1221 21.4641 11.9921C22.0661 11.5637 22.5857 11.0332 22.9987 10.4254L23 10.4234Z",fill:"#6988FF"})]})}),Object(u.jsx)("a",{className:"footer__smedia-item",target:"_blank",href:"https://discord.gg/5DGZ7rzSfS",children:Object(u.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"30",height:"30",viewBox:"0 0 30 30",fill:"none",children:[Object(u.jsx)("rect",{width:"30",height:"30",rx:"5",fill:"#181A3C"}),Object(u.jsx)("path",{d:"M20.6981 10.9123C19.7418 10.4907 18.7169 10.179 17.645 10.0018C17.6355 10 17.6256 10.0012 17.6167 10.0051C17.6079 10.009 17.6005 10.0156 17.5956 10.0238C17.4644 10.2493 17.3182 10.5432 17.2157 10.7754C16.0789 10.6094 14.9232 10.6094 13.7864 10.7754C13.6722 10.5181 13.5435 10.2671 13.4008 10.0238C13.3959 10.0155 13.3886 10.0088 13.3798 10.0047C13.371 10.0005 13.3611 9.99908 13.3514 10.0006C12.2802 10.1778 11.2552 10.4894 10.2984 10.9117C10.2901 10.9151 10.2831 10.9208 10.2784 10.9282C8.33342 13.7238 7.80031 16.4504 8.06217 19.1428C8.0629 19.1494 8.065 19.1558 8.06833 19.1616C8.07166 19.1673 8.07616 19.1724 8.08155 19.1764C9.21676 19.9845 10.4829 20.6001 11.8271 20.9974C11.8364 21.0002 11.8465 21.0002 11.8558 20.9974C11.8652 20.9946 11.8735 20.989 11.8796 20.9815C12.1688 20.6033 12.4251 20.2021 12.6458 19.782C12.6489 19.7762 12.6506 19.7699 12.651 19.7635C12.6513 19.757 12.6502 19.7505 12.6478 19.7445C12.6454 19.7385 12.6417 19.733 12.6369 19.7285C12.6321 19.724 12.6264 19.7206 12.6202 19.7184C12.2164 19.5698 11.8252 19.3904 11.4502 19.1819C11.4435 19.1782 11.4378 19.1728 11.4337 19.1664C11.4296 19.16 11.4272 19.1526 11.4267 19.145C11.4262 19.1375 11.4276 19.1299 11.4308 19.123C11.4341 19.1161 11.439 19.1101 11.4452 19.1055C11.5239 19.0487 11.6027 18.9894 11.6777 18.9302C11.6844 18.9248 11.6926 18.9214 11.7012 18.9204C11.7098 18.9193 11.7185 18.9206 11.7264 18.9241C14.1807 20.002 16.8388 20.002 19.2643 18.9241C19.2723 18.9204 19.2811 18.9189 19.2898 18.9199C19.2986 18.9208 19.3068 18.9242 19.3137 18.9295C19.3887 18.9894 19.4668 19.0487 19.5462 19.1055C19.5525 19.11 19.5575 19.1159 19.5608 19.1228C19.5642 19.1296 19.5657 19.1371 19.5653 19.1447C19.565 19.1523 19.5627 19.1596 19.5587 19.1661C19.5547 19.1726 19.5491 19.1781 19.5425 19.1819C19.1687 19.3921 18.78 19.57 18.3719 19.7178C18.3656 19.7201 18.3599 19.7236 18.3551 19.7281C18.3504 19.7327 18.3466 19.7382 18.3442 19.7442C18.3418 19.7503 18.3407 19.7568 18.3411 19.7633C18.3414 19.7698 18.3432 19.7762 18.3463 19.782C18.5712 20.2018 18.8287 20.6014 19.1119 20.9809C19.1177 20.9887 19.1259 20.9945 19.1353 20.9976C19.1447 21.0006 19.1549 21.0008 19.1644 20.998C20.5108 20.6018 21.779 19.986 22.9155 19.1764C22.921 19.1726 22.9257 19.1677 22.9291 19.162C22.9326 19.1563 22.9348 19.15 22.9355 19.1434C23.248 16.0306 22.4118 13.326 20.7174 10.9294C20.7133 10.9216 20.7064 10.9155 20.6981 10.9123ZM13.0127 17.5033C12.2739 17.5033 11.6646 16.8501 11.6646 16.049C11.6646 15.2472 12.2621 14.5946 13.0127 14.5946C13.7689 14.5946 14.3726 15.2527 14.3607 16.049C14.3607 16.8507 13.7633 17.5033 13.0127 17.5033ZM17.9969 17.5033C17.2575 17.5033 16.6488 16.8501 16.6488 16.049C16.6488 15.2472 17.2457 14.5946 17.9969 14.5946C18.7531 14.5946 19.3568 15.2527 19.345 16.049C19.345 16.8507 18.7537 17.5033 17.9969 17.5033Z",fill:"#6988FF"})]})}),Object(u.jsx)("a",{className:"footer__smedia-item",target:"_blank",href:"https://t.me/DeDeLend",children:Object(u.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"30",height:"30",viewBox:"0 0 30 30",fill:"none",children:[Object(u.jsx)("rect",{width:"30",height:"30",rx:"5",fill:"#181A3C"}),Object(u.jsx)("path",{d:"M21.9875 9.0789L8.70041 13.9664C7.79362 14.3138 7.79886 14.7964 8.53404 15.0115L11.9454 16.0267L19.8382 11.2764C20.2114 11.0598 20.5524 11.1763 20.2721 11.4136L13.8774 16.9188H13.8759L13.8774 16.9195L13.642 20.2737C13.9868 20.2737 14.1389 20.1228 14.3323 19.9448L15.9892 18.4079L19.4358 20.8363C20.0713 21.1701 20.5277 20.9985 20.6858 20.2751L22.9483 10.104C23.1798 9.2183 22.5938 8.81726 21.9875 9.0789Z",fill:"#6988FF"})]})})]})]})})},he=t(11),we=function(e){var n=e.children,t=e.className,a=e.visible,i=e.setVisible,r=e.resetModal,o=["modal",t];a&&o.push("active");var s=function(){i(!1),r()};return Object(u.jsx)("div",{className:o.join(" "),onMouseDown:s,children:Object(u.jsx)("div",{className:"modal__content-wrapper",children:Object(u.jsxs)("div",{className:"modal__content",onMouseDown:function(e){return e.stopPropagation()},children:[Object(u.jsx)("button",{className:"close-btn",onClick:s}),n]})})})},ge=["msg"],Te=function(e){var n=e.msg,t=Object(p.a)(e,ge),a=Object(c.a)({},t);return delete a.setValue,delete a.setBtnActive,Object(u.jsxs)("div",{className:"input-container",children:[Object(u.jsx)("input",Object(c.a)({type:"text"},a)),Object(u.jsx)("span",{className:"msg",children:n})]})},Ie=function(e){return Object(u.jsx)(Te,Object(c.a)(Object(c.a)({},e),{},{value:e.value,onChange:function(n){e.setBtnActive(!0),e.setValue(be(n.target.value))},onBlur:function(){e.value||e.setBtnActive(!1)}}))},xe=["children","maxVal","inputProps","btnText","btnIsActive","onSubmit","modalVisible"],Ce=function(e){var n=e.children,t=e.maxVal,i=e.inputProps,r=e.btnText,o=e.btnIsActive,d=e.onSubmit,b=e.modalVisible,l=Object(p.a)(e,xe),f=Object(a.useState)({class:"",msg:""}),m=Object(s.a)(f,2),v=m[0],h=m[1],w=Object(a.useState)(""),g=Object(s.a)(w,2),T=g[0],I=g[1];i.state&&(T=i.state.val,I=i.state.setVal);var x=Object(a.useState)(!1),C=Object(s.a)(x,2),k=C[0],O=C[1];return Object(a.useEffect)((function(){b||(h({class:"",msg:""}),I(""))}),[b]),Object(u.jsxs)("form",{className:l.className,action:"post",onSubmit:function(e){e.preventDefault();i.disabled?d(e):function(){if(T)if(0===Number(T.toString().split(".").join("")))e.preventDefault(),h({class:"error",msg:""});else if(T.toString().split(" ").join("")>t){var n;e.preventDefault(),h({class:"error",msg:null!==(n=l.maxWarningMsg)&&void 0!==n?n:"Insufficient balance"})}else h({class:"",msg:""}),d(e);else e.preventDefault(),h({class:"error",msg:"Empty field"})}()},children:[Object(u.jsxs)("div",{className:"form-field",children:[Object(u.jsxs)("div",{className:"input-container",children:[Object(u.jsx)(Ie,Object(c.a)(Object(c.a)({value:T,setValue:I},i),{},{className:v.class,msg:v.msg,setBtnActive:O})),l.isModal?Object(u.jsx)(y,{type:"button",className:"btn_plain",disabled:i.disabled,onClick:l.maxOnClick,children:"Max"}):""]}),Object(u.jsx)(y,{btnActive:k||o,disabled:l.btnIsDisabled,children:r})]}),n]})},ke=function(){return Object(u.jsx)("div",{className:"loader-container",children:Object(u.jsxs)("svg",{viewBox:"0 0 100 100",children:[Object(u.jsx)("defs",{}),Object(u.jsx)("circle",{className:"loader",style:{fill:"transparent",stroke:"#fff",strokeWidth:"7px",strokeLinecap:"round"},cx:"50",cy:"50",r:"45"})]})})},Oe=function(e){console.log(e),alert("Error code: ".concat(e.code,"\nError message: ").concat(e.reason))},_e=function(e){var n,t,i,r,o,d=e.state,b=e.setVisible,c=e.updateOptionStats,l=e.isLoading,f=e.setIsLoading,p=d.option,m=null===(n=p.contracts)||void 0===n?void 0:n[0],y=null===(t=p.contracts)||void 0===t?void 0:t[1],v=Object(a.useContext)(h).globalStats,w=Object(a.useState)(null!==(i=d.initStep)&&void 0!==i?i:0),g=Object(s.a)(w,2),T=g[0],I=g[1],x=Object(a.useState)(""),C=Object(s.a)(x,2),k=C[0],O=C[1],_=Object(a.useState)("\u2014"),R=Object(s.a)(_,2),E=R[0],D=R[1],L=le((null===(r=p.realVals)||void 0===r?void 0:r.borrowLimit)-(null===(o=p.realVals)||void 0===o?void 0:o.borrowLimitUsed),6);Object(a.useEffect)((function(){if("object"===typeof p&&Object.keys(p).length){var e,n;ce(k)>L&&O(L);var t=p.priorLiqPrice,a=ce(k);p.name.includes("CALL")?(e=p.strike+(p.borrowLimitUsed+a)/p.amount*1.2,n=Math.max(t,e)):(e=p.strike-(p.borrowLimitUsed+a)/p.amount*1.2,n=Math.min(t,e)),D(le(n))}}),[k]),Object(a.useEffect)((function(){var e;I(null!==(e=d.initStep)&&void 0!==e?e:0)}),[d.initStep]);var A=[{title:"Approve",onSubmit:function(e){e.preventDefault(),f(!0),ae.approve(m.address,p.id).then((function(e){console.log("Approve transaction:",e),e.wait().then((function(){I(T+1),c(p.id,p.isETH)}))}),(function(e){Oe(e),f(!1)}))},inputProps:{placeholder:"Amount",disabled:!0},btnIsActive:!0},{title:"Lock Collateral",onSubmit:function(e){e.preventDefault(),f(!0),y.lockOption(p.id).then((function(e){console.log("Lock Collateral transaction:",e),e.wait().then((function(){I(T+1),c(p.id,p.isETH)}))}),(function(e){Oe(e),f(!1)}))},inputProps:{placeholder:"Amount",disabled:!0},btnIsActive:!0},{title:"Borrow",onSubmit:function(e){e.preventDefault(),f(!0),y.borrow(p.id,ue(k)).then((function(e){console.log("Borrow transaction:",e),e.wait().then((function(){O(""),c(p.id,p.isETH)}))}),(function(e){Oe(e),f(!1)}))},inputProps:{placeholder:"Amount",disabled:!1,state:{val:k,setVal:O}}}];return Object(u.jsxs)(we,{className:"modal_borrow",visible:d.isVisible,setVisible:b,resetModal:function(){var e;I(null!==(e=d.initStep)&&void 0!==e?e:0)},children:[Object(u.jsx)("h1",{className:"modal__title",children:"Borrow USDC"}),Object(u.jsxs)("div",{className:"modal__body",children:[Object(u.jsx)("div",{className:"modal__steps steps",children:A.map((function(e,n){return Object(u.jsx)("div",{className:n===T?"modal__step step current":"modal__step step",children:e.title},n)}))}),Object(u.jsxs)("div",{className:"modal__info",children:[Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Borrow APY:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:v.borrowAPY+"%"})]}),Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Borrow Limit:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:de(p.borrowLimit)+" USDC"})]}),Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title nowrap",children:"Loan-To-Value:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:le(p.borrowLimitUsed/p.intrinsicValue*100)+"%"})]}),Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Available:"}),Object(u.jsx)("div",{className:"modal__info-field-val highlighted",children:de(le(L))+" USDC"})]}),2===T?Object(u.jsxs)("div",{className:"modal__info-field modal__info-field_hl",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Liquidation Price:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:de(E)})]}):""]}),Object(u.jsx)("div",{className:"modal__form-wrapper",children:l?Object(u.jsx)(ke,{}):Object(u.jsx)(Ce,{maxVal:L,inputProps:A[T].inputProps,btnText:A[T].title,onSubmit:A[T].onSubmit,modalVisible:d.isVisible,btnIsActive:A[T].btnIsActive,maxWarningMsg:"Limit is exceed",isModal:!0,maxOnClick:function(){O(L)}})})]}),Object(u.jsx)("div",{className:"modal__tip",children:"You have 30 minutes before the option expires to get your option back. 30 minutes before the expiration date DeDeLend will exercise this option and take 100% of the payoff from the option."})]})},Re=function(e){return function(e,n,t){return Object(a.useMemo)((function(){var a=function(e){for(var n=[],t=0;t<e;t++)n.push(t+1);return n}(e);return Object(u.jsxs)("div",{className:"pages-container",children:[Object(u.jsx)("button",{className:"pages-btn-back pages-btn",disabled:n<=1,onClick:function(){return t(n-1)},children:Object(u.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"7",height:"12",viewBox:"0 0 7 12",fill:"none",children:Object(u.jsx)("path",{d:"M6 11L1 6L6 1",stroke:"#384263"})})}),Object(u.jsx)("div",{className:"pages",children:a.map((function(e,a){return Object(u.jsx)("button",{className:n===e?"page current":"page",onClick:function(){t(e)},children:e},e)}))}),Object(u.jsx)("button",{className:"pages-btn-forward pages-btn",disabled:n>=e,onClick:function(){return t(n+1)},children:Object(u.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"7",height:"12",viewBox:"0 0 7 12",fill:"none",children:Object(u.jsx)("path",{d:"M1 1L6 6L1 11",stroke:"#6988FF"})})})]})}),[e,n])}(e.totalPages,e.page,e.changePage)},Ee=function(e){var n,t,i=e.state,r=e.setVisible,o=e.updateOptionStats,d=e.isLoading,b=e.setIsLoading,c=i.option,l=null===(n=c.contracts)||void 0===n?void 0:n[1],f=Object(a.useContext)(h).globalStats,p=Object(a.useState)(""),m=Object(s.a)(p,2),y=m[0],v=m[1],w=Object(a.useState)(0),g=Object(s.a)(w,2),T=g[0],I=g[1],x=Object(a.useState)("\u2014"),C=Object(s.a)(x,2),k=C[0],O=C[1],_=null===(t=c.realVals)||void 0===t?void 0:t.borrowLimitUsed;Object(a.useEffect)((function(){if("object"===typeof c&&Object.keys(c).length){var e,n;ce(y)>_&&v(_);var t=c.priorLiqPrice,a=ce(y);c.name.includes("CALL")?(e=c.strike+(c.borrowLimitUsed-a)/c.amount*1.2,n=Math.max(t,e)):(e=c.strike-(c.borrowLimitUsed-a)/c.amount*1.2,n=Math.min(t,e)),n===t&&ce(y)>=_?O("\u2014"):O(le(n))}}),[y]),Object(a.useEffect)((function(){var e;I(null!==(e=i.initStep)&&void 0!==e?e:0)}),[i.initStep]);var R=[{title:"Repay",onSubmit:function(e){e.preventDefault(),b(!0),l.repay(c.id,ue(y)).then((function(e){console.log("Repay transaction:",e),e.wait().then((function(){v(""),o(c.id,c.isETH)}))}),(function(e){console.log(e),e.message.includes("transfer amount exceeds allowance")?re.approve(l.address,1e6*Math.pow(10,9)).then((function(e){e.wait().then((function(){l.repay(c.id,ue(y)).then((function(e){e.wait().then((function(){v(""),o(c.id,c.isETH)}))}),(function(e){Oe(e),b(!1)}))}))}),(function(e){Oe(e),b(!1)})):(Oe(e),b(!1))}))},inputProps:{placeholder:"Amount",disabled:!1,state:{val:y,setVal:v}},btnIsActive:!1},{title:"Unlock Collateral",onSubmit:function(e){e.preventDefault(),b(!0),l.unlock(c.id).then((function(e){console.log("Unlock transaction:",e),e.wait().then((function(){o(c.id,c.isETH,!1),r(!1),I(0)}))}),(function(e){Oe(e),b(!1)}))},inputProps:{placeholder:"Amount",disabled:!0},btnIsActive:!0}];return Object(u.jsxs)(we,{className:"modal_borrow",visible:i.isVisible,setVisible:r,resetModal:function(){var e;I(null!==(e=i.initStep)&&void 0!==e?e:0)},children:[Object(u.jsx)("h1",{className:"modal__title",children:"Repay USDC"}),Object(u.jsxs)("div",{className:"modal__body",children:[Object(u.jsx)("div",{className:"modal__steps steps",children:R.map((function(e,n){return Object(u.jsx)("div",{className:n===T?"modal__step step current":"modal__step step",children:e.title},n)}))}),Object(u.jsxs)("div",{className:"modal__info",children:[Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Borrow APY:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:f.borrowAPY+"%"})]}),Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Borrow Limit:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:de(c.borrowLimit)+" USDC"})]}),Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title nowrap",children:"Loan-To-Value:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:le(c.borrowLimitUsed/c.intrinsicValue*100)+"%"})]}),Object(u.jsxs)("div",{className:"modal__info-field",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Repay:"}),Object(u.jsx)("div",{className:"modal__info-field-val highlighted",children:de(c.borrowLimitUsed)+" USDC"})]}),0===T?Object(u.jsxs)("div",{className:"modal__info-field modal__info-field_hl",children:[Object(u.jsx)("div",{className:"modal__info-field-title",children:"Liquidation Price:"}),Object(u.jsx)("div",{className:"modal__info-field-val",children:de(k)})]}):""]}),Object(u.jsx)("div",{className:"modal__form-wrapper",children:d?Object(u.jsx)(ke,{}):Object(u.jsx)(Ce,{maxVal:_,inputProps:R[T].inputProps,btnText:R[T].title,onSubmit:R[T].onSubmit,isStep:T<R.length-1,modalVisible:i.isVisible,btnIsActive:R[T].btnIsActive,maxWarningMsg:"Amount is too big",isModal:!0,maxOnClick:function(){v(_)}})})]})]})},De=["option","stats"],Le=function(e){var n,t=e.option,i=e.stats,r=Object(p.a)(e,De),o=Object(a.useState)(0),d=Object(s.a)(o,2),b=d[0],l=d[1],f=Object(a.useState)(0),m=Object(s.a)(f,2),v=m[0],h=m[1],w=Object(a.useState)(!0),g=Object(s.a)(w,2),T=g[0],I=g[1],x=null===(n=t.contracts)||void 0===n?void 0:n[0];return"string"===typeof t?Object(u.jsx)("div",{className:"borrow-market__warning",children:t}):(ae.isApprovedOrOwner(x.address,t.id).then((function(e){!0===e?ae.ownerOf(t.id).then((function(e){var n;e==x.address?(l(2),I(!1),(null===(n=t.realVals)||void 0===n?void 0:n.borrowLimitUsed)<=0?h(1):h(0)):(l(1),I(!0))})):(l(0),h(0),I(!0))})),Object(u.jsxs)("div",{className:"borrow-market__item _mobile-fluid",children:[Object(u.jsx)("div",{className:"borrow-market__item-options",children:Object.keys(t).map((function(e,n){var a,r=null!==(a=i[n])&&void 0!==a?a:"";if(r){var o,s="";if("function"!==typeof r.unit)if(""!==t[e])o="ID"===r.name||"Option"===r.name?t[e]:de(t[e]),s="$"===r.unit?r.unit+o:o+" "+r.unit;else s="\u2014";else s=r.unit(t[e]);return Object(u.jsxs)("div",{className:"borrow-market__item-option",children:[Object(u.jsx)("div",{className:"borrow-market__item-option-name",children:r.name}),Object(u.jsx)("div",{className:"borrow-market__item-option-val",children:s})]},e)}}))}),Object(u.jsxs)("div",{className:"borrow-market__item-btns btns",children:[Object(u.jsx)(y,{className:"btn_small",disabled:t.borrowLimit<=0||t.borrowLimitUsed>=t.borrowLimit||t.expiration<=36e5,onClick:function(){r.setBorrowModalState(Object(c.a)(Object(c.a)({},r.borrowModalState),{},{isVisible:!0,option:t,initStep:b}))},children:"Borrow"}),Object(u.jsx)(y,{className:"btn_small",disabled:T,onClick:function(){r.setRepayModalState(Object(c.a)(Object(c.a)({},r.repayModalState),{},{isVisible:!0,option:t,initStep:v}))},children:"Repay"})]})]},t.id))},Ae=["options","setBorrowModalState","borrowModalState","setRepayModalState","repayModalState"],Se=function(e){var n=e.options,t=e.setBorrowModalState,a=e.borrowModalState,r=e.setRepayModalState,o=e.repayModalState,s=Object(p.a)(e,Ae);var d=[{name:"ID",unit:""},{name:"Option",unit:""},{name:"Amount",unit:""},{name:"Strike",unit:"$"},{name:"Expires In",unit:function(e){var n=e/1e3/3600,t=Math.floor(n/24),a=Math.floor(n%24);return"".concat(t,"d ").concat(a,"h")}},{name:"Intrinsic Value",unit:"USDC"},{name:"Borrow Limit",unit:"USDC"},{name:"Borrow Limit Used",unit:"USDC"},{name:"Liq. Price",unit:"$"}];return Object(u.jsx)(i.a.Fragment,{children:n.length?Object(u.jsx)("div",{className:"string"===typeof n[0]?"":"borrow-market__items app-box",children:n.map((function(e){var n;return Object(u.jsx)(Le,{option:e,stats:d,setBorrowModalState:t,borrowModalState:a,setRepayModalState:r,repayModalState:o,isModalLoading:s.isModalLoading},null!==(n=e.id)&&void 0!==n?n:e)}))}):s.filter?"":Object(u.jsx)(ke,{})})},Me=function(e){var n=e.walletAddress,t=e.setWalletAddress,r=Object(a.useContext)(w),o=r.userStats,d=r.setUserStats,b=Object(a.useState)(!1),l=Object(s.a)(b,2),f=l[0],p=l[1],m=function(e,n){var t=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];me(e,n).then((function(n){var a,i=o.options.slice();i.find((function(n,t){if(n.id===e)return a=t,!0})),i[a]=Object(c.a)(Object(c.a)({},i[a]),n),d(Object(c.a)(Object(c.a)({},o),{},{options:i})),t&&(k(Object(c.a)(Object(c.a)({},C),{},{initStep:n.borrowLimitUsed>0?0:1,option:i[a]})),g(Object(c.a)(Object(c.a)({},h),{},{option:i[a]}))),p(!1)}))},y=Object(a.useState)({isVisible:!1,option:{},initStep:0}),v=Object(s.a)(y,2),h=v[0],g=v[1],T=Object(a.useState)({isVisible:!1,option:{},initStep:0}),I=Object(s.a)(T,2),C=I[0],k=I[1],O=Object(a.useState)(0),_=Object(s.a)(O,2),R=_[0],E=_[1],D=Object(a.useState)(10),L=Object(s.a)(D,1)[0],A=Object(a.useState)(1),S=Object(s.a)(A,2),M=S[0],j=S[1],P=function(e){j(e),H(L,e,Y)},B=Object(a.useState)(!1),q=Object(s.a)(B,2),F=q[0],N=q[1];Object(a.useEffect)((function(){N(Boolean(n))}),[n]);var H=function(e,n,t){if(t){for(var a=[],i=e*(n-1),r=e*n>=t.length?t.length:e*n,o=i;o<r;o++){var s=t[o];if(!s)break;a.push(s)}a.length||1!==n&&P(n-1),W(a);var d=t.length;E(function(e,n){return Math.ceil(e/n)}(d,e))}},U=Object(a.useState)([]),z=Object(s.a)(U,2),V=z[0],W=z[1],X=Object(a.useState)(""),Z=Object(s.a)(X,2),J=Z[0],G=Z[1];Object(a.useEffect)((function(){H(L,M,Y)}),[L,M,J,o.options]);var Y=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1?arguments[1]:void 0,t=function(n){return n&&"activeBorrows"===n?e.filter((function(e){return 0!==Number(e.borrowLimitUsed)})):e};return Object(a.useMemo)((function(){return t(n)}),[e,n])}(o.options,J);return Object(u.jsxs)("div",{className:"block borrow-market",children:[Object(u.jsx)("h1",{className:"block__title",children:"Borrow Market"}),Object(u.jsxs)("div",{className:"borrow-market__items-container",children:[Object(u.jsx)("div",{className:"borrow-market__filter filter",children:Object(u.jsxs)("div",{className:"input-container",children:[Object(u.jsx)("input",{type:"checkbox",onChange:function(e){e.target.checked?G("activeBorrows"):G("")},disabled:!F||!V.length&&!J}),Object(u.jsx)("label",{children:"Show only active borrows"})]})}),F?Object(u.jsx)(Se,{filter:J,options:V,setBorrowModalState:g,borrowModalState:h,setRepayModalState:k,repayModalState:C,isModalLoading:f}):Object(u.jsxs)("div",{className:"auth-prompt app-box _mobile-fluid",children:[Object(u.jsx)("button",{onClick:function(){return x(t)},children:"Connect wallet"})," to see a list of options"]})]}),F&&o.options?Object(u.jsxs)(i.a.Fragment,{children:[Object(u.jsx)(_e,{state:h,setVisible:function(e){g(Object(c.a)(Object(c.a)({},h),{},{isVisible:e}))},walletAddress:n,updateOptionStats:m,isLoading:f,setIsLoading:p}),Object(u.jsx)(Ee,{state:C,setVisible:function(e){k(Object(c.a)(Object(c.a)({},C),{},{isVisible:e}))},walletAddress:n,updateOptionStats:m,isLoading:f,setIsLoading:p}),Object(u.jsx)(Re,{totalPages:R,page:M,changePage:P})]}):""]})},je=["step","setStep"],Pe=function(e){var n=e.step,t=e.setStep,i=Object(p.a)(e,je),r=Object(a.useContext)(w),o=r.userStats,d=r.setUserStats,b=Object(a.useState)(""),l=Object(s.a)(b,2),f=l[0],m=l[1],y=Object(a.useState)(!1),v=Object(s.a)(y,2),h=v[0],g=v[1];Object(a.useEffect)((function(){ce(f)>o.balance&&m(o.balance)}),[f]);var T=[{title:"Approve",onSubmit:function(e){e.preventDefault(),g(!0);try{re.approve(ne.address,(1e6*Math.pow(10,9)).toFixed(0)).then((function(e){console.log("Supply Approve transaction: ",e),e.wait().then((function(){t(n+1),g(!1)}))}),(function(e){Oe(e),g(!1)}))}catch(a){Oe(a),g(!1)}},inputProps:{placeholder:"Amount",disabled:!0},btnIsActive:!0},{title:"Supply",onSubmit:function(e){e.preventDefault(),g(!0);try{te.provideFrom(i.walletAddress,ue(f),0).then((function(e){console.log("Supply transaction:",e),e.wait().then((function(){pe(i.walletAddress).then((function(e){d(Object(c.a)(Object(c.a)({},o),e)),m(""),g(!1)}))}))}),(function(e){Oe(e),g(!1)}))}catch(n){Oe(n),g(!1)}},inputProps:{placeholder:"Amount",disabled:!1,state:{val:f,setVal:m}}}];return Object(u.jsxs)("div",{className:"supply-card market-card app-box "+i.className,children:[Object(u.jsx)("h2",{children:"Supply USDC"}),Object(u.jsx)("div",{className:"steps",children:T.map((function(e,t){return Object(u.jsx)("div",{className:t===n?"step current":"step",children:e.title},t)}))}),h?Object(u.jsx)(ke,{}):Object(u.jsx)(Ce,{className:"market-card__form",maxVal:o.balance,inputProps:T[n].inputProps,btnText:T[n].title,onSubmit:T[n].onSubmit,isStep:n<T.length-1,btnIsActive:T[n].btnIsActive,btnIsDisabled:!0}),Object(u.jsx)("div",{className:"market-card__info",children:Object(u.jsxs)("div",{className:"info-field",children:[Object(u.jsx)("div",{className:"info-field__name",children:"Balance: "}),Object(u.jsx)("div",{className:"info-field__val"+(void 0!==o.balance?"":" no-data"),children:void 0!==o.balance?de(o.balance)+" USDC":""})]})})]})},Be=function(e){var n=Object(a.useContext)(w),t=n.userStats,i=n.setUserStats,r=Object(a.useState)(""),o=Object(s.a)(r,2),d=o[0],b=o[1],l=Object(a.useState)(!1),f=Object(s.a)(l,2),p=f[0],m=f[1],y={placeholder:"Amount",disabled:""===e.walletAddress,state:{val:d,setVal:b}};Object(a.useEffect)((function(){ce(d)>t.avail&&b(t.avail)}),[d]);return Object(u.jsxs)("div",{className:"withdraw-card market-card app-box "+e.className,children:[Object(u.jsx)("h2",{children:"Withdraw USDC"}),p?Object(u.jsx)(ke,{}):Object(u.jsx)(Ce,{className:"market-card__form",maxVal:t.avail,btnText:"Withdraw",onSubmit:function(n){n.preventDefault(),m(!0);try{te.withdraw(ue(d)).then((function(n){console.log("Withdraw transaction:",n),n.wait().then((function(){pe(e.walletAddress).then((function(e){i(Object(c.a)(Object(c.a)({},t),e)),b(""),m(!1)}))}))}),(function(e){Oe(e),m(!1)}))}catch(a){Oe(a),m(!1)}},inputProps:y,btnIsDisabled:t.avail<=0||void 0===t.avail||""===e.walletAddress}),Object(u.jsxs)("div",{className:"market-card__info",children:[Object(u.jsxs)("div",{className:"info-field",children:[Object(u.jsx)("div",{className:"info-field__name",children:"Current Balance: "}),Object(u.jsx)("div",{className:"info-field__val"+(void 0!==t.curBalance?"":" no-data"),children:void 0!==t.curBalance?de(t.curBalance)+" USDC":""})]}),Object(u.jsxs)("div",{className:"info-field",children:[Object(u.jsx)("div",{className:"info-field__name",children:"Available: "}),Object(u.jsx)("div",{className:"info-field__val"+(void 0!==t.balance?"":" no-data"),children:void 0!==t.avail?de(t.avail)+" USDC":""})]})]})]})},qe=function(e){var n=e.walletAddress,t=e.supplyStep,a=e.setSupplyStep;return Object(u.jsxs)("div",{className:"block supply-market",children:[Object(u.jsx)("h1",{className:"block__title",children:"Supply Market"}),Object(u.jsxs)("div",{className:"supply-market__functions",children:[Object(u.jsx)(Pe,{walletAddress:n,className:"supply-market__function",step:t,setStep:a}),Object(u.jsx)(Be,{walletAddress:n,className:"supply-market__function",setSupplyStep:a})]})]})},Fe=t(34),Ne=function(e){var n=e.className,t=e.links,a=[n,"tabs"];return Object(u.jsx)("div",{className:a.join(" "),children:t.map((function(e){var n=["btn","btn_tab",e.isActive?"active":""];return Object(u.jsx)(Fe.b,{to:e.to,className:n.join(" "),children:e.name},e.to)}))})},He=function(){var e=Object(a.useContext)(h).globalStats;return Object(u.jsx)("div",{className:"info-board app-box block _mobile-fluid",children:Object(u.jsxs)("div",{className:"info-board__items",children:[Object(u.jsxs)("div",{className:"info-board__item",children:[Object(u.jsx)("div",{className:"info-board__item-title",children:"Total Supplied"}),Object(u.jsx)("div",{className:"info-board__item-val",children:de(e.totalSupplied,",")+" USDC"})]}),Object(u.jsxs)("div",{className:"info-board__item",children:[Object(u.jsx)("div",{className:"info-board__item-title",children:"Total Borrowed"}),Object(u.jsx)("div",{className:"info-board__item-val",children:de(e.totalBorrowed,",")+" USDC"})]}),Object(u.jsxs)("div",{className:"info-board__item",children:[Object(u.jsx)("div",{className:"info-board__item-title",children:"Utilization Rate"}),Object(u.jsx)("div",{className:"info-board__item-val",children:de(e.utilRate,",")+"%"})]}),Object(u.jsxs)("div",{className:"info-board__item",children:[Object(u.jsx)("div",{className:"info-board__item-title",children:"Available to Borrow"}),Object(u.jsx)("div",{className:"info-board__item-val",children:de(e.availToBorrow,",")+" USDC"})]}),Object(u.jsxs)("div",{className:"info-board__item",children:[Object(u.jsx)("div",{className:"info-board__item-title",children:"Supply APY"}),Object(u.jsx)("div",{className:"info-board__item-val",children:"0%"})]})]})})},Ue=function(e){var n=e.walletAddress,t=e.setWalletAddress,r=Object(he.i)(),o=Object(he.l)();Object(a.useEffect)((function(){"/"!==r.pathname&&"/app.html"!==r.pathname||o("/borrow-market")}),[r.pathname]);var d=[{name:"Borrow Market",to:"/borrow-market"},{name:"Supply Market",to:"/supply-market"}];d.find((function(e){return e.isActive=r.pathname===e.to,e.isActive}));var b=Object(a.useContext)(w).userStats,c=Object(a.useState)(0),l=Object(s.a)(c,2),f=l[0],p=l[1];return Object(a.useEffect)((function(){n&&ie.allowance(n,ne.address).then((function(e){Number(g.a.utils.formatUnits(e,6))>=b.balance?p(1):p(0)}))}),[b.balance,n]),Object(u.jsxs)(i.a.Fragment,{children:[Object(u.jsx)(Ne,{className:"market-tabs",links:d}),Object(u.jsx)(He,{}),Object(u.jsxs)(he.c,{children:[Object(u.jsx)(he.a,{path:"/borrow-market",element:Object(u.jsx)(Me,{walletAddress:n,setWalletAddress:t})}),Object(u.jsx)(he.a,{path:"/supply-market",element:Object(u.jsx)(qe,{walletAddress:n,setWalletAddress:t,supplyStep:f,setSupplyStep:p})})]})]})},ze=function(e){return Object(u.jsx)("div",{className:"warning",children:e.children})},Ve=t(78),We=t.n(Ve);var Xe=function(){var e=Object(a.useState)(""),n=Object(s.a)(e,2),t=n[0],r=n[1],o=Object(a.useState)({balance:void 0,curBalance:void 0,avail:void 0}),d=Object(s.a)(o,2),b=d[0],c=d[1],l=Object(a.useState)({totalSupplied:"",totalBorrowed:"",utilRate:"",availToBorrow:"",borrowAPY:""}),f=Object(s.a)(l,2),p=f[0],m=f[1];return Object(u.jsxs)(i.a.Fragment,{children:[Object(u.jsx)(We.a,{url:"https://i.imgur.com/dLCWse0.png"}),Object(u.jsx)(h.Provider,{value:{globalStats:p,setGlobalStats:m},children:Object(u.jsx)(w.Provider,{value:{userStats:b,setUserStats:c},children:Object(u.jsxs)("div",{className:"App",children:[Object(u.jsx)(ye,{walletAddress:t,setWalletAddress:r}),Object(u.jsx)("main",{className:"_container",children:Object(u.jsx)(Fe.a,{children:Object(u.jsx)(Ue,{walletAddress:t,setWalletAddress:r})})}),Object(u.jsx)(ve,{})]})})}),Object(u.jsx)(ze,{children:"DeDeLend is in beta. Use at your own risk"})]})};o.a.createRoot(document.getElementById("root")).render(Object(u.jsx)(i.a.StrictMode,{children:Object(u.jsx)(Xe,{})}))},36:function(e){e.exports=JSON.parse('{"address":"0x5B53d56c5a63ebBE852D9D911b7886A4338953f1","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"HEGIC_POOL_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"}],"name":"createOptionFor","outputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isApprovedOrOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"numDeployments":7}')},43:function(e){e.exports=JSON.parse('{"address":"0x75451c621CBa336eDe7DE12BC6AB28eA250C8371","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},44:function(e){e.exports=JSON.parse('{"address":"0xcfd2C370649dc6207E67d46D0f31f7B2adAf8484","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},45:function(e){e.exports=JSON.parse('{"address":"0x6409CEE09a0d2dCe8AA4Da2a7E1cA1A3351AFB7C","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},46:function(e){e.exports=JSON.parse('{"address":"0xE88595bCF5ee129AB619c388c91d5CC2Ce3eF7F1","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},47:function(e){e.exports=JSON.parse('{"address":"0xA321404B708682531B2a959c52AA8A53F35A14AE","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},48:function(e){e.exports=JSON.parse('{"address":"0xc8715eAB195CE1dF628ce3B89B63F3849a55Ffe9","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},49:function(e){e.exports=JSON.parse('{"address":"0x9F7e2a3dcf8Ba93B00EE5d3aF2419ebc1DBb6256","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},50:function(e){e.exports=JSON.parse('{"address":"0xAc28e549e5D61Ecb586f7FEE51Bcbf454591b082","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},51:function(e){e.exports=JSON.parse('{"address":"0x8DaB85712CB6DeE470b72D6c54A3F8426010ce28","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},52:function(e){e.exports=JSON.parse('{"address":"0xd90bB7bAB3dd51e3975c3A21a501D281AF969380","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},53:function(e){e.exports=JSON.parse('{"address":"0x6C8e62f6d0CEE278cb1EeA2E5B9F27a5787b9A61","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},54:function(e){e.exports=JSON.parse('{"address":"0x18448c71653FFd8196162c830d6aAC1752b759F7","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},55:function(e){e.exports=JSON.parse('{"address":"0x83305A6B2B906704Ed042CBEFAfe94DBc3f185DD","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},56:function(e){e.exports=JSON.parse('{"address":"0xB3C9DEac7c37d7144f61166baf91f5682fae7338","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},57:function(e){e.exports=JSON.parse('{"address":"0x824081Cd6397aBD018cfc039440594b832De8d2c","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},58:function(e){e.exports=JSON.parse('{"address":"0x7a4aF7AAF60292461098edDFA63e4095144331ff","abi":[{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"exercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"priceProvider","outputs":[{"internalType":"contract AggregatorV3Interface","name":"priceProvider","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"profitOf","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"strategyData","outputs":[{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"uint128","name":"strike","type":"uint128"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},59:function(e){e.exports=JSON.parse('{"address":"0xB0F9F032158510cd4a926F9263Abc86bAF7b4Ab3","abi":[{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"lockedLiquidity","outputs":[{"internalType":"enum IHegicOperationalTreasury.LockedLiquidityState","name":"state","type":"uint8"},{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint128","name":"negativepnl","type":"uint128"},{"internalType":"uint128","name":"positivepnl","type":"uint128"},{"internalType":"uint32","name":"expiration","type":"uint32"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},60:function(e){e.exports=JSON.parse('{"address":"0x04Bdb03AfD70bED097f291dad79EEa28813B5B26","abi":[{"inputs":[{"internalType":"address[4]","name":"_arrLongHegicStrategy","type":"address[4]"},{"internalType":"address[4]","name":"_arrShortHegicStrategy","type":"address[4]"},{"internalType":"contract IERC721","name":"_collateralToken","type":"address"},{"internalType":"contract IHegicOperationalTreasury","name":"_operationalPool","type":"address"},{"internalType":"contract IERC20","name":"_USDC","type":"address"},{"internalType":"uint256","name":"_minBorrowLimit","type":"uint256"},{"internalType":"uint256","name":"_ltv","type":"uint256"},{"internalType":"uint256","name":"_COLLATERAL_DECIMALS","type":"uint256"},{"internalType":"uint256","name":"_PriorLiqPriceCoef","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"userReturn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolReturn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"ExerciseByPriorLiqPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolProfit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"ForcedExercise","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolProfit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"Liquidate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"Unlock","type":"event"},{"inputs":[],"name":"COLLATERAL_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INTEREST_RATE_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LTV","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LTV_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PriorLiqPriceCoef","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"borrowedByOption","outputs":[{"internalType":"uint256","name":"borrowed","type":"uint256"},{"internalType":"uint256","name":"newBorrowTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"calculateUpcomingFee","outputs":[{"internalType":"uint256","name":"upcomingFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"collateralInfo","outputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"internalType":"address","name":"strategyAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"strike","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"internalType":"struct DDL.optionInfo","name":"strategy","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralToken","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"currentLiqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"currentPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exerciseByPriorLiqPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"forcedExercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"interestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"liqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"loanState","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"loanStateByPriorLiqPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"lockOption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"operationalPool","outputs":[{"internalType":"contract IHegicOperationalTreasury","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool","outputs":[{"internalType":"contract IPoolDDL","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"priorLiqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"profitByOption","outputs":[{"internalType":"uint256","name":"profit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setInterestRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setInterestRateDecimals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setLTV","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setMinBorrowLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"name":"setPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"strategyType","outputs":[{"internalType":"enum DDL.HegicStrategyType","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x11c03fcb16d2be83cbd5fea3a5e0d318393c0a89b2db0157efd67c528fc0e70b","receipt":{"to":null,"from":"0x0641bc55DDAb3b9636e82CbF87EDE3c3c533039d","contractAddress":"0x04Bdb03AfD70bED097f291dad79EEa28813B5B26","transactionIndex":1,"gasUsed":"11783356","logsBloom":"0xblockHash":"0x7e9b3d257fce12cfbabd44ba70d0b3053b54a48fba9c152a93406a7c916c4510","transactionHash":"0x11c03fcb16d2be83cbd5fea3a5e0d318393c0a89b2db0157efd67c528fc0e70b","logs":[{"transactionIndex":1,"blockNumber":27258073,"transactionHash":"0x11c03fcb16d2be83cbd5fea3a5e0d318393c0a89b2db0157efd67c528fc0e70b","address":"0x04Bdb03AfD70bED097f291dad79EEa28813B5B26","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000641bc55ddab3b9636e82cbf87ede3c3c533039d"],"data":"0x","logIndex":0,"blockHash":"0x7e9b3d257fce12cfbabd44ba70d0b3053b54a48fba9c152a93406a7c916c4510"}],"blockNumber":27258073,"cumulativeGasUsed":"11783356","status":1,"byzantium":true},"args":[["0x75451c621CBa336eDe7DE12BC6AB28eA250C8371","0xcfd2C370649dc6207E67d46D0f31f7B2adAf8484","0x6409CEE09a0d2dCe8AA4Da2a7E1cA1A3351AFB7C","0xE88595bCF5ee129AB619c388c91d5CC2Ce3eF7F1"],["0x8DaB85712CB6DeE470b72D6c54A3F8426010ce28","0xd90bB7bAB3dd51e3975c3A21a501D281AF969380","0x6C8e62f6d0CEE278cb1EeA2E5B9F27a5787b9A61","0x18448c71653FFd8196162c830d6aAC1752b759F7"],"0x5B53d56c5a63ebBE852D9D911b7886A4338953f1","0xB0F9F032158510cd4a926F9263Abc86bAF7b4Ab3","0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",1000000,5000,18,4],"numDeployments":1,"solcInputHash":"5f1699bd8d1774dc9c092814512a9850","metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.6+commit.11564f7e\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address[4]\\",\\"name\\":\\"_arrLongHegicStrategy\\",\\"type\\":\\"address[4]\\"},{\\"internalType\\":\\"address[4]\\",\\"name\\":\\"_arrShortHegicStrategy\\",\\"type\\":\\"address[4]\\"},{\\"internalType\\":\\"contract IERC721\\",\\"name\\":\\"_collateralToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"contract IHegicOperationalTreasury\\",\\"name\\":\\"_operationalPool\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_USDC\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minBorrowLimit\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_ltv\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_COLLATERAL_DECIMALS\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_PriorLiqPriceCoef\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"strategy\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"timestamp\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Borrow\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"userReturn\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"poolReturn\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"liqFee\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ExerciseByPriorLiqPrice\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"poolProfit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"liqFee\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ForcedExercise\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"poolProfit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"liqFee\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Liquidate\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Repay\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Unlock\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"COLLATERAL_DECIMALS\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"INTEREST_RATE_DECIMALS\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"LTV\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"LTV_DECIMALS\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"PriorLiqPriceCoef\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"USDC\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"borrow\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"borrowedByOption\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"borrowed\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"newBorrowTimestamp\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"calculateUpcomingFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"upcomingFee\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"collateralInfo\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"strategyAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"strike\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"expiration\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"isLong\\",\\"type\\":\\"bool\\"}],\\"internalType\\":\\"struct DDL.optionInfo\\",\\"name\\":\\"strategy\\",\\"type\\":\\"tuple\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"collateralToken\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC721\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"currentLiqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"currentPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"exerciseByPriorLiqPrice\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"forcedExercise\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"interestRate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"liqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"liquidate\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"loanState\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"loanStateByPriorLiqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"lockOption\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"maxBorrowLimit\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"minBorrowLimit\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"operationalPool\\",\\"outputs\\":[{\\"internalType\\":\\"contract IHegicOperationalTreasury\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pool\\",\\"outputs\\":[{\\"internalType\\":\\"contract IPoolDDL\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"priorLiqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"profitByOption\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"profit\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"repay\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setInterestRate\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setInterestRateDecimals\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setLTV\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMinBorrowLimit\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"value\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setPool\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"strategyType\\",\\"outputs\\":[{\\"internalType\\":\\"enum DDL.HegicStrategyType\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"unlock\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/DDL.sol\\":\\"DDL\\"},\\"evmVersion\\":\\"berlin\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity >=0.7.0;\\\\n\\\\ninterface AggregatorV3Interface {\\\\n\\\\n  function decimals() external view returns (uint8);\\\\n  function description() external view returns (string memory);\\\\n  function version() external view returns (uint256);\\\\n\\\\n  // getRoundData and latestRoundData should both raise \\\\\\"No data present\\\\\\"\\\\n  // if they do not have data to report, instead of returning unset values\\\\n  // which could be misinterpreted as actual reported values.\\\\n  function getRoundData(uint80 _roundId)\\\\n    external\\\\n    view\\\\n    returns (\\\\n      uint80 roundId,\\\\n      int256 answer,\\\\n      uint256 startedAt,\\\\n      uint256 updatedAt,\\\\n      uint80 answeredInRound\\\\n    );\\\\n  function latestRoundData()\\\\n    external\\\\n    view\\\\n    returns (\\\\n      uint80 roundId,\\\\n      int256 answer,\\\\n      uint256 startedAt,\\\\n      uint256 updatedAt,\\\\n      uint80 answeredInRound\\\\n    );\\\\n\\\\n}\\\\n\\",\\"keccak256\\":\\"0x78af5c13ec137bdbb22ec9d65c730fb6f138d3a61a3fdbb63be4838ce7faf2a6\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor() {\\\\n        _transferOwnership(_msgSender());\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        _checkOwner();\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if the sender is not the owner.\\\\n     */\\\\n    function _checkOwner() internal view virtual {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        _transferOwnership(address(0));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        _transferOwnership(newOwner);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Internal function without access restriction.\\\\n     */\\\\n    function _transferOwnership(address newOwner) internal virtual {\\\\n        address oldOwner = _owner;\\\\n        _owner = newOwner;\\\\n        emit OwnershipTransferred(oldOwner, newOwner);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\n */\\\\ninterface IERC20 {\\\\n    /**\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\n     * another (`to`).\\\\n     *\\\\n     * Note that `value` may be zero.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\n     * a call to {approve}. `value` is the new allowance.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens in existence.\\\\n     */\\\\n    function totalSupply() external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\n     */\\\\n    function balanceOf(address account) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transfer(address to, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\n     * zero by default.\\\\n     *\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\n     */\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\n     * desired value afterwards:\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\n     * allowance.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) external returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\\\n *\\\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\\\n * need to send a transaction, and thus is not required to hold Ether at all.\\\\n */\\\\ninterface IERC20Permit {\\\\n    /**\\\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\\\n     * given ``owner``\'s signed approval.\\\\n     *\\\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\\\n     * ordering also apply here.\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `spender` cannot be the zero address.\\\\n     * - `deadline` must be a timestamp in the future.\\\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\\\n     * over the EIP712-formatted function arguments.\\\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\\\n     *\\\\n     * For more information on the signature format, see the\\\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\\\n     * section].\\\\n     */\\\\n    function permit(\\\\n        address owner,\\\\n        address spender,\\\\n        uint256 value,\\\\n        uint256 deadline,\\\\n        uint8 v,\\\\n        bytes32 r,\\\\n        bytes32 s\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Returns the current nonce for `owner`. This value must be\\\\n     * included whenever a signature is generated for {permit}.\\\\n     *\\\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\\\n     * prevents a signature from being used multiple times.\\\\n     */\\\\n    function nonces(address owner) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\\\n     */\\\\n    // solhint-disable-next-line func-name-mixedcase\\\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../IERC20.sol\\\\\\";\\\\nimport \\\\\\"../extensions/draft-IERC20Permit.sol\\\\\\";\\\\nimport \\\\\\"../../../utils/Address.sol\\\\\\";\\\\n\\\\n/**\\\\n * @title SafeERC20\\\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\\\n * contract returns false). Tokens that return no value (and instead revert or\\\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\\\n * successful.\\\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\\\n */\\\\nlibrary SafeERC20 {\\\\n    using Address for address;\\\\n\\\\n    function safeTransfer(\\\\n        IERC20 token,\\\\n        address to,\\\\n        uint256 value\\\\n    ) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\\\n    }\\\\n\\\\n    function safeTransferFrom(\\\\n        IERC20 token,\\\\n        address from,\\\\n        address to,\\\\n        uint256 value\\\\n    ) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Deprecated. This function has issues similar to the ones found in\\\\n     * {IERC20-approve}, and its usage is discouraged.\\\\n     *\\\\n     * Whenever possible, use {safeIncreaseAllowance} and\\\\n     * {safeDecreaseAllowance} instead.\\\\n     */\\\\n    function safeApprove(\\\\n        IERC20 token,\\\\n        address spender,\\\\n        uint256 value\\\\n    ) internal {\\\\n        // safeApprove should only be called when setting an initial allowance,\\\\n        // or when resetting it to zero. To increase and decrease it, use\\\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\\\n        require(\\\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\\\n            \\\\\\"SafeERC20: approve from non-zero to non-zero allowance\\\\\\"\\\\n        );\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\\\n    }\\\\n\\\\n    function safeIncreaseAllowance(\\\\n        IERC20 token,\\\\n        address spender,\\\\n        uint256 value\\\\n    ) internal {\\\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n    }\\\\n\\\\n    function safeDecreaseAllowance(\\\\n        IERC20 token,\\\\n        address spender,\\\\n        uint256 value\\\\n    ) internal {\\\\n        unchecked {\\\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\\\n            require(oldAllowance >= value, \\\\\\"SafeERC20: decreased allowance below zero\\\\\\");\\\\n            uint256 newAllowance = oldAllowance - value;\\\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n        }\\\\n    }\\\\n\\\\n    function safePermit(\\\\n        IERC20Permit token,\\\\n        address owner,\\\\n        address spender,\\\\n        uint256 value,\\\\n        uint256 deadline,\\\\n        uint8 v,\\\\n        bytes32 r,\\\\n        bytes32 s\\\\n    ) internal {\\\\n        uint256 nonceBefore = token.nonces(owner);\\\\n        token.permit(owner, spender, value, deadline, v, r, s);\\\\n        uint256 nonceAfter = token.nonces(owner);\\\\n        require(nonceAfter == nonceBefore + 1, \\\\\\"SafeERC20: permit did not succeed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\\\n     * @param token The token targeted by the call.\\\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\\\n     */\\\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\\\n        // we\'re implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\\\n        // the target address contains contract code and also asserts for success in the low-level call.\\\\n\\\\n        bytes memory returndata = address(token).functionCall(data, \\\\\\"SafeERC20: low-level call failed\\\\\\");\\\\n        if (returndata.length > 0) {\\\\n            // Return data is optional\\\\n            require(abi.decode(returndata, (bool)), \\\\\\"SafeERC20: ERC20 operation did not succeed\\\\\\");\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC721.sol\\\\\\";\\\\nimport \\\\\\"./IERC721Receiver.sol\\\\\\";\\\\nimport \\\\\\"./extensions/IERC721Metadata.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Address.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Context.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Strings.sol\\\\\\";\\\\nimport \\\\\\"../../utils/introspection/ERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\\\n * {ERC721Enumerable}.\\\\n */\\\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\\\n    using Address for address;\\\\n    using Strings for uint256;\\\\n\\\\n    // Token name\\\\n    string private _name;\\\\n\\\\n    // Token symbol\\\\n    string private _symbol;\\\\n\\\\n    // Mapping from token ID to owner address\\\\n    mapping(uint256 => address) private _owners;\\\\n\\\\n    // Mapping owner address to token count\\\\n    mapping(address => uint256) private _balances;\\\\n\\\\n    // Mapping from token ID to approved address\\\\n    mapping(uint256 => address) private _tokenApprovals;\\\\n\\\\n    // Mapping from owner to operator approvals\\\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\\\n     */\\\\n    constructor(string memory name_, string memory symbol_) {\\\\n        _name = name_;\\\\n        _symbol = symbol_;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC165-supportsInterface}.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\\\n        return\\\\n            interfaceId == type(IERC721).interfaceId ||\\\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\\\n            super.supportsInterface(interfaceId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-balanceOf}.\\\\n     */\\\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\\\n        require(owner != address(0), \\\\\\"ERC721: address zero is not a valid owner\\\\\\");\\\\n        return _balances[owner];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-ownerOf}.\\\\n     */\\\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\\\n        address owner = _owners[tokenId];\\\\n        require(owner != address(0), \\\\\\"ERC721: invalid token ID\\\\\\");\\\\n        return owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721Metadata-name}.\\\\n     */\\\\n    function name() public view virtual override returns (string memory) {\\\\n        return _name;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721Metadata-symbol}.\\\\n     */\\\\n    function symbol() public view virtual override returns (string memory) {\\\\n        return _symbol;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721Metadata-tokenURI}.\\\\n     */\\\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\\\n        _requireMinted(tokenId);\\\\n\\\\n        string memory baseURI = _baseURI();\\\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\\\\"\\\\\\";\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\\\n     * by default, can be overridden in child contracts.\\\\n     */\\\\n    function _baseURI() internal view virtual returns (string memory) {\\\\n        return \\\\\\"\\\\\\";\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-approve}.\\\\n     */\\\\n    function approve(address to, uint256 tokenId) public virtual override {\\\\n        address owner = ERC721.ownerOf(tokenId);\\\\n        require(to != owner, \\\\\\"ERC721: approval to current owner\\\\\\");\\\\n\\\\n        require(\\\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\\\n            \\\\\\"ERC721: approve caller is not token owner nor approved for all\\\\\\"\\\\n        );\\\\n\\\\n        _approve(to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-getApproved}.\\\\n     */\\\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\\\n        _requireMinted(tokenId);\\\\n\\\\n        return _tokenApprovals[tokenId];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-setApprovalForAll}.\\\\n     */\\\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\\\n        _setApprovalForAll(_msgSender(), operator, approved);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-isApprovedForAll}.\\\\n     */\\\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\\\n        return _operatorApprovals[owner][operator];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-transferFrom}.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) public virtual override {\\\\n        //solhint-disable-next-line max-line-length\\\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\\\\"ERC721: caller is not token owner nor approved\\\\\\");\\\\n\\\\n        _transfer(from, to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-safeTransferFrom}.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) public virtual override {\\\\n        safeTransferFrom(from, to, tokenId, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-safeTransferFrom}.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) public virtual override {\\\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\\\\"ERC721: caller is not token owner nor approved\\\\\\");\\\\n        _safeTransfer(from, to, tokenId, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\\\n     *\\\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\\\n     *\\\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must exist and be owned by `from`.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _safeTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        _transfer(from, to, tokenId);\\\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\\\\"ERC721: transfer to non ERC721Receiver implementer\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns whether `tokenId` exists.\\\\n     *\\\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\\\n     *\\\\n     * Tokens start existing when they are minted (`_mint`),\\\\n     * and stop existing when they are burned (`_burn`).\\\\n     */\\\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\\\n        return _owners[tokenId] != address(0);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     */\\\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\\\n        address owner = ERC721.ownerOf(tokenId);\\\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must not exist.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\\\n        _safeMint(to, tokenId, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\\\n     */\\\\n    function _safeMint(\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        _mint(to, tokenId);\\\\n        require(\\\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\\\n            \\\\\\"ERC721: transfer to non ERC721Receiver implementer\\\\\\"\\\\n        );\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Mints `tokenId` and transfers it to `to`.\\\\n     *\\\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must not exist.\\\\n     * - `to` cannot be the zero address.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _mint(address to, uint256 tokenId) internal virtual {\\\\n        require(to != address(0), \\\\\\"ERC721: mint to the zero address\\\\\\");\\\\n        require(!_exists(tokenId), \\\\\\"ERC721: token already minted\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(address(0), to, tokenId);\\\\n\\\\n        _balances[to] += 1;\\\\n        _owners[tokenId] = to;\\\\n\\\\n        emit Transfer(address(0), to, tokenId);\\\\n\\\\n        _afterTokenTransfer(address(0), to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Destroys `tokenId`.\\\\n     * The approval is cleared when the token is burned.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _burn(uint256 tokenId) internal virtual {\\\\n        address owner = ERC721.ownerOf(tokenId);\\\\n\\\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\\\n\\\\n        // Clear approvals\\\\n        _approve(address(0), tokenId);\\\\n\\\\n        _balances[owner] -= 1;\\\\n        delete _owners[tokenId];\\\\n\\\\n        emit Transfer(owner, address(0), tokenId);\\\\n\\\\n        _afterTokenTransfer(owner, address(0), tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers `tokenId` from `from` to `to`.\\\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must be owned by `from`.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _transfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) internal virtual {\\\\n        require(ERC721.ownerOf(tokenId) == from, \\\\\\"ERC721: transfer from incorrect owner\\\\\\");\\\\n        require(to != address(0), \\\\\\"ERC721: transfer to the zero address\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(from, to, tokenId);\\\\n\\\\n        // Clear approvals from the previous owner\\\\n        _approve(address(0), tokenId);\\\\n\\\\n        _balances[from] -= 1;\\\\n        _balances[to] += 1;\\\\n        _owners[tokenId] = to;\\\\n\\\\n        emit Transfer(from, to, tokenId);\\\\n\\\\n        _afterTokenTransfer(from, to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Approve `to` to operate on `tokenId`\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function _approve(address to, uint256 tokenId) internal virtual {\\\\n        _tokenApprovals[tokenId] = to;\\\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\\\n     *\\\\n     * Emits an {ApprovalForAll} event.\\\\n     */\\\\n    function _setApprovalForAll(\\\\n        address owner,\\\\n        address operator,\\\\n        bool approved\\\\n    ) internal virtual {\\\\n        require(owner != operator, \\\\\\"ERC721: approve to caller\\\\\\");\\\\n        _operatorApprovals[owner][operator] = approved;\\\\n        emit ApprovalForAll(owner, operator, approved);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\\\n     */\\\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\\\n        require(_exists(tokenId), \\\\\\"ERC721: invalid token ID\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\\\n     * The call is not executed if the target address is not a contract.\\\\n     *\\\\n     * @param from address representing the previous owner of the given token ID\\\\n     * @param to target address that will receive the tokens\\\\n     * @param tokenId uint256 ID of the token to be transferred\\\\n     * @param data bytes optional data to send along with the call\\\\n     * @return bool whether the call correctly returned the expected magic value\\\\n     */\\\\n    function _checkOnERC721Received(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) private returns (bool) {\\\\n        if (to.isContract()) {\\\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\\\n                return retval == IERC721Receiver.onERC721Received.selector;\\\\n            } catch (bytes memory reason) {\\\\n                if (reason.length == 0) {\\\\n                    revert(\\\\\\"ERC721: transfer to non ERC721Receiver implementer\\\\\\");\\\\n                } else {\\\\n                    /// @solidity memory-safe-assembly\\\\n                    assembly {\\\\n                        revert(add(32, reason), mload(reason))\\\\n                    }\\\\n                }\\\\n            }\\\\n        } else {\\\\n            return true;\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Hook that is called before any token transfer. This includes minting\\\\n     * and burning.\\\\n     *\\\\n     * Calling conditions:\\\\n     *\\\\n     * - When `from` and `to` are both non-zero, ``from``\'s `tokenId` will be\\\\n     * transferred to `to`.\\\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\\\n     * - When `to` is zero, ``from``\'s `tokenId` will be burned.\\\\n     * - `from` and `to` are never both zero.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _beforeTokenTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) internal virtual {}\\\\n\\\\n    /**\\\\n     * @dev Hook that is called after any transfer of tokens. This includes\\\\n     * minting and burning.\\\\n     *\\\\n     * Calling conditions:\\\\n     *\\\\n     * - when `from` and `to` are both non-zero.\\\\n     * - `from` and `to` are never both zero.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _afterTokenTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) internal virtual {}\\\\n}\\\\n\\",\\"keccak256\\":\\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../../utils/introspection/IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Required interface of an ERC721 compliant contract.\\\\n */\\\\ninterface IERC721 is IERC165 {\\\\n    /**\\\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\\\n\\\\n    /**\\\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\\\n\\\\n    /**\\\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\\\n     */\\\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\\\n\\\\n    /**\\\\n     * @dev Returns the number of tokens in ``owner``\'s account.\\\\n     */\\\\n    function balanceOf(address owner) external view returns (uint256 balance);\\\\n\\\\n    /**\\\\n     * @dev Returns the owner of the `tokenId` token.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     */\\\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\\\n\\\\n    /**\\\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must exist and be owned by `from`.\\\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes calldata data\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must exist and be owned by `from`.\\\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\\\n     *\\\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must be owned by `from`.\\\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\\\n     * The approval is cleared when the token is transferred.\\\\n     *\\\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The caller must own the token or be an approved operator.\\\\n     * - `tokenId` must exist.\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address to, uint256 tokenId) external;\\\\n\\\\n    /**\\\\n     * @dev Approve or remove `operator` as an operator for the caller.\\\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The `operator` cannot be the caller.\\\\n     *\\\\n     * Emits an {ApprovalForAll} event.\\\\n     */\\\\n    function setApprovalForAll(address operator, bool _approved) external;\\\\n\\\\n    /**\\\\n     * @dev Returns the account approved for `tokenId` token.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     */\\\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\\\n\\\\n    /**\\\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\\\n     *\\\\n     * See {setApprovalForAll}\\\\n     */\\\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @title ERC721 token receiver interface\\\\n * @dev Interface for any contract that wants to support safeTransfers\\\\n * from ERC721 asset contracts.\\\\n */\\\\ninterface IERC721Receiver {\\\\n    /**\\\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\\\n     * by `operator` from `from`, this function is called.\\\\n     *\\\\n     * It must return its Solidity selector to confirm the token transfer.\\\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\\\n     *\\\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\\\n     */\\\\n    function onERC721Received(\\\\n        address operator,\\\\n        address from,\\\\n        uint256 tokenId,\\\\n        bytes calldata data\\\\n    ) external returns (bytes4);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../IERC721.sol\\\\\\";\\\\n\\\\n/**\\\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\\\n */\\\\ninterface IERC721Metadata is IERC721 {\\\\n    /**\\\\n     * @dev Returns the token collection name.\\\\n     */\\\\n    function name() external view returns (string memory);\\\\n\\\\n    /**\\\\n     * @dev Returns the token collection symbol.\\\\n     */\\\\n    function symbol() external view returns (string memory);\\\\n\\\\n    /**\\\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\\\n     */\\\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Address.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\\\n\\\\npragma solidity ^0.8.1;\\\\n\\\\n/**\\\\n * @dev Collection of functions related to the address type\\\\n */\\\\nlibrary Address {\\\\n    /**\\\\n     * @dev Returns true if `account` is a contract.\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * It is unsafe to assume that an address for which this function returns\\\\n     * false is an externally-owned account (EOA) and not a contract.\\\\n     *\\\\n     * Among others, `isContract` will return false for the following\\\\n     * types of addresses:\\\\n     *\\\\n     *  - an externally-owned account\\\\n     *  - a contract in construction\\\\n     *  - an address where a contract will be created\\\\n     *  - an address where a contract lived, but was destroyed\\\\n     * ====\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * You shouldn\'t rely on `isContract` to protect against flash loan attacks!\\\\n     *\\\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\\\n     * constructor.\\\\n     * ====\\\\n     */\\\\n    function isContract(address account) internal view returns (bool) {\\\\n        // This method relies on extcodesize/address.code.length, which returns 0\\\\n        // for contracts in construction, since the code is only stored at the end\\\\n        // of the constructor execution.\\\\n\\\\n        return account.code.length > 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Replacement for Solidity\'s `transfer`: sends `amount` wei to\\\\n     * `recipient`, forwarding all available gas and reverting on errors.\\\\n     *\\\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\\\n     * imposed by `transfer`, making them unable to receive funds via\\\\n     * `transfer`. {sendValue} removes this limitation.\\\\n     *\\\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\\\n     *\\\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\\\n     * taken to not create reentrancy vulnerabilities. Consider using\\\\n     * {ReentrancyGuard} or the\\\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\\\n     */\\\\n    function sendValue(address payable recipient, uint256 amount) internal {\\\\n        require(address(this).balance >= amount, \\\\\\"Address: insufficient balance\\\\\\");\\\\n\\\\n        (bool success, ) = recipient.call{value: amount}(\\\\\\"\\\\\\");\\\\n        require(success, \\\\\\"Address: unable to send value, recipient may have reverted\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Performs a Solidity function call using a low level `call`. A\\\\n     * plain `call` is an unsafe replacement for a function call: use this\\\\n     * function instead.\\\\n     *\\\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\\\n     * function (like regular Solidity function calls).\\\\n     *\\\\n     * Returns the raw returned data. To convert to the expected return value,\\\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `target` must be a contract.\\\\n     * - calling `target` with `data` must not revert.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionCall(target, data, \\\\\\"Address: low-level call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, 0, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but also transferring `value` wei to `target`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - the calling contract must have an ETH balance of at least `value`.\\\\n     * - the called Solidity function must be `payable`.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(\\\\n        address target,\\\\n        bytes memory data,\\\\n        uint256 value\\\\n    ) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, value, \\\\\\"Address: low-level call with value failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(\\\\n        address target,\\\\n        bytes memory data,\\\\n        uint256 value,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        require(address(this).balance >= value, \\\\\\"Address: insufficient balance for call\\\\\\");\\\\n        require(isContract(target), \\\\\\"Address: call to non-contract\\\\\\");\\\\n\\\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\\\n        return verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\\\n        return functionStaticCall(target, data, \\\\\\"Address: low-level static call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal view returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: static call to non-contract\\\\\\");\\\\n\\\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\\\n        return verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionDelegateCall(target, data, \\\\\\"Address: low-level delegate call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: delegate call to non-contract\\\\\\");\\\\n\\\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\\\n        return verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn\'t, either by bubbling the\\\\n     * revert reason using the provided one.\\\\n     *\\\\n     * _Available since v4.3._\\\\n     */\\\\n    function verifyCallResult(\\\\n        bool success,\\\\n        bytes memory returndata,\\\\n        string memory errorMessage\\\\n    ) internal pure returns (bytes memory) {\\\\n        if (success) {\\\\n            return returndata;\\\\n        } else {\\\\n            // Look for revert reason and bubble it up if present\\\\n            if (returndata.length > 0) {\\\\n                // The easiest way to bubble the revert reason is using memory via assembly\\\\n                /// @solidity memory-safe-assembly\\\\n                assembly {\\\\n                    let returndata_size := mload(returndata)\\\\n                    revert(add(32, returndata), returndata_size)\\\\n                }\\\\n            } else {\\\\n                revert(errorMessage);\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes calldata) {\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Strings.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev String operations.\\\\n */\\\\nlibrary Strings {\\\\n    bytes16 private constant _HEX_SYMBOLS = \\\\\\"0123456789abcdef\\\\\\";\\\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\\\n\\\\n    /**\\\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\\\n     */\\\\n    function toString(uint256 value) internal pure returns (string memory) {\\\\n        // Inspired by OraclizeAPI\'s implementation - MIT licence\\\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\\\n\\\\n        if (value == 0) {\\\\n            return \\\\\\"0\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 digits;\\\\n        while (temp != 0) {\\\\n            digits++;\\\\n            temp /= 10;\\\\n        }\\\\n        bytes memory buffer = new bytes(digits);\\\\n        while (value != 0) {\\\\n            digits -= 1;\\\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\\\n            value /= 10;\\\\n        }\\\\n        return string(buffer);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\\\n     */\\\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\\\n        if (value == 0) {\\\\n            return \\\\\\"0x00\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 length = 0;\\\\n        while (temp != 0) {\\\\n            length++;\\\\n            temp >>= 8;\\\\n        }\\\\n        return toHexString(value, length);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\\\n     */\\\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\\\n        bytes memory buffer = new bytes(2 * length + 2);\\\\n        buffer[0] = \\\\\\"0\\\\\\";\\\\n        buffer[1] = \\\\\\"x\\\\\\";\\\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\\\n            value >>= 4;\\\\n        }\\\\n        require(value == 0, \\\\\\"Strings: hex length insufficient\\\\\\");\\\\n        return string(buffer);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\\\n     */\\\\n    function toHexString(address addr) internal pure returns (string memory) {\\\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of the {IERC165} interface.\\\\n *\\\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\\\n * for the additional interface id that will be supported. For example:\\\\n *\\\\n * ```solidity\\\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\\\n * }\\\\n * ```\\\\n *\\\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\\\n */\\\\nabstract contract ERC165 is IERC165 {\\\\n    /**\\\\n     * @dev See {IERC165-supportsInterface}.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\\\n        return interfaceId == type(IERC165).interfaceId;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC165 standard, as defined in the\\\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\\\n *\\\\n * Implementers can declare support of contract interfaces, which can then be\\\\n * queried by others ({ERC165Checker}).\\\\n *\\\\n * For an implementation, see {ERC165}.\\\\n */\\\\ninterface IERC165 {\\\\n    /**\\\\n     * @dev Returns true if this contract implements the interface defined by\\\\n     * `interfaceId`. See the corresponding\\\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\\\n     * to learn more about how these ids are created.\\\\n     *\\\\n     * This function call must use less than 30 000 gas.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\"},\\"contracts/DDL.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: RANDOM_TEXT\\\\n\\\\npragma solidity 0.8.6;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\\\\";\\\\nimport \\\\\\"./IHegicOperationalTreasury.sol\\\\\\";\\\\nimport \\\\\\"./IHegicStrategy.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\\\\";\\\\nimport \\\\\\"./IPoolDDL.sol\\\\\\";\\\\n\\\\ncontract DDL is Ownable {\\\\n    using SafeERC20 for IERC20;\\\\n\\\\n    uint256 public LTV;\\\\n    uint256 public LTV_DECIMALS = 10**4;\\\\n\\\\n    IERC721 public collateralToken;\\\\n    IHegicOperationalTreasury public operationalPool;\\\\n    IERC20 public USDC;\\\\n\\\\n    uint256 public interestRate = 19025875190258754083880960;\\\\n    uint256 public INTEREST_RATE_DECIMALS = 10**30;\\\\n\\\\n    uint256 public minBorrowLimit;\\\\n    uint256 public COLLATERAL_DECIMALS;\\\\n\\\\n    uint256 public PriorLiqPriceCoef;\\\\n\\\\n    IPoolDDL public pool;\\\\n\\\\n    struct BorrowedByOption {\\\\n        uint256 borrowed;\\\\n        uint256 newBorrowTimestamp;\\\\n    }\\\\n    struct optionInfo {\\\\n        address strategyAddress;\\\\n        uint256 amount;\\\\n        uint256 strike;\\\\n        uint256 expiration;\\\\n        bool isLong;\\\\n    }\\\\n    struct CollateralInfo {\\\\n        address owner;\\\\n        optionInfo strategy;\\\\n    }\\\\n\\\\n    enum HegicStrategyType {\\\\n        Invalid,\\\\n        Long,\\\\n        Short\\\\n    }\\\\n\\\\n    mapping(uint256 => CollateralInfo) public collateralInfo;\\\\n    mapping(uint256 => BorrowedByOption) public borrowedByOption;\\\\n    mapping(address => HegicStrategyType) public strategyType;\\\\n\\\\n    event Borrow(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 amount,\\\\n        address strategy,\\\\n        uint256 timestamp\\\\n    );\\\\n    event Repay(address indexed user, uint256 indexed optionID, uint256 amount);\\\\n    event Liquidate(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 amount,\\\\n        uint256 poolProfit,\\\\n        uint256 liqFee\\\\n    );\\\\n    event Unlock(address indexed user, uint256 indexed optionID);\\\\n    event ForcedExercise(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 amount,\\\\n        uint256 poolProfit,\\\\n        uint256 liqFee\\\\n    );\\\\n    event ExerciseByPriorLiqPrice(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 userReturn,\\\\n        uint256 poolReturn,\\\\n        uint256 liqFee\\\\n    );\\\\n\\\\n    constructor(\\\\n        address[4] memory _arrLongHegicStrategy,\\\\n        address[4] memory _arrShortHegicStrategy,\\\\n        IERC721 _collateralToken,\\\\n        IHegicOperationalTreasury _operationalPool,\\\\n        IERC20 _USDC,\\\\n        uint256 _minBorrowLimit,\\\\n        uint256 _ltv,\\\\n        uint256 _COLLATERAL_DECIMALS,\\\\n        uint256 _PriorLiqPriceCoef\\\\n    ) {\\\\n        for (uint256 i = 0; i < _arrLongHegicStrategy.length; i++) {\\\\n            strategyType[_arrLongHegicStrategy[i]] = HegicStrategyType.Long;\\\\n        }\\\\n        for (uint256 i = 0; i < _arrShortHegicStrategy.length; i++) {\\\\n            strategyType[_arrShortHegicStrategy[i]] = HegicStrategyType.Short;\\\\n        }\\\\n        collateralToken = _collateralToken;\\\\n        operationalPool = _operationalPool;\\\\n        USDC = _USDC;\\\\n        minBorrowLimit = _minBorrowLimit;\\\\n        LTV = _ltv;\\\\n        COLLATERAL_DECIMALS = 10**_COLLATERAL_DECIMALS;\\\\n        PriorLiqPriceCoef = _PriorLiqPriceCoef;\\\\n    }\\\\n\\\\n    function setLTV(uint256 value) external onlyOwner {\\\\n        require(value <= 8000, \\\\\\"invalid value\\\\\\");\\\\n        LTV = value;\\\\n    }\\\\n\\\\n    function setInterestRate(uint256 value) external onlyOwner {\\\\n        interestRate = value;\\\\n    }\\\\n\\\\n    function setInterestRateDecimals(uint256 value) external onlyOwner {\\\\n        INTEREST_RATE_DECIMALS = value;\\\\n    }\\\\n\\\\n    function setMinBorrowLimit(uint256 value) external onlyOwner {\\\\n        minBorrowLimit = value;\\\\n    }\\\\n\\\\n    function setPool(address value) external onlyOwner {\\\\n        pool = IPoolDDL(value);\\\\n    }\\\\n\\\\n    function lockOption(uint256 id) external {\\\\n        require(pool.openDeDeLend(), \\\\\\"pauseDeDeLend\\\\\\");\\\\n        (\\\\n            IHegicOperationalTreasury.LockedLiquidityState state,\\\\n            address strategy,\\\\n            ,\\\\n            ,\\\\n            uint32 expiration\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        require(block.timestamp <= uint256(expiration) - 60*60, \\\\\\"too late\\\\\\");\\\\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\\\\n            .strategyData(id);\\\\n        require(\\\\n            state == IHegicOperationalTreasury.LockedLiquidityState.Locked,\\\\n            \\\\\\"option is active\\\\\\"\\\\n        );\\\\n        require(collateralToken.ownerOf(id) == msg.sender, \\\\\\"you not owner\\\\\\");\\\\n        require(\\\\n            strategyType[strategy] != HegicStrategyType.Invalid,\\\\n            \\\\\\"strategy not supported\\\\\\"\\\\n        );\\\\n        collateralToken.transferFrom(msg.sender, address(this), id);\\\\n        bool isLong = strategyType[strategy] == HegicStrategyType.Long ? true: false;\\\\n        collateralInfo[id] = CollateralInfo(\\\\n            msg.sender,\\\\n            optionInfo(\\\\n                strategy,\\\\n                uint256(amount),\\\\n                uint256(strike),\\\\n                uint256(expiration),\\\\n                isLong\\\\n            )\\\\n        );\\\\n    }\\\\n\\\\n    function maxBorrowLimit(uint256 id) public view returns (uint256) {\\\\n        return (profitByOption(id) / LTV_DECIMALS) * LTV;\\\\n    }\\\\n\\\\n    function borrow(uint256 id, uint256 amount) external {\\\\n        require(pool.openDeDeLend(), \\\\\\"pauseDeDeLend\\\\\\");\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 maxLimit = maxBorrowLimit(id);\\\\n        (\\\\n            IHegicOperationalTreasury.LockedLiquidityState state,\\\\n            ,\\\\n            ,\\\\n            ,\\\\n\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        uint256 totalBalance = pool.getTotalBalance(); \\\\n        require(amount >= minBorrowLimit, \\\\\\"amount less minBorrowLimit\\\\\\");\\\\n        require(amount + data.borrowed <= maxLimit, \\\\\\"amount + data.borrowed less maxLimit\\\\\\");\\\\n        require(state == IHegicOperationalTreasury.LockedLiquidityState.Locked, \\\\\\"invalid state\\\\\\");\\\\n        require(msg.sender == collateralInfo[id].owner, \\\\\\"you are not the owner\\\\\\");\\\\n        require(amount <= totalBalance, \\\\\\"there is not enough money in the pool\\\\\\");\\\\n        require(block.timestamp <= collateralInfo[id].strategy.expiration - 60*60, \\\\\\"too late\\\\\\");\\\\n        if (collateralInfo[id].strategy.isLong) {\\\\n            require(currentPrice(id) > priorLiqPrice(id), \\\\\\"the price is too low\\\\\\");\\\\n        } else {\\\\n            require(currentPrice(id) < priorLiqPrice(id), \\\\\\"the price is too high\\\\\\");\\\\n        }\\\\n        uint256 upcomingFee = calculateUpcomingFee(id);\\\\n        borrowedByOption[id] = BorrowedByOption(\\\\n            amount + data.borrowed + upcomingFee,\\\\n            block.timestamp\\\\n        );\\\\n        pool.addTotalLocked(amount + upcomingFee);\\\\n        pool.send(collateralInfo[id].owner, amount);\\\\n        emit Borrow(\\\\n            msg.sender,\\\\n            id,\\\\n            amount,\\\\n            collateralInfo[id].strategy.strategyAddress,\\\\n            block.timestamp\\\\n        );\\\\n    }\\\\n\\\\n    function liquidate(uint256 id) external {\\\\n        require(loanState(id), \\\\\\"invalid price\\\\\\");\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 profit = profitByOption(id);\\\\n        exerciseOption(id);\\\\n        uint256 diff = 0;\\\\n        pool.subTotalLocked(data.borrowed);\\\\n        if (profit > data.borrowed) {\\\\n            diff = profit - data.borrowed;\\\\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\\\\n            USDC.transfer(msg.sender, diff*10/100);\\\\n        } else {\\\\n            USDC.transfer(address(pool), profit);\\\\n        }\\\\n        emit Liquidate(\\\\n            collateralInfo[id].owner,\\\\n            id,\\\\n            data.borrowed,\\\\n            diff*90/100,\\\\n            diff*10/100\\\\n        );\\\\n    }\\\\n\\\\n    function forcedExercise(uint256 id) external {\\\\n        require(\\\\n            block.timestamp > collateralInfo[id].strategy.expiration - 30 * 60\\\\n        );\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 profit = profitByOption(id);\\\\n        exerciseOption(id);\\\\n        uint256 diff = 0;\\\\n        pool.subTotalLocked(data.borrowed);\\\\n        if (profit > data.borrowed) {\\\\n            diff = profit - data.borrowed;\\\\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\\\\n            USDC.transfer(msg.sender, diff*10/100);\\\\n        } else {\\\\n            USDC.transfer(address(pool), profit);\\\\n        }\\\\n        emit ForcedExercise(\\\\n            collateralInfo[id].owner,\\\\n            id,\\\\n            data.borrowed,\\\\n            diff*90/100,\\\\n            diff*10/100\\\\n        );\\\\n    }\\\\n\\\\n    function exerciseByPriorLiqPrice(uint256 id) external {\\\\n        require(loanStateByPriorLiqPrice(id), \\\\\\"invalid price\\\\\\");\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 profit = profitByOption(id);\\\\n        exerciseOption(id);\\\\n        pool.subTotalLocked(data.borrowed);\\\\n        USDC.transfer(address(pool), data.borrowed);\\\\n        USDC.transfer(collateralInfo[id].owner, profit - (data.borrowed + data.borrowed*10/100));\\\\n        USDC.transfer(msg.sender, data.borrowed*10/100);\\\\n        emit ExerciseByPriorLiqPrice(\\\\n            collateralInfo[id].owner,\\\\n            id,\\\\n            profit - (data.borrowed + data.borrowed*10/100),\\\\n            data.borrowed,\\\\n            data.borrowed*10/100\\\\n        );\\\\n    }\\\\n\\\\n    function calculateUpcomingFee(uint256 id)\\\\n        public\\\\n        view\\\\n        returns (uint256 upcomingFee)\\\\n    {\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 periodInMinutes = (block.timestamp - data.newBorrowTimestamp) /\\\\n            60;\\\\n        upcomingFee =\\\\n            ((data.borrowed / 100) * (periodInMinutes * interestRate)) /\\\\n            INTEREST_RATE_DECIMALS;\\\\n    }\\\\n\\\\n    function repay(uint256 id, uint256 amount) external {\\\\n        require(borrowedByOption[id].borrowed > 0, \\\\\\"option redeemed\\\\\\");\\\\n        uint256 upcomingFee = calculateUpcomingFee(id);\\\\n        require(\\\\n            amount <= borrowedByOption[id].borrowed + upcomingFee,\\\\n            \\\\\\"too much amount\\\\\\"\\\\n        );\\\\n        require(msg.sender == collateralInfo[id].owner);\\\\n        uint256 newBorrow = borrowedByOption[id].borrowed +\\\\n            upcomingFee -\\\\n            amount;\\\\n        pool.subTotalLocked(amount - upcomingFee);\\\\n        borrowedByOption[id] = BorrowedByOption(\\\\n            newBorrow,\\\\n            block.timestamp\\\\n        );\\\\n        USDC.transferFrom(collateralInfo[id].owner, address(this), amount);\\\\n        USDC.transfer(address(pool), amount);\\\\n        emit Repay(msg.sender, id, amount);\\\\n    }\\\\n\\\\n    function unlock(uint256 id) external {\\\\n        require(borrowedByOption[id].borrowed == 0, \\\\\\"option is blocked\\\\\\");\\\\n        collateralToken.transferFrom(\\\\n            address(this),\\\\n            collateralInfo[id].owner,\\\\n            id\\\\n        );\\\\n        emit Unlock(msg.sender, id);\\\\n    }\\\\n\\\\n    function loanState(uint256 id) public view returns (bool) {\\\\n        CollateralInfo storage collateral = collateralInfo[id];\\\\n        if (collateral.strategy.isLong) {\\\\n            return currentPrice(id) <= liqPrice(id);\\\\n        } else {\\\\n            return currentPrice(id) >= liqPrice(id);\\\\n        }\\\\n    }\\\\n\\\\n    function loanStateByPriorLiqPrice(uint256 id) public view returns (bool) {\\\\n        CollateralInfo storage collateral = collateralInfo[id];\\\\n        if (collateral.strategy.isLong) {\\\\n            return currentPrice(id) <= priorLiqPrice(id);\\\\n        } else {\\\\n            return currentPrice(id) >= priorLiqPrice(id);\\\\n        }\\\\n    }\\\\n\\\\n    function currentPrice(uint256 id) public view returns (uint256 price) {\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        (, int256 latestPrice, , , ) = IHegicStrategy(\\\\n            data.strategy.strategyAddress\\\\n        ).priceProvider().latestRoundData();\\\\n        price = uint256(latestPrice);\\\\n    }\\\\n\\\\n    function priorLiqPrice(uint256 id) public view returns (uint256 price) {\\\\n        (\\\\n            ,\\\\n            address strategy,\\\\n            ,\\\\n            ,\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        (, uint128 strike) = IHegicStrategy(strategy).strategyData(id);\\\\n        if (collateralInfo[id].strategy.isLong) {\\\\n            return uint256(strike)*(100+PriorLiqPriceCoef)/100; \\\\n        } \\\\n        return uint256(strike)*(100-PriorLiqPriceCoef)/100;\\\\n    }\\\\n    function liqPrice(uint256 id) public view returns (uint256 price) {\\\\n        BorrowedByOption storage optionData = borrowedByOption[id];\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        (\\\\n            ,\\\\n            address strategy,\\\\n            ,\\\\n            ,\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\\\\n        .strategyData(id);\\\\n        if (data.strategy.isLong) {\\\\n            return uint256(strike) + (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\\\\n        }\\\\n        return uint256(strike) - (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\\\\n    }\\\\n\\\\n    function currentLiqPrice(uint256 id) public view returns (uint256 price) {\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        if (data.strategy.isLong){\\\\n            if (priorLiqPrice(id) > liqPrice(id)) {\\\\n                return priorLiqPrice(id);\\\\n            }\\\\n            return liqPrice(id);\\\\n        }\\\\n        if (priorLiqPrice(id) < liqPrice(id)) {\\\\n            return priorLiqPrice(id);\\\\n        }\\\\n        return liqPrice(id);\\\\n    }\\\\n\\\\n    function profitByOption(uint256 id) public view returns (uint256 profit) {\\\\n        (,address strategy,,,) = operationalPool.lockedLiquidity(id);\\\\n        return IHegicStrategy(strategy).profitOf(id);\\\\n    }\\\\n\\\\n    function exerciseOption(uint256 id) private {\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        return IHegicStrategy(data.strategy.strategyAddress).exercise(id);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x5647bab87c62d6ec4e3cc2c1941599e0f25633a9a03eb953db706317ef2e26e2\\",\\"license\\":\\"RANDOM\\"},\\"contracts/IHegicOperationalTreasury.sol\\":{\\"content\\":\\"pragma solidity 0.8.6;\\\\n\\\\ninterface IHegicOperationalTreasury {\\\\n    enum LockedLiquidityState {Unlocked, Locked}\\\\n\\\\n    function lockedLiquidity(uint256 id)\\\\n        external\\\\n        view\\\\n        returns (\\\\n            LockedLiquidityState state,\\\\n            address strategy,\\\\n            uint128 negativepnl,\\\\n            uint128 positivepnl,\\\\n            uint32 expiration\\\\n        );\\\\n}\\\\n\\",\\"keccak256\\":\\"0x4690046de7111ac32ee484fa830e015b8071268b183da10bc6e7a4af5486166e\\"},\\"contracts/IHegicStrategy.sol\\":{\\"content\\":\\"pragma solidity 0.8.6;\\\\n\\\\n import \\\\\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\\\\";\\\\n\\\\ninterface IHegicStrategy {\\\\n    function exercise(uint256 optionID) external;\\\\n\\\\n    function profitOf(uint256 optionID) external view returns (uint256 amount);\\\\n\\\\n    function priceProvider() external view returns (AggregatorV3Interface priceProvider);\\\\n\\\\n    function strategyData(uint256 id) external view returns (uint128 amount, uint128 strike);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x263af5040cf9a86c1490a47077d1517a9726026216aa85643133d82282c0d886\\"},\\"contracts/IPoolDDL.sol\\":{\\"content\\":\\"pragma solidity 0.8.6;\\\\n\\\\ninterface IPoolDDL {\\\\n    function send(address to, uint amount) external;\\\\n    function getTotalBalance() external view returns (uint256 balance);\\\\n    function addTotalLocked(uint256 value) external;\\\\n    function subTotalLocked(uint256 value) external; \\\\n    function openDeDeLend() external view returns (bool openDeDeLend);\\\\n}\\",\\"keccak256\\":\\"0xc8ac2c3446c29742ebf558b0e7b67c715d00fd3db64455f83d730f72d6dbcd5c\\"}},\\"version\\":1}","bytecode":"0x60806040526127106002556a0fbce2c2bf9557000000006006556c0c9f2c9cd04674edea400000006007553480156200003757600080fd5b5060405162003010380380620030108339810160408190526200005a91620002c4565b6200006533620001d0565b60005b6004811015620000e5576001600e60008c84600481106200008d576200008d620004cb565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff19166001836002811115620000cb57620000cb620004b5565b021790555080620000dc8162000481565b91505062000068565b5060005b600481101562000166576002600e60008b84600481106200010e576200010e620004cb565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff191660018360028111156200014c576200014c620004b5565b0217905550806200015d8162000481565b915050620000e9565b50600380546001600160a01b03808a166001600160a01b03199283161790925560048054898416908316179055600580549288169290911691909117905560088490556001839055620001bb82600a620003b6565b600955600a5550620004fa9650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516200022d81620004e1565b919050565b600082601f8301126200024457600080fd5b604051608081016001600160401b03811182821017156200027557634e487b7160e01b600052604160045260246000fd5b6040528083608081018610156200028b57600080fd5b60005b6004811015620002b957620002a38262000220565b835260209283019291909101906001016200028e565b509195945050505050565b60008060008060008060008060006101e08a8c031215620002e457600080fd5b620002f08b8b62000232565b9850620003018b60808c0162000232565b97506101008a01516200031481620004e1565b6101208b01519097506200032881620004e1565b6101408b01519096506200033c81620004e1565b809550506101608a015193506101808a015192506101a08a015191506101c08a015190509295985092959850929598565b600181815b80851115620003ae5781600019048211156200039257620003926200049f565b80851615620003a057918102915b93841c939080029062000372565b509250929050565b6000620003c48383620003cb565b9392505050565b600082620003dc575060016200047b565b81620003eb575060006200047b565b81600181146200040457600281146200040f576200042f565b60019150506200047b565b60ff8411156200042357620004236200049f565b50506001821b6200047b565b5060208310610133831016604e8410600b841016171562000454575081810a6200047b565b6200046083836200036d565b80600019048211156200047757620004776200049f565b0290505b92915050565b60006000198214156200049857620004986200049f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114620004f757600080fd5b50565b612b06806200050a6000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c806366234ffa116101305780639d38d064116100b8578063d88c69101161007c578063d88c691014610593578063d8aed145146105a6578063e260d747146105b9578063f05735db146105c2578063f2fde38b146105d557600080fd5b80639d38d0641461053e5780639e3aa5b114610547578063b13de2661461055a578063b2016bd41461056d578063c37077091461058057600080fd5b80637c3a00fd116100ff5780637c3a00fd146104eb57806389a30271146104f45780638ac2edc1146105075780638da5cb5b1461051a578063913198721461052b57600080fd5b806366234ffa1461048b5780636c016c0014610494578063715018a6146104d05780637a3c4c17146104d857600080fd5b8063415f1240116101be5780634ddde78d116101825780634ddde78d14610440578063587a03c2146104495780635f84f3021461045c5780636198e3391461046f57806362965d8e1461048257600080fd5b8063415f1240146103eb578063425378b4146103fe5780634437152a14610407578063484f13711461041a57806349b274ed1461042d57600080fd5b806324a6665e1161020557806324a6665e146102b05780632cb2f33414610372578063333daaa014610385578063357bcef014610398578063365c7504146103c857600080fd5b806301d73641146102375780630833a6c61461024c5780630ecbcdab1461027257806316f0115b14610285575b600080fd5b61024a61024536600461293a565b6105e8565b005b61025f61025a36600461293a565b610918565b6040519081526020015b60405180910390f35b61024a61028036600461296c565b610a1d565b600b54610298906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b6103236102be36600461293a565b600c602090815260009182526040918290208054835160a08101855260018301546001600160a01b0390811682526002840154948201949094526003830154948101949094526004820154606085015260059091015460ff1615156080840152169082565b604080516001600160a01b0393841681528251909316602080850191909152820151838201528101516060808401919091528101516080808401919091520151151560a082015260c001610269565b61025f61038036600461293a565b61109b565b61024a61039336600461293a565b611101565b6103bb6103a6366004612830565b600e6020526000908152604090205460ff1681565b60405161026991906129f7565b6103db6103d636600461293a565b611469565b6040519015158152602001610269565b61024a6103f936600461293a565b6114ba565b61025f600a5481565b61024a610415366004612830565b6117bf565b61025f61042836600461293a565b6117e9565b6103db61043b36600461293a565b611852565b61025f60095481565b61024a61045736600461293a565b61187f565b61024a61046a36600461293a565b61188c565b61024a61047d36600461293a565b611899565b61025f60015481565b61025f60075481565b6104bb6104a236600461293a565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610269565b61024a611994565b61025f6104e636600461293a565b6119a8565b61025f60065481565b600554610298906001600160a01b031681565b61024a61051536600461293a565b611ab3565b6000546001600160a01b0316610298565b600454610298906001600160a01b031681565b61025f60025481565b61025f61055536600461293a565b611fde565b61024a61056836600461293a565b612009565b600354610298906001600160a01b031681565b61024a61058e36600461293a565b612058565b61025f6105a136600461293a565b612065565b61024a6105b436600461296c565b612222565b61025f60085481565b61025f6105d036600461293a565b612510565b61024a6105e3366004612830565b612664565b6000818152600c60205260409020600401546106079061070890612a78565b421161061257600080fd5b6000818152600d602052604081209061062a83610918565b9050610635836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505082600001548211156107fc5782546106af9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646106d885605a612a59565b6106e29190612a37565b86546106ee9190612a1f565b6040518363ffffffff1660e01b815260040161070b9291906129de565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d919061286a565b506005546001600160a01b031663a9059cbb33606461077d85600a612a59565b6107879190612a37565b6040518363ffffffff1660e01b81526004016107a49291906129de565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061286a565b50610886565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926108329291169086906004016129de565b602060405180830381600087803b15801561084c57600080fd5b505af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610884919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f7510f2e218f218a66429c54a712775c000c398117e38b240be7ef52310a51e829060646108d286605a612a59565b6108dc9190612a37565b60646108e987600a612a59565b6108f39190612a37565b604080519384526020840192909252908201526060015b60405180910390a350505050565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061288c565b5050604051637632bffb60e01b815260048101879052919350506001600160a01b0383169150637632bffb9060240160206040518083038186803b1580156109de57600080fd5b505afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190612953565b9392505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa3919061286a565b610ae45760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b6000828152600d6020526040812090610afc84611fde565b60048054604051633755269b60e01b81529182018790529192506000916001600160a01b031690633755269b9060240160a06040518083038186803b158015610b4457600080fd5b505afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c919061288c565b5050505090506000600b60009054906101000a90046001600160a01b03166001600160a01b03166312b583496040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190612953565b9050600854851015610c5e5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74206c657373206d696e426f72726f774c696d69740000000000006044820152606401610adb565b83548390610c6c9087612a1f565b1115610cc65760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c6044820152631a5b5a5d60e21b6064820152608401610adb565b6001826001811115610cda57610cda612aa5565b14610d175760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610adb565b6000868152600c60205260409020546001600160a01b03163314610d755760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b6044820152606401610adb565b80851115610dd35760405162461bcd60e51b815260206004820152602560248201527f7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865604482015264081c1bdbdb60da1b6064820152608401610adb565b6000868152600c6020526040902060040154610df290610e1090612a78565b421115610e2c5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6000868152600c602052604090206005015460ff1615610ea157610e4f86612510565b610e58876119a8565b11610e9c5760405162461bcd60e51b815260206004820152601460248201527374686520707269636520697320746f6f206c6f7760601b6044820152606401610adb565b610ef8565b610eaa86612510565b610eb3876119a8565b10610ef85760405162461bcd60e51b81526020600482015260156024820152740e8d0ca40e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b6044820152606401610adb565b6000610f03876117e9565b9050604051806040016040528082876000015489610f219190612a1f565b610f2b9190612a1f565b8152426020918201526000898152600d82526040902082518155910151600190910155600b546001600160a01b0316632bc355ca610f698389612a1f565b6040518263ffffffff1660e01b8152600401610f8791815260200190565b600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b5050600b5460008a8152600c602052604090819020549051633419e74d60e21b81526001600160a01b03928316945063d0679d349350610ffd92909116908a906004016129de565b600060405180830381600087803b15801561101757600080fd5b505af115801561102b573d6000803e3d6000fd5b5050506000888152600c60209081526040918290206001015482518a81526001600160a01b03909116918101919091524281830152905189925033917f1fdbee5d1bd2901710e8945918b1a052ce67662661a2ccbf68420e4e430f8dab919081900360600190a350505050505050565b6000818152600c60205260408120600581015460ff16156110e0576110bf83612065565b6110c884612510565b11156110d757610a1683612510565b610a1683612065565b6110e983612065565b6110f284612510565b10156110d757610a1683612510565b61110a81611469565b6111465760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061115e83610918565b9050611169836126dd565b600b548254604051631b45a68d60e01b81526001600160a01b0390921691631b45a68d9161119d9160040190815260200190565b600060405180830381600087803b1580156111b757600080fd5b505af11580156111cb573d6000803e3d6000fd5b5050600554600b54855460405163a9059cbb60e01b81526001600160a01b03938416955063a9059cbb945061120693909216916004016129de565b602060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611258919061286a565b506005546000848152600c602052604090205483546001600160a01b039283169263a9059cbb92169060649061128f90600a612a59565b6112999190612a37565b85546112a59190612a1f565b6112af9085612a78565b6040518363ffffffff1660e01b81526004016112cc9291906129de565b602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e919061286a565b5060055482546001600160a01b039091169063a9059cbb90339060649061134690600a612a59565b6113509190612a37565b6040518363ffffffff1660e01b815260040161136d9291906129de565b602060405180830381600087803b15801561138757600080fd5b505af115801561139b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bf919061286a565b506000838152600c6020526040902054825484916001600160a01b0316907ff28455920a5bcb3aeff7a6bbdd4fed497e6f159330fe161026128b5c381bdd909060649061140d90600a612a59565b6114179190612a37565b85546114239190612a1f565b61142d9085612a78565b8554606461143c82600a612a59565b6114469190612a37565b6040805193845260208401929092529082015260600160405180910390a3505050565b6000818152600c60205260408120600581015460ff161561149f5761148d83612510565b611496846119a8565b11159392505050565b6114a883612510565b6114b1846119a8565b10159392505050565b6114c381611852565b6114ff5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061151783610918565b9050611522836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b5050505082600001548211156116e957825461159c9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646115c585605a612a59565b6115cf9190612a37565b86546115db9190612a1f565b6040518363ffffffff1660e01b81526004016115f89291906129de565b602060405180830381600087803b15801561161257600080fd5b505af1158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a919061286a565b506005546001600160a01b031663a9059cbb33606461166a85600a612a59565b6116749190612a37565b6040518363ffffffff1660e01b81526004016116919291906129de565b602060405180830381600087803b1580156116ab57600080fd5b505af11580156116bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e3919061286a565b50611773565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9261171f9291169086906004016129de565b602060405180830381600087803b15801561173957600080fd5b505af115801561174d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611771919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f4e91025e01b2329df1ec1067d27aafec4d1c41f682ccd794dee04321e0b1e8dc9060646108d286605a612a59565b6117c7612750565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d6020526040812060018101548290603c9061180b9042612a78565b6118159190612a37565b9050600754600654826118289190612a59565b835461183690606490612a37565b6118409190612a59565b61184a9190612a37565b949350505050565b6000818152600c60205260408120600581015460ff16156118765761148d83612065565b6114a883612065565b611887612750565b600755565b611894612750565b600655565b6000818152600d6020526040902054156118e95760405162461bcd60e51b81526020600482015260116024820152701bdc1d1a5bdb881a5cc8189b1bd8dad959607a1b6044820152606401610adb565b6003546000828152600c6020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561194c57600080fd5b505af1158015611960573d6000803e3d6000fd5b50506040518392503391507f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f190600090a350565b61199c612750565b6119a660006127aa565b565b6000818152600c6020908152604080832060018101548251635c4443cf60e11b81529251919385936001600160a01b039092169263b888879e926004808201939291829003018186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a36919061284d565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa6919061298e565b5091979650505050505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0157600080fd5b505afa158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b39919061286a565b611b755760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b6044820152606401610adb565b60048054604051633755269b60e01b8152918201839052600091829182916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611bc057600080fd5b505afa158015611bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf8919061288c565b9450505092509250610e108163ffffffff16611c149190612a78565b421115611c4e5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6040516335b2346d60e21b81526004810185905260009081906001600160a01b0385169063d6c8d1b490602401604080518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190612907565b90925090506001856001811115611ce357611ce3612aa5565b14611d235760405162461bcd60e51b815260206004820152601060248201526f6f7074696f6e2069732061637469766560801b6044820152606401610adb565b6003546040516331a9108f60e11b81526004810188905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f919061284d565b6001600160a01b031614611de55760405162461bcd60e51b815260206004820152600d60248201526c3cb7ba903737ba1037bbb732b960991b6044820152606401610adb565b6001600160a01b0384166000908152600e602052604081205460ff166002811115611e1257611e12612aa5565b1415611e595760405162461bcd60e51b81526020600482015260166024820152751cdd1c985d1959de481b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610adb565b6003546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611eab57600080fd5b505af1158015611ebf573d6000803e3d6000fd5b506000925060019150611ecf9050565b6001600160a01b0386166000908152600e602052604090205460ff166002811115611efc57611efc612aa5565b14611f08576000611f0b565b60015b604080518082018252338152815160a0810183526001600160a01b0398891681526001600160801b03968716602082810191909152959096168683015263ffffffff9096166060808701919091529115156080808701919091528487019586526000998a52600c855298819020955186549088166001600160a01b03199182161787559451805160018801805491909916961695909517909655918301516002850155509281015160038301559182015160048201559201516005909201805492151560ff199093169290921790915550565b6000600154600254611fef84610918565b611ff99190612a37565b6120039190612a59565b92915050565b612011612750565b611f408111156120535760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642076616c756560981b6044820152606401610adb565b600155565b612060612750565b600855565b6000818152600d60209081526040808320600c909252808320600480549251633755269b60e01b8152908101869052909184916001600160a01b0390911690633755269b9060240160a06040518083038186803b1580156120c557600080fd5b505afa1580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd919061288c565b505050915050600080826001600160a01b031663d6c8d1b4886040518263ffffffff1660e01b815260040161213491815260200190565b604080518083038186803b15801561214b57600080fd5b505afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121839190612907565b6005860154919350915060ff16156121e15760095485546001600160801b038416916121ae91612a59565b6121b89190612a37565b6121c3906078612a59565b6121d6906001600160801b038316612a1f565b979650505050505050565b60095485546001600160801b038416916121fa91612a59565b6122049190612a37565b61220f906078612a59565b6121d6906001600160801b038316612a78565b6000828152600d602052604090205461226f5760405162461bcd60e51b815260206004820152600f60248201526e1bdc1d1a5bdb881c995919595b5959608a1b6044820152606401610adb565b600061227a836117e9565b6000848152600d6020526040902054909150612297908290612a1f565b8211156122d85760405162461bcd60e51b815260206004820152600f60248201526e1d1bdbc81b5d58da08185b5bdd5b9d608a1b6044820152606401610adb565b6000838152600c60205260409020546001600160a01b031633146122fb57600080fd5b6000838152600d60205260408120548390612317908490612a1f565b6123219190612a78565b600b549091506001600160a01b0316631b45a68d61233f8486612a78565b6040518263ffffffff1660e01b815260040161235d91815260200190565b600060405180830381600087803b15801561237757600080fd5b505af115801561238b573d6000803e3d6000fd5b505060408051808201825284815242602080830191825260008a8152600d8252848120935184559151600190930192909255600554600c9092528290205491516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101889052911692506323b872dd9150606401602060405180830381600087803b15801561241a57600080fd5b505af115801561242e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612452919061286a565b50600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926124899291169087906004016129de565b602060405180830381600087803b1580156124a357600080fd5b505af11580156124b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124db919061286a565b50604051838152849033907f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d09060200161090a565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f919061288c565b50506040516335b2346d60e21b81526004810187905291935060009250506001600160a01b0383169063d6c8d1b490602401604080518083038186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126109190612907565b6000868152600c602052604090206005015490925060ff16159050612653576064600a5460646126409190612a1f565b611840906001600160801b038416612a59565b6064600a5460646126409190612a78565b61266c612750565b6001600160a01b0381166126d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610adb565b6126da816127aa565b50565b6000818152600c6020526040908190206001810154915163b07f0a4160e01b81526004810184905290916001600160a01b03169063b07f0a4190602401600060405180830381600087803b15801561273457600080fd5b505af1158015612748573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146119a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610adb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160801b038116811461281157600080fd5b919050565b805169ffffffffffffffffffff8116811461281157600080fd5b60006020828403121561284257600080fd5b8135610a1681612abb565b60006020828403121561285f57600080fd5b8151610a1681612abb565b60006020828403121561287c57600080fd5b81518015158114610a1657600080fd5b600080600080600060a086880312156128a457600080fd5b8551600281106128b357600080fd5b60208701519095506128c481612abb565b93506128d2604087016127fa565b92506128e0606087016127fa565b9150608086015163ffffffff811681146128f957600080fd5b809150509295509295909350565b6000806040838503121561291a57600080fd5b612923836127fa565b9150612931602084016127fa565b90509250929050565b60006020828403121561294c57600080fd5b5035919050565b60006020828403121561296557600080fd5b5051919050565b6000806040838503121561297f57600080fd5b50508035926020909101359150565b600080600080600060a086880312156129a657600080fd5b6129af86612816565b94506020860151935060408601519250606086015191506129d260808701612816565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6020810160038310612a1957634e487b7160e01b600052602160045260246000fd5b91905290565b60008219821115612a3257612a32612a8f565b500190565b600082612a5457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612a7357612a73612a8f565b500290565b600082821015612a8a57612a8a612a8f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146126da57600080fdfea26469706673582212200556ab8b8fc2039302625e5615c6a929509002d0fa9901ec439d51bc5df3ba1364736f6c63430008060033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102325760003560e01c806366234ffa116101305780639d38d064116100b8578063d88c69101161007c578063d88c691014610593578063d8aed145146105a6578063e260d747146105b9578063f05735db146105c2578063f2fde38b146105d557600080fd5b80639d38d0641461053e5780639e3aa5b114610547578063b13de2661461055a578063b2016bd41461056d578063c37077091461058057600080fd5b80637c3a00fd116100ff5780637c3a00fd146104eb57806389a30271146104f45780638ac2edc1146105075780638da5cb5b1461051a578063913198721461052b57600080fd5b806366234ffa1461048b5780636c016c0014610494578063715018a6146104d05780637a3c4c17146104d857600080fd5b8063415f1240116101be5780634ddde78d116101825780634ddde78d14610440578063587a03c2146104495780635f84f3021461045c5780636198e3391461046f57806362965d8e1461048257600080fd5b8063415f1240146103eb578063425378b4146103fe5780634437152a14610407578063484f13711461041a57806349b274ed1461042d57600080fd5b806324a6665e1161020557806324a6665e146102b05780632cb2f33414610372578063333daaa014610385578063357bcef014610398578063365c7504146103c857600080fd5b806301d73641146102375780630833a6c61461024c5780630ecbcdab1461027257806316f0115b14610285575b600080fd5b61024a61024536600461293a565b6105e8565b005b61025f61025a36600461293a565b610918565b6040519081526020015b60405180910390f35b61024a61028036600461296c565b610a1d565b600b54610298906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b6103236102be36600461293a565b600c602090815260009182526040918290208054835160a08101855260018301546001600160a01b0390811682526002840154948201949094526003830154948101949094526004820154606085015260059091015460ff1615156080840152169082565b604080516001600160a01b0393841681528251909316602080850191909152820151838201528101516060808401919091528101516080808401919091520151151560a082015260c001610269565b61025f61038036600461293a565b61109b565b61024a61039336600461293a565b611101565b6103bb6103a6366004612830565b600e6020526000908152604090205460ff1681565b60405161026991906129f7565b6103db6103d636600461293a565b611469565b6040519015158152602001610269565b61024a6103f936600461293a565b6114ba565b61025f600a5481565b61024a610415366004612830565b6117bf565b61025f61042836600461293a565b6117e9565b6103db61043b36600461293a565b611852565b61025f60095481565b61024a61045736600461293a565b61187f565b61024a61046a36600461293a565b61188c565b61024a61047d36600461293a565b611899565b61025f60015481565b61025f60075481565b6104bb6104a236600461293a565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610269565b61024a611994565b61025f6104e636600461293a565b6119a8565b61025f60065481565b600554610298906001600160a01b031681565b61024a61051536600461293a565b611ab3565b6000546001600160a01b0316610298565b600454610298906001600160a01b031681565b61025f60025481565b61025f61055536600461293a565b611fde565b61024a61056836600461293a565b612009565b600354610298906001600160a01b031681565b61024a61058e36600461293a565b612058565b61025f6105a136600461293a565b612065565b61024a6105b436600461296c565b612222565b61025f60085481565b61025f6105d036600461293a565b612510565b61024a6105e3366004612830565b612664565b6000818152600c60205260409020600401546106079061070890612a78565b421161061257600080fd5b6000818152600d602052604081209061062a83610918565b9050610635836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505082600001548211156107fc5782546106af9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646106d885605a612a59565b6106e29190612a37565b86546106ee9190612a1f565b6040518363ffffffff1660e01b815260040161070b9291906129de565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d919061286a565b506005546001600160a01b031663a9059cbb33606461077d85600a612a59565b6107879190612a37565b6040518363ffffffff1660e01b81526004016107a49291906129de565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061286a565b50610886565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926108329291169086906004016129de565b602060405180830381600087803b15801561084c57600080fd5b505af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610884919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f7510f2e218f218a66429c54a712775c000c398117e38b240be7ef52310a51e829060646108d286605a612a59565b6108dc9190612a37565b60646108e987600a612a59565b6108f39190612a37565b604080519384526020840192909252908201526060015b60405180910390a350505050565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061288c565b5050604051637632bffb60e01b815260048101879052919350506001600160a01b0383169150637632bffb9060240160206040518083038186803b1580156109de57600080fd5b505afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190612953565b9392505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa3919061286a565b610ae45760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b6000828152600d6020526040812090610afc84611fde565b60048054604051633755269b60e01b81529182018790529192506000916001600160a01b031690633755269b9060240160a06040518083038186803b158015610b4457600080fd5b505afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c919061288c565b5050505090506000600b60009054906101000a90046001600160a01b03166001600160a01b03166312b583496040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190612953565b9050600854851015610c5e5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74206c657373206d696e426f72726f774c696d69740000000000006044820152606401610adb565b83548390610c6c9087612a1f565b1115610cc65760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c6044820152631a5b5a5d60e21b6064820152608401610adb565b6001826001811115610cda57610cda612aa5565b14610d175760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610adb565b6000868152600c60205260409020546001600160a01b03163314610d755760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b6044820152606401610adb565b80851115610dd35760405162461bcd60e51b815260206004820152602560248201527f7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865604482015264081c1bdbdb60da1b6064820152608401610adb565b6000868152600c6020526040902060040154610df290610e1090612a78565b421115610e2c5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6000868152600c602052604090206005015460ff1615610ea157610e4f86612510565b610e58876119a8565b11610e9c5760405162461bcd60e51b815260206004820152601460248201527374686520707269636520697320746f6f206c6f7760601b6044820152606401610adb565b610ef8565b610eaa86612510565b610eb3876119a8565b10610ef85760405162461bcd60e51b81526020600482015260156024820152740e8d0ca40e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b6044820152606401610adb565b6000610f03876117e9565b9050604051806040016040528082876000015489610f219190612a1f565b610f2b9190612a1f565b8152426020918201526000898152600d82526040902082518155910151600190910155600b546001600160a01b0316632bc355ca610f698389612a1f565b6040518263ffffffff1660e01b8152600401610f8791815260200190565b600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b5050600b5460008a8152600c602052604090819020549051633419e74d60e21b81526001600160a01b03928316945063d0679d349350610ffd92909116908a906004016129de565b600060405180830381600087803b15801561101757600080fd5b505af115801561102b573d6000803e3d6000fd5b5050506000888152600c60209081526040918290206001015482518a81526001600160a01b03909116918101919091524281830152905189925033917f1fdbee5d1bd2901710e8945918b1a052ce67662661a2ccbf68420e4e430f8dab919081900360600190a350505050505050565b6000818152600c60205260408120600581015460ff16156110e0576110bf83612065565b6110c884612510565b11156110d757610a1683612510565b610a1683612065565b6110e983612065565b6110f284612510565b10156110d757610a1683612510565b61110a81611469565b6111465760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061115e83610918565b9050611169836126dd565b600b548254604051631b45a68d60e01b81526001600160a01b0390921691631b45a68d9161119d9160040190815260200190565b600060405180830381600087803b1580156111b757600080fd5b505af11580156111cb573d6000803e3d6000fd5b5050600554600b54855460405163a9059cbb60e01b81526001600160a01b03938416955063a9059cbb945061120693909216916004016129de565b602060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611258919061286a565b506005546000848152600c602052604090205483546001600160a01b039283169263a9059cbb92169060649061128f90600a612a59565b6112999190612a37565b85546112a59190612a1f565b6112af9085612a78565b6040518363ffffffff1660e01b81526004016112cc9291906129de565b602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e919061286a565b5060055482546001600160a01b039091169063a9059cbb90339060649061134690600a612a59565b6113509190612a37565b6040518363ffffffff1660e01b815260040161136d9291906129de565b602060405180830381600087803b15801561138757600080fd5b505af115801561139b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bf919061286a565b506000838152600c6020526040902054825484916001600160a01b0316907ff28455920a5bcb3aeff7a6bbdd4fed497e6f159330fe161026128b5c381bdd909060649061140d90600a612a59565b6114179190612a37565b85546114239190612a1f565b61142d9085612a78565b8554606461143c82600a612a59565b6114469190612a37565b6040805193845260208401929092529082015260600160405180910390a3505050565b6000818152600c60205260408120600581015460ff161561149f5761148d83612510565b611496846119a8565b11159392505050565b6114a883612510565b6114b1846119a8565b10159392505050565b6114c381611852565b6114ff5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061151783610918565b9050611522836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b5050505082600001548211156116e957825461159c9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646115c585605a612a59565b6115cf9190612a37565b86546115db9190612a1f565b6040518363ffffffff1660e01b81526004016115f89291906129de565b602060405180830381600087803b15801561161257600080fd5b505af1158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a919061286a565b506005546001600160a01b031663a9059cbb33606461166a85600a612a59565b6116749190612a37565b6040518363ffffffff1660e01b81526004016116919291906129de565b602060405180830381600087803b1580156116ab57600080fd5b505af11580156116bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e3919061286a565b50611773565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9261171f9291169086906004016129de565b602060405180830381600087803b15801561173957600080fd5b505af115801561174d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611771919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f4e91025e01b2329df1ec1067d27aafec4d1c41f682ccd794dee04321e0b1e8dc9060646108d286605a612a59565b6117c7612750565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d6020526040812060018101548290603c9061180b9042612a78565b6118159190612a37565b9050600754600654826118289190612a59565b835461183690606490612a37565b6118409190612a59565b61184a9190612a37565b949350505050565b6000818152600c60205260408120600581015460ff16156118765761148d83612065565b6114a883612065565b611887612750565b600755565b611894612750565b600655565b6000818152600d6020526040902054156118e95760405162461bcd60e51b81526020600482015260116024820152701bdc1d1a5bdb881a5cc8189b1bd8dad959607a1b6044820152606401610adb565b6003546000828152600c6020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561194c57600080fd5b505af1158015611960573d6000803e3d6000fd5b50506040518392503391507f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f190600090a350565b61199c612750565b6119a660006127aa565b565b6000818152600c6020908152604080832060018101548251635c4443cf60e11b81529251919385936001600160a01b039092169263b888879e926004808201939291829003018186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a36919061284d565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa6919061298e565b5091979650505050505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0157600080fd5b505afa158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b39919061286a565b611b755760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b6044820152606401610adb565b60048054604051633755269b60e01b8152918201839052600091829182916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611bc057600080fd5b505afa158015611bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf8919061288c565b9450505092509250610e108163ffffffff16611c149190612a78565b421115611c4e5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6040516335b2346d60e21b81526004810185905260009081906001600160a01b0385169063d6c8d1b490602401604080518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190612907565b90925090506001856001811115611ce357611ce3612aa5565b14611d235760405162461bcd60e51b815260206004820152601060248201526f6f7074696f6e2069732061637469766560801b6044820152606401610adb565b6003546040516331a9108f60e11b81526004810188905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f919061284d565b6001600160a01b031614611de55760405162461bcd60e51b815260206004820152600d60248201526c3cb7ba903737ba1037bbb732b960991b6044820152606401610adb565b6001600160a01b0384166000908152600e602052604081205460ff166002811115611e1257611e12612aa5565b1415611e595760405162461bcd60e51b81526020600482015260166024820152751cdd1c985d1959de481b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610adb565b6003546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611eab57600080fd5b505af1158015611ebf573d6000803e3d6000fd5b506000925060019150611ecf9050565b6001600160a01b0386166000908152600e602052604090205460ff166002811115611efc57611efc612aa5565b14611f08576000611f0b565b60015b604080518082018252338152815160a0810183526001600160a01b0398891681526001600160801b03968716602082810191909152959096168683015263ffffffff9096166060808701919091529115156080808701919091528487019586526000998a52600c855298819020955186549088166001600160a01b03199182161787559451805160018801805491909916961695909517909655918301516002850155509281015160038301559182015160048201559201516005909201805492151560ff199093169290921790915550565b6000600154600254611fef84610918565b611ff99190612a37565b6120039190612a59565b92915050565b612011612750565b611f408111156120535760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642076616c756560981b6044820152606401610adb565b600155565b612060612750565b600855565b6000818152600d60209081526040808320600c909252808320600480549251633755269b60e01b8152908101869052909184916001600160a01b0390911690633755269b9060240160a06040518083038186803b1580156120c557600080fd5b505afa1580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd919061288c565b505050915050600080826001600160a01b031663d6c8d1b4886040518263ffffffff1660e01b815260040161213491815260200190565b604080518083038186803b15801561214b57600080fd5b505afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121839190612907565b6005860154919350915060ff16156121e15760095485546001600160801b038416916121ae91612a59565b6121b89190612a37565b6121c3906078612a59565b6121d6906001600160801b038316612a1f565b979650505050505050565b60095485546001600160801b038416916121fa91612a59565b6122049190612a37565b61220f906078612a59565b6121d6906001600160801b038316612a78565b6000828152600d602052604090205461226f5760405162461bcd60e51b815260206004820152600f60248201526e1bdc1d1a5bdb881c995919595b5959608a1b6044820152606401610adb565b600061227a836117e9565b6000848152600d6020526040902054909150612297908290612a1f565b8211156122d85760405162461bcd60e51b815260206004820152600f60248201526e1d1bdbc81b5d58da08185b5bdd5b9d608a1b6044820152606401610adb565b6000838152600c60205260409020546001600160a01b031633146122fb57600080fd5b6000838152600d60205260408120548390612317908490612a1f565b6123219190612a78565b600b549091506001600160a01b0316631b45a68d61233f8486612a78565b6040518263ffffffff1660e01b815260040161235d91815260200190565b600060405180830381600087803b15801561237757600080fd5b505af115801561238b573d6000803e3d6000fd5b505060408051808201825284815242602080830191825260008a8152600d8252848120935184559151600190930192909255600554600c9092528290205491516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101889052911692506323b872dd9150606401602060405180830381600087803b15801561241a57600080fd5b505af115801561242e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612452919061286a565b50600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926124899291169087906004016129de565b602060405180830381600087803b1580156124a357600080fd5b505af11580156124b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124db919061286a565b50604051838152849033907f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d09060200161090a565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f919061288c565b50506040516335b2346d60e21b81526004810187905291935060009250506001600160a01b0383169063d6c8d1b490602401604080518083038186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126109190612907565b6000868152600c602052604090206005015490925060ff16159050612653576064600a5460646126409190612a1f565b611840906001600160801b038416612a59565b6064600a5460646126409190612a78565b61266c612750565b6001600160a01b0381166126d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610adb565b6126da816127aa565b50565b6000818152600c6020526040908190206001810154915163b07f0a4160e01b81526004810184905290916001600160a01b03169063b07f0a4190602401600060405180830381600087803b15801561273457600080fd5b505af1158015612748573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146119a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610adb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160801b038116811461281157600080fd5b919050565b805169ffffffffffffffffffff8116811461281157600080fd5b60006020828403121561284257600080fd5b8135610a1681612abb565b60006020828403121561285f57600080fd5b8151610a1681612abb565b60006020828403121561287c57600080fd5b81518015158114610a1657600080fd5b600080600080600060a086880312156128a457600080fd5b8551600281106128b357600080fd5b60208701519095506128c481612abb565b93506128d2604087016127fa565b92506128e0606087016127fa565b9150608086015163ffffffff811681146128f957600080fd5b809150509295509295909350565b6000806040838503121561291a57600080fd5b612923836127fa565b9150612931602084016127fa565b90509250929050565b60006020828403121561294c57600080fd5b5035919050565b60006020828403121561296557600080fd5b5051919050565b6000806040838503121561297f57600080fd5b50508035926020909101359150565b600080600080600060a086880312156129a657600080fd5b6129af86612816565b94506020860151935060408601519250606086015191506129d260808701612816565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6020810160038310612a1957634e487b7160e01b600052602160045260246000fd5b91905290565b60008219821115612a3257612a32612a8f565b500190565b600082612a5457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612a7357612a73612a8f565b500290565b600082821015612a8a57612a8a612a8f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146126da57600080fdfea26469706673582212200556ab8b8fc2039302625e5615c6a929509002d0fa9901ec439d51bc5df3ba1364736f6c63430008060033","devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":53,"contract":"contracts/DDL.sol:DDL","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2787,"contract":"contracts/DDL.sol:DDL","label":"LTV","offset":0,"slot":"1","type":"t_uint256"},{"astId":2792,"contract":"contracts/DDL.sol:DDL","label":"LTV_DECIMALS","offset":0,"slot":"2","type":"t_uint256"},{"astId":2795,"contract":"contracts/DDL.sol:DDL","label":"collateralToken","offset":0,"slot":"3","type":"t_contract(IERC721)2147"},{"astId":2798,"contract":"contracts/DDL.sol:DDL","label":"operationalPool","offset":0,"slot":"4","type":"t_contract(IHegicOperationalTreasury)4326"},{"astId":2801,"contract":"contracts/DDL.sol:DDL","label":"USDC","offset":0,"slot":"5","type":"t_contract(IERC20)822"},{"astId":2804,"contract":"contracts/DDL.sol:DDL","label":"interestRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":2809,"contract":"contracts/DDL.sol:DDL","label":"INTEREST_RATE_DECIMALS","offset":0,"slot":"7","type":"t_uint256"},{"astId":2811,"contract":"contracts/DDL.sol:DDL","label":"minBorrowLimit","offset":0,"slot":"8","type":"t_uint256"},{"astId":2813,"contract":"contracts/DDL.sol:DDL","label":"COLLATERAL_DECIMALS","offset":0,"slot":"9","type":"t_uint256"},{"astId":2815,"contract":"contracts/DDL.sol:DDL","label":"PriorLiqPriceCoef","offset":0,"slot":"10","type":"t_uint256"},{"astId":2818,"contract":"contracts/DDL.sol:DDL","label":"pool","offset":0,"slot":"11","type":"t_contract(IPoolDDL)4387"},{"astId":2849,"contract":"contracts/DDL.sol:DDL","label":"collateralInfo","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(CollateralInfo)2840_storage)"},{"astId":2854,"contract":"contracts/DDL.sol:DDL","label":"borrowedByOption","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(BorrowedByOption)2823_storage)"},{"astId":2859,"contract":"contracts/DDL.sol:DDL","label":"strategyType","offset":0,"slot":"14","type":"t_mapping(t_address,t_enum(HegicStrategyType)2844)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)822":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IERC721)2147":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_contract(IHegicOperationalTreasury)4326":{"encoding":"inplace","label":"contract IHegicOperationalTreasury","numberOfBytes":"20"},"t_contract(IPoolDDL)4387":{"encoding":"inplace","label":"contract IPoolDDL","numberOfBytes":"20"},"t_enum(HegicStrategyType)2844":{"encoding":"inplace","label":"enum DDL.HegicStrategyType","numberOfBytes":"1"},"t_mapping(t_address,t_enum(HegicStrategyType)2844)":{"encoding":"mapping","key":"t_address","label":"mapping(address => enum DDL.HegicStrategyType)","numberOfBytes":"32","value":"t_enum(HegicStrategyType)2844"},"t_mapping(t_uint256,t_struct(BorrowedByOption)2823_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DDL.BorrowedByOption)","numberOfBytes":"32","value":"t_struct(BorrowedByOption)2823_storage"},"t_mapping(t_uint256,t_struct(CollateralInfo)2840_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DDL.CollateralInfo)","numberOfBytes":"32","value":"t_struct(CollateralInfo)2840_storage"},"t_struct(BorrowedByOption)2823_storage":{"encoding":"inplace","label":"struct DDL.BorrowedByOption","members":[{"astId":2820,"contract":"contracts/DDL.sol:DDL","label":"borrowed","offset":0,"slot":"0","type":"t_uint256"},{"astId":2822,"contract":"contracts/DDL.sol:DDL","label":"newBorrowTimestamp","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(CollateralInfo)2840_storage":{"encoding":"inplace","label":"struct DDL.CollateralInfo","members":[{"astId":2836,"contract":"contracts/DDL.sol:DDL","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2839,"contract":"contracts/DDL.sol:DDL","label":"strategy","offset":0,"slot":"1","type":"t_struct(optionInfo)2834_storage"}],"numberOfBytes":"192"},"t_struct(optionInfo)2834_storage":{"encoding":"inplace","label":"struct DDL.optionInfo","members":[{"astId":2825,"contract":"contracts/DDL.sol:DDL","label":"strategyAddress","offset":0,"slot":"0","type":"t_address"},{"astId":2827,"contract":"contracts/DDL.sol:DDL","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2829,"contract":"contracts/DDL.sol:DDL","label":"strike","offset":0,"slot":"2","type":"t_uint256"},{"astId":2831,"contract":"contracts/DDL.sol:DDL","label":"expiration","offset":0,"slot":"3","type":"t_uint256"},{"astId":2833,"contract":"contracts/DDL.sol:DDL","label":"isLong","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},61:function(e){e.exports=JSON.parse('{"address":"0x0154c34F9f38D2EC0Aa2BaCc8088eeB8f5f41d83","abi":[{"inputs":[{"internalType":"address[4]","name":"_arrLongHegicStrategy","type":"address[4]"},{"internalType":"address[4]","name":"_arrShortHegicStrategy","type":"address[4]"},{"internalType":"contract IERC721","name":"_collateralToken","type":"address"},{"internalType":"contract IHegicOperationalTreasury","name":"_operationalPool","type":"address"},{"internalType":"contract IERC20","name":"_USDC","type":"address"},{"internalType":"uint256","name":"_minBorrowLimit","type":"uint256"},{"internalType":"uint256","name":"_ltv","type":"uint256"},{"internalType":"uint256","name":"_COLLATERAL_DECIMALS","type":"uint256"},{"internalType":"uint256","name":"_PriorLiqPriceCoef","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"userReturn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolReturn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"ExerciseByPriorLiqPrice","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolProfit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"ForcedExercise","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"poolProfit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liqFee","type":"uint256"}],"name":"Liquidate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"optionID","type":"uint256"}],"name":"Unlock","type":"event"},{"inputs":[],"name":"COLLATERAL_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"INTEREST_RATE_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LTV","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LTV_DECIMALS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PriorLiqPriceCoef","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"borrowedByOption","outputs":[{"internalType":"uint256","name":"borrowed","type":"uint256"},{"internalType":"uint256","name":"newBorrowTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"calculateUpcomingFee","outputs":[{"internalType":"uint256","name":"upcomingFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"collateralInfo","outputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"internalType":"address","name":"strategyAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"strike","type":"uint256"},{"internalType":"uint256","name":"expiration","type":"uint256"},{"internalType":"bool","name":"isLong","type":"bool"}],"internalType":"struct DDL.optionInfo","name":"strategy","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"collateralToken","outputs":[{"internalType":"contract IERC721","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"currentLiqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"currentPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exerciseByPriorLiqPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"forcedExercise","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"interestRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"liqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"loanState","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"loanStateByPriorLiqPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"lockOption","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minBorrowLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"operationalPool","outputs":[{"internalType":"contract IHegicOperationalTreasury","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pool","outputs":[{"internalType":"contract IPoolDDL","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"priorLiqPrice","outputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"profitByOption","outputs":[{"internalType":"uint256","name":"profit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setInterestRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setInterestRateDecimals","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setLTV","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"setMinBorrowLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"name":"setPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"strategyType","outputs":[{"internalType":"enum DDL.HegicStrategyType","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"unlock","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x0b67a830655bb0da30bc8d459d214ed02e8c973db430d0fbe6e7c0a15aabd2a1","receipt":{"to":null,"from":"0x0641bc55DDAb3b9636e82CbF87EDE3c3c533039d","contractAddress":"0x0154c34F9f38D2EC0Aa2BaCc8088eeB8f5f41d83","transactionIndex":1,"gasUsed":"11779179","logsBloom":"0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000001000000000200000000000000000000000000020000000040000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120010000000000000000000000000000000000000000000000000800000000000000","blockHash":"0x280b22c0292bb5bb0178a9ccb3cc8bdd2dbc0ab8a0f8a18ae90efdfd1ade6b6e","transactionHash":"0x0b67a830655bb0da30bc8d459d214ed02e8c973db430d0fbe6e7c0a15aabd2a1","logs":[{"transactionIndex":1,"blockNumber":27258078,"transactionHash":"0x0b67a830655bb0da30bc8d459d214ed02e8c973db430d0fbe6e7c0a15aabd2a1","address":"0x0154c34F9f38D2EC0Aa2BaCc8088eeB8f5f41d83","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000641bc55ddab3b9636e82cbf87ede3c3c533039d"],"data":"0x","logIndex":0,"blockHash":"0x280b22c0292bb5bb0178a9ccb3cc8bdd2dbc0ab8a0f8a18ae90efdfd1ade6b6e"}],"blockNumber":27258078,"cumulativeGasUsed":"11779179","status":1,"byzantium":true},"args":[["0xA321404B708682531B2a959c52AA8A53F35A14AE","0xc8715eAB195CE1dF628ce3B89B63F3849a55Ffe9","0x9F7e2a3dcf8Ba93B00EE5d3aF2419ebc1DBb6256","0xAc28e549e5D61Ecb586f7FEE51Bcbf454591b082"],["0x83305A6B2B906704Ed042CBEFAfe94DBc3f185DD","0xB3C9DEac7c37d7144f61166baf91f5682fae7338","0x824081Cd6397aBD018cfc039440594b832De8d2c","0x7a4aF7AAF60292461098edDFA63e4095144331ff"],"0x5B53d56c5a63ebBE852D9D911b7886A4338953f1","0xB0F9F032158510cd4a926F9263Abc86bAF7b4Ab3","0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",1000000,5000,8,3],"numDeployments":1,"solcInputHash":"5f1699bd8d1774dc9c092814512a9850","metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.6+commit.11564f7e\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"address[4]\\",\\"name\\":\\"_arrLongHegicStrategy\\",\\"type\\":\\"address[4]\\"},{\\"internalType\\":\\"address[4]\\",\\"name\\":\\"_arrShortHegicStrategy\\",\\"type\\":\\"address[4]\\"},{\\"internalType\\":\\"contract IERC721\\",\\"name\\":\\"_collateralToken\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"contract IHegicOperationalTreasury\\",\\"name\\":\\"_operationalPool\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_USDC\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_minBorrowLimit\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_ltv\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_COLLATERAL_DECIMALS\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_PriorLiqPriceCoef\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"address\\",\\"name\\":\\"strategy\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"timestamp\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Borrow\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"userReturn\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"poolReturn\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"liqFee\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ExerciseByPriorLiqPrice\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"poolProfit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"liqFee\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"ForcedExercise\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"poolProfit\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"liqFee\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Liquidate\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Repay\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"uint256\\",\\"name\\":\\"optionID\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Unlock\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"COLLATERAL_DECIMALS\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"INTEREST_RATE_DECIMALS\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"LTV\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"LTV_DECIMALS\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"PriorLiqPriceCoef\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"USDC\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"borrow\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"borrowedByOption\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"borrowed\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"newBorrowTimestamp\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"calculateUpcomingFee\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"upcomingFee\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"collateralInfo\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"components\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"strategyAddress\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"strike\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"expiration\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"bool\\",\\"name\\":\\"isLong\\",\\"type\\":\\"bool\\"}],\\"internalType\\":\\"struct DDL.optionInfo\\",\\"name\\":\\"strategy\\",\\"type\\":\\"tuple\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"collateralToken\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC721\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"currentLiqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"currentPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"exerciseByPriorLiqPrice\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"forcedExercise\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"interestRate\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"liqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"liquidate\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"loanState\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"loanStateByPriorLiqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"lockOption\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"maxBorrowLimit\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"minBorrowLimit\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"operationalPool\\",\\"outputs\\":[{\\"internalType\\":\\"contract IHegicOperationalTreasury\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"pool\\",\\"outputs\\":[{\\"internalType\\":\\"contract IPoolDDL\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"priorLiqPrice\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"price\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"profitByOption\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"profit\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"repay\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setInterestRate\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setInterestRateDecimals\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setLTV\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"setMinBorrowLimit\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"value\\",\\"type\\":\\"address\\"}],\\"name\\":\\"setPool\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"strategyType\\",\\"outputs\\":[{\\"internalType\\":\\"enum DDL.HegicStrategyType\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"id\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"unlock\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/DDL.sol\\":\\"DDL\\"},\\"evmVersion\\":\\"berlin\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\npragma solidity >=0.7.0;\\\\n\\\\ninterface AggregatorV3Interface {\\\\n\\\\n  function decimals() external view returns (uint8);\\\\n  function description() external view returns (string memory);\\\\n  function version() external view returns (uint256);\\\\n\\\\n  // getRoundData and latestRoundData should both raise \\\\\\"No data present\\\\\\"\\\\n  // if they do not have data to report, instead of returning unset values\\\\n  // which could be misinterpreted as actual reported values.\\\\n  function getRoundData(uint80 _roundId)\\\\n    external\\\\n    view\\\\n    returns (\\\\n      uint80 roundId,\\\\n      int256 answer,\\\\n      uint256 startedAt,\\\\n      uint256 updatedAt,\\\\n      uint80 answeredInRound\\\\n    );\\\\n  function latestRoundData()\\\\n    external\\\\n    view\\\\n    returns (\\\\n      uint80 roundId,\\\\n      int256 answer,\\\\n      uint256 startedAt,\\\\n      uint256 updatedAt,\\\\n      uint80 answeredInRound\\\\n    );\\\\n\\\\n}\\\\n\\",\\"keccak256\\":\\"0x78af5c13ec137bdbb22ec9d65c730fb6f138d3a61a3fdbb63be4838ce7faf2a6\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor() {\\\\n        _transferOwnership(_msgSender());\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        _checkOwner();\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if the sender is not the owner.\\\\n     */\\\\n    function _checkOwner() internal view virtual {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        _transferOwnership(address(0));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        _transferOwnership(newOwner);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Internal function without access restriction.\\\\n     */\\\\n    function _transferOwnership(address newOwner) internal virtual {\\\\n        address oldOwner = _owner;\\\\n        _owner = newOwner;\\\\n        emit OwnershipTransferred(oldOwner, newOwner);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\n */\\\\ninterface IERC20 {\\\\n    /**\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\n     * another (`to`).\\\\n     *\\\\n     * Note that `value` may be zero.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\n     * a call to {approve}. `value` is the new allowance.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens in existence.\\\\n     */\\\\n    function totalSupply() external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\n     */\\\\n    function balanceOf(address account) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transfer(address to, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\n     * zero by default.\\\\n     *\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\n     */\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\n     * desired value afterwards:\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\n     * allowance.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) external returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\\\n *\\\\n * Adds the {permit} method, which can be used to change an account\'s ERC20 allowance (see {IERC20-allowance}) by\\\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn\'t\\\\n * need to send a transaction, and thus is not required to hold Ether at all.\\\\n */\\\\ninterface IERC20Permit {\\\\n    /**\\\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``\'s tokens,\\\\n     * given ``owner``\'s signed approval.\\\\n     *\\\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\\\n     * ordering also apply here.\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `spender` cannot be the zero address.\\\\n     * - `deadline` must be a timestamp in the future.\\\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\\\n     * over the EIP712-formatted function arguments.\\\\n     * - the signature must use ``owner``\'s current nonce (see {nonces}).\\\\n     *\\\\n     * For more information on the signature format, see the\\\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\\\n     * section].\\\\n     */\\\\n    function permit(\\\\n        address owner,\\\\n        address spender,\\\\n        uint256 value,\\\\n        uint256 deadline,\\\\n        uint8 v,\\\\n        bytes32 r,\\\\n        bytes32 s\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Returns the current nonce for `owner`. This value must be\\\\n     * included whenever a signature is generated for {permit}.\\\\n     *\\\\n     * Every successful call to {permit} increases ``owner``\'s nonce by one. This\\\\n     * prevents a signature from being used multiple times.\\\\n     */\\\\n    function nonces(address owner) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\\\n     */\\\\n    // solhint-disable-next-line func-name-mixedcase\\\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../IERC20.sol\\\\\\";\\\\nimport \\\\\\"../extensions/draft-IERC20Permit.sol\\\\\\";\\\\nimport \\\\\\"../../../utils/Address.sol\\\\\\";\\\\n\\\\n/**\\\\n * @title SafeERC20\\\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\\\n * contract returns false). Tokens that return no value (and instead revert or\\\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\\\n * successful.\\\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\\\n */\\\\nlibrary SafeERC20 {\\\\n    using Address for address;\\\\n\\\\n    function safeTransfer(\\\\n        IERC20 token,\\\\n        address to,\\\\n        uint256 value\\\\n    ) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\\\n    }\\\\n\\\\n    function safeTransferFrom(\\\\n        IERC20 token,\\\\n        address from,\\\\n        address to,\\\\n        uint256 value\\\\n    ) internal {\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Deprecated. This function has issues similar to the ones found in\\\\n     * {IERC20-approve}, and its usage is discouraged.\\\\n     *\\\\n     * Whenever possible, use {safeIncreaseAllowance} and\\\\n     * {safeDecreaseAllowance} instead.\\\\n     */\\\\n    function safeApprove(\\\\n        IERC20 token,\\\\n        address spender,\\\\n        uint256 value\\\\n    ) internal {\\\\n        // safeApprove should only be called when setting an initial allowance,\\\\n        // or when resetting it to zero. To increase and decrease it, use\\\\n        // \'safeIncreaseAllowance\' and \'safeDecreaseAllowance\'\\\\n        require(\\\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\\\n            \\\\\\"SafeERC20: approve from non-zero to non-zero allowance\\\\\\"\\\\n        );\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\\\n    }\\\\n\\\\n    function safeIncreaseAllowance(\\\\n        IERC20 token,\\\\n        address spender,\\\\n        uint256 value\\\\n    ) internal {\\\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n    }\\\\n\\\\n    function safeDecreaseAllowance(\\\\n        IERC20 token,\\\\n        address spender,\\\\n        uint256 value\\\\n    ) internal {\\\\n        unchecked {\\\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\\\n            require(oldAllowance >= value, \\\\\\"SafeERC20: decreased allowance below zero\\\\\\");\\\\n            uint256 newAllowance = oldAllowance - value;\\\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\\\n        }\\\\n    }\\\\n\\\\n    function safePermit(\\\\n        IERC20Permit token,\\\\n        address owner,\\\\n        address spender,\\\\n        uint256 value,\\\\n        uint256 deadline,\\\\n        uint8 v,\\\\n        bytes32 r,\\\\n        bytes32 s\\\\n    ) internal {\\\\n        uint256 nonceBefore = token.nonces(owner);\\\\n        token.permit(owner, spender, value, deadline, v, r, s);\\\\n        uint256 nonceAfter = token.nonces(owner);\\\\n        require(nonceAfter == nonceBefore + 1, \\\\\\"SafeERC20: permit did not succeed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\\\n     * @param token The token targeted by the call.\\\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\\\n     */\\\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\\\n        // We need to perform a low level call here, to bypass Solidity\'s return data size checking mechanism, since\\\\n        // we\'re implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\\\n        // the target address contains contract code and also asserts for success in the low-level call.\\\\n\\\\n        bytes memory returndata = address(token).functionCall(data, \\\\\\"SafeERC20: low-level call failed\\\\\\");\\\\n        if (returndata.length > 0) {\\\\n            // Return data is optional\\\\n            require(abi.decode(returndata, (bool)), \\\\\\"SafeERC20: ERC20 operation did not succeed\\\\\\");\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC721.sol\\\\\\";\\\\nimport \\\\\\"./IERC721Receiver.sol\\\\\\";\\\\nimport \\\\\\"./extensions/IERC721Metadata.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Address.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Context.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Strings.sol\\\\\\";\\\\nimport \\\\\\"../../utils/introspection/ERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\\\n * {ERC721Enumerable}.\\\\n */\\\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\\\n    using Address for address;\\\\n    using Strings for uint256;\\\\n\\\\n    // Token name\\\\n    string private _name;\\\\n\\\\n    // Token symbol\\\\n    string private _symbol;\\\\n\\\\n    // Mapping from token ID to owner address\\\\n    mapping(uint256 => address) private _owners;\\\\n\\\\n    // Mapping owner address to token count\\\\n    mapping(address => uint256) private _balances;\\\\n\\\\n    // Mapping from token ID to approved address\\\\n    mapping(uint256 => address) private _tokenApprovals;\\\\n\\\\n    // Mapping from owner to operator approvals\\\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\\\n     */\\\\n    constructor(string memory name_, string memory symbol_) {\\\\n        _name = name_;\\\\n        _symbol = symbol_;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC165-supportsInterface}.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\\\n        return\\\\n            interfaceId == type(IERC721).interfaceId ||\\\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\\\n            super.supportsInterface(interfaceId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-balanceOf}.\\\\n     */\\\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\\\n        require(owner != address(0), \\\\\\"ERC721: address zero is not a valid owner\\\\\\");\\\\n        return _balances[owner];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-ownerOf}.\\\\n     */\\\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\\\n        address owner = _owners[tokenId];\\\\n        require(owner != address(0), \\\\\\"ERC721: invalid token ID\\\\\\");\\\\n        return owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721Metadata-name}.\\\\n     */\\\\n    function name() public view virtual override returns (string memory) {\\\\n        return _name;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721Metadata-symbol}.\\\\n     */\\\\n    function symbol() public view virtual override returns (string memory) {\\\\n        return _symbol;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721Metadata-tokenURI}.\\\\n     */\\\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\\\n        _requireMinted(tokenId);\\\\n\\\\n        string memory baseURI = _baseURI();\\\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\\\\"\\\\\\";\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\\\n     * by default, can be overridden in child contracts.\\\\n     */\\\\n    function _baseURI() internal view virtual returns (string memory) {\\\\n        return \\\\\\"\\\\\\";\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-approve}.\\\\n     */\\\\n    function approve(address to, uint256 tokenId) public virtual override {\\\\n        address owner = ERC721.ownerOf(tokenId);\\\\n        require(to != owner, \\\\\\"ERC721: approval to current owner\\\\\\");\\\\n\\\\n        require(\\\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\\\n            \\\\\\"ERC721: approve caller is not token owner nor approved for all\\\\\\"\\\\n        );\\\\n\\\\n        _approve(to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-getApproved}.\\\\n     */\\\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\\\n        _requireMinted(tokenId);\\\\n\\\\n        return _tokenApprovals[tokenId];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-setApprovalForAll}.\\\\n     */\\\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\\\n        _setApprovalForAll(_msgSender(), operator, approved);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-isApprovedForAll}.\\\\n     */\\\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\\\n        return _operatorApprovals[owner][operator];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-transferFrom}.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) public virtual override {\\\\n        //solhint-disable-next-line max-line-length\\\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\\\\"ERC721: caller is not token owner nor approved\\\\\\");\\\\n\\\\n        _transfer(from, to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-safeTransferFrom}.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) public virtual override {\\\\n        safeTransferFrom(from, to, tokenId, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC721-safeTransferFrom}.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) public virtual override {\\\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\\\\"ERC721: caller is not token owner nor approved\\\\\\");\\\\n        _safeTransfer(from, to, tokenId, data);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\\\n     *\\\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\\\n     *\\\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must exist and be owned by `from`.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _safeTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        _transfer(from, to, tokenId);\\\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\\\\"ERC721: transfer to non ERC721Receiver implementer\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns whether `tokenId` exists.\\\\n     *\\\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\\\n     *\\\\n     * Tokens start existing when they are minted (`_mint`),\\\\n     * and stop existing when they are burned (`_burn`).\\\\n     */\\\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\\\n        return _owners[tokenId] != address(0);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     */\\\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\\\n        address owner = ERC721.ownerOf(tokenId);\\\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must not exist.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\\\n        _safeMint(to, tokenId, \\\\\\"\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\\\n     */\\\\n    function _safeMint(\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) internal virtual {\\\\n        _mint(to, tokenId);\\\\n        require(\\\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\\\n            \\\\\\"ERC721: transfer to non ERC721Receiver implementer\\\\\\"\\\\n        );\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Mints `tokenId` and transfers it to `to`.\\\\n     *\\\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must not exist.\\\\n     * - `to` cannot be the zero address.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _mint(address to, uint256 tokenId) internal virtual {\\\\n        require(to != address(0), \\\\\\"ERC721: mint to the zero address\\\\\\");\\\\n        require(!_exists(tokenId), \\\\\\"ERC721: token already minted\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(address(0), to, tokenId);\\\\n\\\\n        _balances[to] += 1;\\\\n        _owners[tokenId] = to;\\\\n\\\\n        emit Transfer(address(0), to, tokenId);\\\\n\\\\n        _afterTokenTransfer(address(0), to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Destroys `tokenId`.\\\\n     * The approval is cleared when the token is burned.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _burn(uint256 tokenId) internal virtual {\\\\n        address owner = ERC721.ownerOf(tokenId);\\\\n\\\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\\\n\\\\n        // Clear approvals\\\\n        _approve(address(0), tokenId);\\\\n\\\\n        _balances[owner] -= 1;\\\\n        delete _owners[tokenId];\\\\n\\\\n        emit Transfer(owner, address(0), tokenId);\\\\n\\\\n        _afterTokenTransfer(owner, address(0), tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers `tokenId` from `from` to `to`.\\\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must be owned by `from`.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function _transfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) internal virtual {\\\\n        require(ERC721.ownerOf(tokenId) == from, \\\\\\"ERC721: transfer from incorrect owner\\\\\\");\\\\n        require(to != address(0), \\\\\\"ERC721: transfer to the zero address\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(from, to, tokenId);\\\\n\\\\n        // Clear approvals from the previous owner\\\\n        _approve(address(0), tokenId);\\\\n\\\\n        _balances[from] -= 1;\\\\n        _balances[to] += 1;\\\\n        _owners[tokenId] = to;\\\\n\\\\n        emit Transfer(from, to, tokenId);\\\\n\\\\n        _afterTokenTransfer(from, to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Approve `to` to operate on `tokenId`\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function _approve(address to, uint256 tokenId) internal virtual {\\\\n        _tokenApprovals[tokenId] = to;\\\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\\\n     *\\\\n     * Emits an {ApprovalForAll} event.\\\\n     */\\\\n    function _setApprovalForAll(\\\\n        address owner,\\\\n        address operator,\\\\n        bool approved\\\\n    ) internal virtual {\\\\n        require(owner != operator, \\\\\\"ERC721: approve to caller\\\\\\");\\\\n        _operatorApprovals[owner][operator] = approved;\\\\n        emit ApprovalForAll(owner, operator, approved);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\\\n     */\\\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\\\n        require(_exists(tokenId), \\\\\\"ERC721: invalid token ID\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\\\n     * The call is not executed if the target address is not a contract.\\\\n     *\\\\n     * @param from address representing the previous owner of the given token ID\\\\n     * @param to target address that will receive the tokens\\\\n     * @param tokenId uint256 ID of the token to be transferred\\\\n     * @param data bytes optional data to send along with the call\\\\n     * @return bool whether the call correctly returned the expected magic value\\\\n     */\\\\n    function _checkOnERC721Received(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes memory data\\\\n    ) private returns (bool) {\\\\n        if (to.isContract()) {\\\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\\\n                return retval == IERC721Receiver.onERC721Received.selector;\\\\n            } catch (bytes memory reason) {\\\\n                if (reason.length == 0) {\\\\n                    revert(\\\\\\"ERC721: transfer to non ERC721Receiver implementer\\\\\\");\\\\n                } else {\\\\n                    /// @solidity memory-safe-assembly\\\\n                    assembly {\\\\n                        revert(add(32, reason), mload(reason))\\\\n                    }\\\\n                }\\\\n            }\\\\n        } else {\\\\n            return true;\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Hook that is called before any token transfer. This includes minting\\\\n     * and burning.\\\\n     *\\\\n     * Calling conditions:\\\\n     *\\\\n     * - When `from` and `to` are both non-zero, ``from``\'s `tokenId` will be\\\\n     * transferred to `to`.\\\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\\\n     * - When `to` is zero, ``from``\'s `tokenId` will be burned.\\\\n     * - `from` and `to` are never both zero.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _beforeTokenTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) internal virtual {}\\\\n\\\\n    /**\\\\n     * @dev Hook that is called after any transfer of tokens. This includes\\\\n     * minting and burning.\\\\n     *\\\\n     * Calling conditions:\\\\n     *\\\\n     * - when `from` and `to` are both non-zero.\\\\n     * - `from` and `to` are never both zero.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _afterTokenTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) internal virtual {}\\\\n}\\\\n\\",\\"keccak256\\":\\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../../utils/introspection/IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Required interface of an ERC721 compliant contract.\\\\n */\\\\ninterface IERC721 is IERC165 {\\\\n    /**\\\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\\\n\\\\n    /**\\\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\\\n\\\\n    /**\\\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\\\n     */\\\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\\\n\\\\n    /**\\\\n     * @dev Returns the number of tokens in ``owner``\'s account.\\\\n     */\\\\n    function balanceOf(address owner) external view returns (uint256 balance);\\\\n\\\\n    /**\\\\n     * @dev Returns the owner of the `tokenId` token.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     */\\\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\\\n\\\\n    /**\\\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must exist and be owned by `from`.\\\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId,\\\\n        bytes calldata data\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must exist and be owned by `from`.\\\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function safeTransferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\\\n     *\\\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `tokenId` token must be owned by `from`.\\\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 tokenId\\\\n    ) external;\\\\n\\\\n    /**\\\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\\\n     * The approval is cleared when the token is transferred.\\\\n     *\\\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The caller must own the token or be an approved operator.\\\\n     * - `tokenId` must exist.\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address to, uint256 tokenId) external;\\\\n\\\\n    /**\\\\n     * @dev Approve or remove `operator` as an operator for the caller.\\\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - The `operator` cannot be the caller.\\\\n     *\\\\n     * Emits an {ApprovalForAll} event.\\\\n     */\\\\n    function setApprovalForAll(address operator, bool _approved) external;\\\\n\\\\n    /**\\\\n     * @dev Returns the account approved for `tokenId` token.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `tokenId` must exist.\\\\n     */\\\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\\\n\\\\n    /**\\\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\\\n     *\\\\n     * See {setApprovalForAll}\\\\n     */\\\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @title ERC721 token receiver interface\\\\n * @dev Interface for any contract that wants to support safeTransfers\\\\n * from ERC721 asset contracts.\\\\n */\\\\ninterface IERC721Receiver {\\\\n    /**\\\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\\\n     * by `operator` from `from`, this function is called.\\\\n     *\\\\n     * It must return its Solidity selector to confirm the token transfer.\\\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\\\n     *\\\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\\\n     */\\\\n    function onERC721Received(\\\\n        address operator,\\\\n        address from,\\\\n        uint256 tokenId,\\\\n        bytes calldata data\\\\n    ) external returns (bytes4);\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../IERC721.sol\\\\\\";\\\\n\\\\n/**\\\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\\\n */\\\\ninterface IERC721Metadata is IERC721 {\\\\n    /**\\\\n     * @dev Returns the token collection name.\\\\n     */\\\\n    function name() external view returns (string memory);\\\\n\\\\n    /**\\\\n     * @dev Returns the token collection symbol.\\\\n     */\\\\n    function symbol() external view returns (string memory);\\\\n\\\\n    /**\\\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\\\n     */\\\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Address.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\\\n\\\\npragma solidity ^0.8.1;\\\\n\\\\n/**\\\\n * @dev Collection of functions related to the address type\\\\n */\\\\nlibrary Address {\\\\n    /**\\\\n     * @dev Returns true if `account` is a contract.\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * It is unsafe to assume that an address for which this function returns\\\\n     * false is an externally-owned account (EOA) and not a contract.\\\\n     *\\\\n     * Among others, `isContract` will return false for the following\\\\n     * types of addresses:\\\\n     *\\\\n     *  - an externally-owned account\\\\n     *  - a contract in construction\\\\n     *  - an address where a contract will be created\\\\n     *  - an address where a contract lived, but was destroyed\\\\n     * ====\\\\n     *\\\\n     * [IMPORTANT]\\\\n     * ====\\\\n     * You shouldn\'t rely on `isContract` to protect against flash loan attacks!\\\\n     *\\\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\\\n     * constructor.\\\\n     * ====\\\\n     */\\\\n    function isContract(address account) internal view returns (bool) {\\\\n        // This method relies on extcodesize/address.code.length, which returns 0\\\\n        // for contracts in construction, since the code is only stored at the end\\\\n        // of the constructor execution.\\\\n\\\\n        return account.code.length > 0;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Replacement for Solidity\'s `transfer`: sends `amount` wei to\\\\n     * `recipient`, forwarding all available gas and reverting on errors.\\\\n     *\\\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\\\n     * imposed by `transfer`, making them unable to receive funds via\\\\n     * `transfer`. {sendValue} removes this limitation.\\\\n     *\\\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\\\n     *\\\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\\\n     * taken to not create reentrancy vulnerabilities. Consider using\\\\n     * {ReentrancyGuard} or the\\\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\\\n     */\\\\n    function sendValue(address payable recipient, uint256 amount) internal {\\\\n        require(address(this).balance >= amount, \\\\\\"Address: insufficient balance\\\\\\");\\\\n\\\\n        (bool success, ) = recipient.call{value: amount}(\\\\\\"\\\\\\");\\\\n        require(success, \\\\\\"Address: unable to send value, recipient may have reverted\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Performs a Solidity function call using a low level `call`. A\\\\n     * plain `call` is an unsafe replacement for a function call: use this\\\\n     * function instead.\\\\n     *\\\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\\\n     * function (like regular Solidity function calls).\\\\n     *\\\\n     * Returns the raw returned data. To convert to the expected return value,\\\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `target` must be a contract.\\\\n     * - calling `target` with `data` must not revert.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionCall(target, data, \\\\\\"Address: low-level call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, 0, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but also transferring `value` wei to `target`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - the calling contract must have an ETH balance of at least `value`.\\\\n     * - the called Solidity function must be `payable`.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(\\\\n        address target,\\\\n        bytes memory data,\\\\n        uint256 value\\\\n    ) internal returns (bytes memory) {\\\\n        return functionCallWithValue(target, data, value, \\\\\\"Address: low-level call with value failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\\\n     *\\\\n     * _Available since v3.1._\\\\n     */\\\\n    function functionCallWithValue(\\\\n        address target,\\\\n        bytes memory data,\\\\n        uint256 value,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        require(address(this).balance >= value, \\\\\\"Address: insufficient balance for call\\\\\\");\\\\n        require(isContract(target), \\\\\\"Address: call to non-contract\\\\\\");\\\\n\\\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\\\n        return verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\\\n        return functionStaticCall(target, data, \\\\\\"Address: low-level static call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a static call.\\\\n     *\\\\n     * _Available since v3.3._\\\\n     */\\\\n    function functionStaticCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal view returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: static call to non-contract\\\\\\");\\\\n\\\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\\\n        return verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\\\n        return functionDelegateCall(target, data, \\\\\\"Address: low-level delegate call failed\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\\\n     * but performing a delegate call.\\\\n     *\\\\n     * _Available since v3.4._\\\\n     */\\\\n    function functionDelegateCall(\\\\n        address target,\\\\n        bytes memory data,\\\\n        string memory errorMessage\\\\n    ) internal returns (bytes memory) {\\\\n        require(isContract(target), \\\\\\"Address: delegate call to non-contract\\\\\\");\\\\n\\\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\\\n        return verifyCallResult(success, returndata, errorMessage);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn\'t, either by bubbling the\\\\n     * revert reason using the provided one.\\\\n     *\\\\n     * _Available since v4.3._\\\\n     */\\\\n    function verifyCallResult(\\\\n        bool success,\\\\n        bytes memory returndata,\\\\n        string memory errorMessage\\\\n    ) internal pure returns (bytes memory) {\\\\n        if (success) {\\\\n            return returndata;\\\\n        } else {\\\\n            // Look for revert reason and bubble it up if present\\\\n            if (returndata.length > 0) {\\\\n                // The easiest way to bubble the revert reason is using memory via assembly\\\\n                /// @solidity memory-safe-assembly\\\\n                assembly {\\\\n                    let returndata_size := mload(returndata)\\\\n                    revert(add(32, returndata), returndata_size)\\\\n                }\\\\n            } else {\\\\n                revert(errorMessage);\\\\n            }\\\\n        }\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes calldata) {\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Strings.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev String operations.\\\\n */\\\\nlibrary Strings {\\\\n    bytes16 private constant _HEX_SYMBOLS = \\\\\\"0123456789abcdef\\\\\\";\\\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\\\n\\\\n    /**\\\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\\\n     */\\\\n    function toString(uint256 value) internal pure returns (string memory) {\\\\n        // Inspired by OraclizeAPI\'s implementation - MIT licence\\\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\\\n\\\\n        if (value == 0) {\\\\n            return \\\\\\"0\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 digits;\\\\n        while (temp != 0) {\\\\n            digits++;\\\\n            temp /= 10;\\\\n        }\\\\n        bytes memory buffer = new bytes(digits);\\\\n        while (value != 0) {\\\\n            digits -= 1;\\\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\\\n            value /= 10;\\\\n        }\\\\n        return string(buffer);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\\\n     */\\\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\\\n        if (value == 0) {\\\\n            return \\\\\\"0x00\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 length = 0;\\\\n        while (temp != 0) {\\\\n            length++;\\\\n            temp >>= 8;\\\\n        }\\\\n        return toHexString(value, length);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\\\n     */\\\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\\\n        bytes memory buffer = new bytes(2 * length + 2);\\\\n        buffer[0] = \\\\\\"0\\\\\\";\\\\n        buffer[1] = \\\\\\"x\\\\\\";\\\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\\\n            value >>= 4;\\\\n        }\\\\n        require(value == 0, \\\\\\"Strings: hex length insufficient\\\\\\");\\\\n        return string(buffer);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\\\n     */\\\\n    function toHexString(address addr) internal pure returns (string memory) {\\\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC165.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of the {IERC165} interface.\\\\n *\\\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\\\n * for the additional interface id that will be supported. For example:\\\\n *\\\\n * ```solidity\\\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\\\n * }\\\\n * ```\\\\n *\\\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\\\n */\\\\nabstract contract ERC165 is IERC165 {\\\\n    /**\\\\n     * @dev See {IERC165-supportsInterface}.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\\\n        return interfaceId == type(IERC165).interfaceId;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/introspection/IERC165.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC165 standard, as defined in the\\\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\\\n *\\\\n * Implementers can declare support of contract interfaces, which can then be\\\\n * queried by others ({ERC165Checker}).\\\\n *\\\\n * For an implementation, see {ERC165}.\\\\n */\\\\ninterface IERC165 {\\\\n    /**\\\\n     * @dev Returns true if this contract implements the interface defined by\\\\n     * `interfaceId`. See the corresponding\\\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\\\n     * to learn more about how these ids are created.\\\\n     *\\\\n     * This function call must use less than 30 000 gas.\\\\n     */\\\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\\",\\"license\\":\\"MIT\\"},\\"contracts/DDL.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: RANDOM_TEXT\\\\n\\\\npragma solidity 0.8.6;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\\\\";\\\\nimport \\\\\\"./IHegicOperationalTreasury.sol\\\\\\";\\\\nimport \\\\\\"./IHegicStrategy.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\\\\";\\\\nimport \\\\\\"./IPoolDDL.sol\\\\\\";\\\\n\\\\ncontract DDL is Ownable {\\\\n    using SafeERC20 for IERC20;\\\\n\\\\n    uint256 public LTV;\\\\n    uint256 public LTV_DECIMALS = 10**4;\\\\n\\\\n    IERC721 public collateralToken;\\\\n    IHegicOperationalTreasury public operationalPool;\\\\n    IERC20 public USDC;\\\\n\\\\n    uint256 public interestRate = 19025875190258754083880960;\\\\n    uint256 public INTEREST_RATE_DECIMALS = 10**30;\\\\n\\\\n    uint256 public minBorrowLimit;\\\\n    uint256 public COLLATERAL_DECIMALS;\\\\n\\\\n    uint256 public PriorLiqPriceCoef;\\\\n\\\\n    IPoolDDL public pool;\\\\n\\\\n    struct BorrowedByOption {\\\\n        uint256 borrowed;\\\\n        uint256 newBorrowTimestamp;\\\\n    }\\\\n    struct optionInfo {\\\\n        address strategyAddress;\\\\n        uint256 amount;\\\\n        uint256 strike;\\\\n        uint256 expiration;\\\\n        bool isLong;\\\\n    }\\\\n    struct CollateralInfo {\\\\n        address owner;\\\\n        optionInfo strategy;\\\\n    }\\\\n\\\\n    enum HegicStrategyType {\\\\n        Invalid,\\\\n        Long,\\\\n        Short\\\\n    }\\\\n\\\\n    mapping(uint256 => CollateralInfo) public collateralInfo;\\\\n    mapping(uint256 => BorrowedByOption) public borrowedByOption;\\\\n    mapping(address => HegicStrategyType) public strategyType;\\\\n\\\\n    event Borrow(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 amount,\\\\n        address strategy,\\\\n        uint256 timestamp\\\\n    );\\\\n    event Repay(address indexed user, uint256 indexed optionID, uint256 amount);\\\\n    event Liquidate(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 amount,\\\\n        uint256 poolProfit,\\\\n        uint256 liqFee\\\\n    );\\\\n    event Unlock(address indexed user, uint256 indexed optionID);\\\\n    event ForcedExercise(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 amount,\\\\n        uint256 poolProfit,\\\\n        uint256 liqFee\\\\n    );\\\\n    event ExerciseByPriorLiqPrice(\\\\n        address indexed user,\\\\n        uint256 indexed optionID,\\\\n        uint256 userReturn,\\\\n        uint256 poolReturn,\\\\n        uint256 liqFee\\\\n    );\\\\n\\\\n    constructor(\\\\n        address[4] memory _arrLongHegicStrategy,\\\\n        address[4] memory _arrShortHegicStrategy,\\\\n        IERC721 _collateralToken,\\\\n        IHegicOperationalTreasury _operationalPool,\\\\n        IERC20 _USDC,\\\\n        uint256 _minBorrowLimit,\\\\n        uint256 _ltv,\\\\n        uint256 _COLLATERAL_DECIMALS,\\\\n        uint256 _PriorLiqPriceCoef\\\\n    ) {\\\\n        for (uint256 i = 0; i < _arrLongHegicStrategy.length; i++) {\\\\n            strategyType[_arrLongHegicStrategy[i]] = HegicStrategyType.Long;\\\\n        }\\\\n        for (uint256 i = 0; i < _arrShortHegicStrategy.length; i++) {\\\\n            strategyType[_arrShortHegicStrategy[i]] = HegicStrategyType.Short;\\\\n        }\\\\n        collateralToken = _collateralToken;\\\\n        operationalPool = _operationalPool;\\\\n        USDC = _USDC;\\\\n        minBorrowLimit = _minBorrowLimit;\\\\n        LTV = _ltv;\\\\n        COLLATERAL_DECIMALS = 10**_COLLATERAL_DECIMALS;\\\\n        PriorLiqPriceCoef = _PriorLiqPriceCoef;\\\\n    }\\\\n\\\\n    function setLTV(uint256 value) external onlyOwner {\\\\n        require(value <= 8000, \\\\\\"invalid value\\\\\\");\\\\n        LTV = value;\\\\n    }\\\\n\\\\n    function setInterestRate(uint256 value) external onlyOwner {\\\\n        interestRate = value;\\\\n    }\\\\n\\\\n    function setInterestRateDecimals(uint256 value) external onlyOwner {\\\\n        INTEREST_RATE_DECIMALS = value;\\\\n    }\\\\n\\\\n    function setMinBorrowLimit(uint256 value) external onlyOwner {\\\\n        minBorrowLimit = value;\\\\n    }\\\\n\\\\n    function setPool(address value) external onlyOwner {\\\\n        pool = IPoolDDL(value);\\\\n    }\\\\n\\\\n    function lockOption(uint256 id) external {\\\\n        require(pool.openDeDeLend(), \\\\\\"pauseDeDeLend\\\\\\");\\\\n        (\\\\n            IHegicOperationalTreasury.LockedLiquidityState state,\\\\n            address strategy,\\\\n            ,\\\\n            ,\\\\n            uint32 expiration\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        require(block.timestamp <= uint256(expiration) - 60*60, \\\\\\"too late\\\\\\");\\\\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\\\\n            .strategyData(id);\\\\n        require(\\\\n            state == IHegicOperationalTreasury.LockedLiquidityState.Locked,\\\\n            \\\\\\"option is active\\\\\\"\\\\n        );\\\\n        require(collateralToken.ownerOf(id) == msg.sender, \\\\\\"you not owner\\\\\\");\\\\n        require(\\\\n            strategyType[strategy] != HegicStrategyType.Invalid,\\\\n            \\\\\\"strategy not supported\\\\\\"\\\\n        );\\\\n        collateralToken.transferFrom(msg.sender, address(this), id);\\\\n        bool isLong = strategyType[strategy] == HegicStrategyType.Long ? true: false;\\\\n        collateralInfo[id] = CollateralInfo(\\\\n            msg.sender,\\\\n            optionInfo(\\\\n                strategy,\\\\n                uint256(amount),\\\\n                uint256(strike),\\\\n                uint256(expiration),\\\\n                isLong\\\\n            )\\\\n        );\\\\n    }\\\\n\\\\n    function maxBorrowLimit(uint256 id) public view returns (uint256) {\\\\n        return (profitByOption(id) / LTV_DECIMALS) * LTV;\\\\n    }\\\\n\\\\n    function borrow(uint256 id, uint256 amount) external {\\\\n        require(pool.openDeDeLend(), \\\\\\"pauseDeDeLend\\\\\\");\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 maxLimit = maxBorrowLimit(id);\\\\n        (\\\\n            IHegicOperationalTreasury.LockedLiquidityState state,\\\\n            ,\\\\n            ,\\\\n            ,\\\\n\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        uint256 totalBalance = pool.getTotalBalance(); \\\\n        require(amount >= minBorrowLimit, \\\\\\"amount less minBorrowLimit\\\\\\");\\\\n        require(amount + data.borrowed <= maxLimit, \\\\\\"amount + data.borrowed less maxLimit\\\\\\");\\\\n        require(state == IHegicOperationalTreasury.LockedLiquidityState.Locked, \\\\\\"invalid state\\\\\\");\\\\n        require(msg.sender == collateralInfo[id].owner, \\\\\\"you are not the owner\\\\\\");\\\\n        require(amount <= totalBalance, \\\\\\"there is not enough money in the pool\\\\\\");\\\\n        require(block.timestamp <= collateralInfo[id].strategy.expiration - 60*60, \\\\\\"too late\\\\\\");\\\\n        if (collateralInfo[id].strategy.isLong) {\\\\n            require(currentPrice(id) > priorLiqPrice(id), \\\\\\"the price is too low\\\\\\");\\\\n        } else {\\\\n            require(currentPrice(id) < priorLiqPrice(id), \\\\\\"the price is too high\\\\\\");\\\\n        }\\\\n        uint256 upcomingFee = calculateUpcomingFee(id);\\\\n        borrowedByOption[id] = BorrowedByOption(\\\\n            amount + data.borrowed + upcomingFee,\\\\n            block.timestamp\\\\n        );\\\\n        pool.addTotalLocked(amount + upcomingFee);\\\\n        pool.send(collateralInfo[id].owner, amount);\\\\n        emit Borrow(\\\\n            msg.sender,\\\\n            id,\\\\n            amount,\\\\n            collateralInfo[id].strategy.strategyAddress,\\\\n            block.timestamp\\\\n        );\\\\n    }\\\\n\\\\n    function liquidate(uint256 id) external {\\\\n        require(loanState(id), \\\\\\"invalid price\\\\\\");\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 profit = profitByOption(id);\\\\n        exerciseOption(id);\\\\n        uint256 diff = 0;\\\\n        pool.subTotalLocked(data.borrowed);\\\\n        if (profit > data.borrowed) {\\\\n            diff = profit - data.borrowed;\\\\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\\\\n            USDC.transfer(msg.sender, diff*10/100);\\\\n        } else {\\\\n            USDC.transfer(address(pool), profit);\\\\n        }\\\\n        emit Liquidate(\\\\n            collateralInfo[id].owner,\\\\n            id,\\\\n            data.borrowed,\\\\n            diff*90/100,\\\\n            diff*10/100\\\\n        );\\\\n    }\\\\n\\\\n    function forcedExercise(uint256 id) external {\\\\n        require(\\\\n            block.timestamp > collateralInfo[id].strategy.expiration - 30 * 60\\\\n        );\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 profit = profitByOption(id);\\\\n        exerciseOption(id);\\\\n        uint256 diff = 0;\\\\n        pool.subTotalLocked(data.borrowed);\\\\n        if (profit > data.borrowed) {\\\\n            diff = profit - data.borrowed;\\\\n            USDC.transfer(address(pool), data.borrowed+diff*90/100);\\\\n            USDC.transfer(msg.sender, diff*10/100);\\\\n        } else {\\\\n            USDC.transfer(address(pool), profit);\\\\n        }\\\\n        emit ForcedExercise(\\\\n            collateralInfo[id].owner,\\\\n            id,\\\\n            data.borrowed,\\\\n            diff*90/100,\\\\n            diff*10/100\\\\n        );\\\\n    }\\\\n\\\\n    function exerciseByPriorLiqPrice(uint256 id) external {\\\\n        require(loanStateByPriorLiqPrice(id), \\\\\\"invalid price\\\\\\");\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 profit = profitByOption(id);\\\\n        exerciseOption(id);\\\\n        pool.subTotalLocked(data.borrowed);\\\\n        USDC.transfer(address(pool), data.borrowed);\\\\n        USDC.transfer(collateralInfo[id].owner, profit - (data.borrowed + data.borrowed*10/100));\\\\n        USDC.transfer(msg.sender, data.borrowed*10/100);\\\\n        emit ExerciseByPriorLiqPrice(\\\\n            collateralInfo[id].owner,\\\\n            id,\\\\n            profit - (data.borrowed + data.borrowed*10/100),\\\\n            data.borrowed,\\\\n            data.borrowed*10/100\\\\n        );\\\\n    }\\\\n\\\\n    function calculateUpcomingFee(uint256 id)\\\\n        public\\\\n        view\\\\n        returns (uint256 upcomingFee)\\\\n    {\\\\n        BorrowedByOption storage data = borrowedByOption[id];\\\\n        uint256 periodInMinutes = (block.timestamp - data.newBorrowTimestamp) /\\\\n            60;\\\\n        upcomingFee =\\\\n            ((data.borrowed / 100) * (periodInMinutes * interestRate)) /\\\\n            INTEREST_RATE_DECIMALS;\\\\n    }\\\\n\\\\n    function repay(uint256 id, uint256 amount) external {\\\\n        require(borrowedByOption[id].borrowed > 0, \\\\\\"option redeemed\\\\\\");\\\\n        uint256 upcomingFee = calculateUpcomingFee(id);\\\\n        require(\\\\n            amount <= borrowedByOption[id].borrowed + upcomingFee,\\\\n            \\\\\\"too much amount\\\\\\"\\\\n        );\\\\n        require(msg.sender == collateralInfo[id].owner);\\\\n        uint256 newBorrow = borrowedByOption[id].borrowed +\\\\n            upcomingFee -\\\\n            amount;\\\\n        pool.subTotalLocked(amount - upcomingFee);\\\\n        borrowedByOption[id] = BorrowedByOption(\\\\n            newBorrow,\\\\n            block.timestamp\\\\n        );\\\\n        USDC.transferFrom(collateralInfo[id].owner, address(this), amount);\\\\n        USDC.transfer(address(pool), amount);\\\\n        emit Repay(msg.sender, id, amount);\\\\n    }\\\\n\\\\n    function unlock(uint256 id) external {\\\\n        require(borrowedByOption[id].borrowed == 0, \\\\\\"option is blocked\\\\\\");\\\\n        collateralToken.transferFrom(\\\\n            address(this),\\\\n            collateralInfo[id].owner,\\\\n            id\\\\n        );\\\\n        emit Unlock(msg.sender, id);\\\\n    }\\\\n\\\\n    function loanState(uint256 id) public view returns (bool) {\\\\n        CollateralInfo storage collateral = collateralInfo[id];\\\\n        if (collateral.strategy.isLong) {\\\\n            return currentPrice(id) <= liqPrice(id);\\\\n        } else {\\\\n            return currentPrice(id) >= liqPrice(id);\\\\n        }\\\\n    }\\\\n\\\\n    function loanStateByPriorLiqPrice(uint256 id) public view returns (bool) {\\\\n        CollateralInfo storage collateral = collateralInfo[id];\\\\n        if (collateral.strategy.isLong) {\\\\n            return currentPrice(id) <= priorLiqPrice(id);\\\\n        } else {\\\\n            return currentPrice(id) >= priorLiqPrice(id);\\\\n        }\\\\n    }\\\\n\\\\n    function currentPrice(uint256 id) public view returns (uint256 price) {\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        (, int256 latestPrice, , , ) = IHegicStrategy(\\\\n            data.strategy.strategyAddress\\\\n        ).priceProvider().latestRoundData();\\\\n        price = uint256(latestPrice);\\\\n    }\\\\n\\\\n    function priorLiqPrice(uint256 id) public view returns (uint256 price) {\\\\n        (\\\\n            ,\\\\n            address strategy,\\\\n            ,\\\\n            ,\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        (, uint128 strike) = IHegicStrategy(strategy).strategyData(id);\\\\n        if (collateralInfo[id].strategy.isLong) {\\\\n            return uint256(strike)*(100+PriorLiqPriceCoef)/100; \\\\n        } \\\\n        return uint256(strike)*(100-PriorLiqPriceCoef)/100;\\\\n    }\\\\n    function liqPrice(uint256 id) public view returns (uint256 price) {\\\\n        BorrowedByOption storage optionData = borrowedByOption[id];\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        (\\\\n            ,\\\\n            address strategy,\\\\n            ,\\\\n            ,\\\\n        ) = operationalPool.lockedLiquidity(id);\\\\n        (uint128 amount, uint128 strike) = IHegicStrategy(strategy)\\\\n        .strategyData(id);\\\\n        if (data.strategy.isLong) {\\\\n            return uint256(strike) + (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\\\\n        }\\\\n        return uint256(strike) - (optionData.borrowed*COLLATERAL_DECIMALS)/(uint256(amount))*120;\\\\n    }\\\\n\\\\n    function currentLiqPrice(uint256 id) public view returns (uint256 price) {\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        if (data.strategy.isLong){\\\\n            if (priorLiqPrice(id) > liqPrice(id)) {\\\\n                return priorLiqPrice(id);\\\\n            }\\\\n            return liqPrice(id);\\\\n        }\\\\n        if (priorLiqPrice(id) < liqPrice(id)) {\\\\n            return priorLiqPrice(id);\\\\n        }\\\\n        return liqPrice(id);\\\\n    }\\\\n\\\\n    function profitByOption(uint256 id) public view returns (uint256 profit) {\\\\n        (,address strategy,,,) = operationalPool.lockedLiquidity(id);\\\\n        return IHegicStrategy(strategy).profitOf(id);\\\\n    }\\\\n\\\\n    function exerciseOption(uint256 id) private {\\\\n        CollateralInfo storage data = collateralInfo[id];\\\\n        return IHegicStrategy(data.strategy.strategyAddress).exercise(id);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0x5647bab87c62d6ec4e3cc2c1941599e0f25633a9a03eb953db706317ef2e26e2\\",\\"license\\":\\"RANDOM\\"},\\"contracts/IHegicOperationalTreasury.sol\\":{\\"content\\":\\"pragma solidity 0.8.6;\\\\n\\\\ninterface IHegicOperationalTreasury {\\\\n    enum LockedLiquidityState {Unlocked, Locked}\\\\n\\\\n    function lockedLiquidity(uint256 id)\\\\n        external\\\\n        view\\\\n        returns (\\\\n            LockedLiquidityState state,\\\\n            address strategy,\\\\n            uint128 negativepnl,\\\\n            uint128 positivepnl,\\\\n            uint32 expiration\\\\n        );\\\\n}\\\\n\\",\\"keccak256\\":\\"0x4690046de7111ac32ee484fa830e015b8071268b183da10bc6e7a4af5486166e\\"},\\"contracts/IHegicStrategy.sol\\":{\\"content\\":\\"pragma solidity 0.8.6;\\\\n\\\\n import \\\\\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\\\\";\\\\n\\\\ninterface IHegicStrategy {\\\\n    function exercise(uint256 optionID) external;\\\\n\\\\n    function profitOf(uint256 optionID) external view returns (uint256 amount);\\\\n\\\\n    function priceProvider() external view returns (AggregatorV3Interface priceProvider);\\\\n\\\\n    function strategyData(uint256 id) external view returns (uint128 amount, uint128 strike);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x263af5040cf9a86c1490a47077d1517a9726026216aa85643133d82282c0d886\\"},\\"contracts/IPoolDDL.sol\\":{\\"content\\":\\"pragma solidity 0.8.6;\\\\n\\\\ninterface IPoolDDL {\\\\n    function send(address to, uint amount) external;\\\\n    function getTotalBalance() external view returns (uint256 balance);\\\\n    function addTotalLocked(uint256 value) external;\\\\n    function subTotalLocked(uint256 value) external; \\\\n    function openDeDeLend() external view returns (bool openDeDeLend);\\\\n}\\",\\"keccak256\\":\\"0xc8ac2c3446c29742ebf558b0e7b67c715d00fd3db64455f83d730f72d6dbcd5c\\"}},\\"version\\":1}","bytecode":"0x60806040526127106002556a0fbce2c2bf9557000000006006556c0c9f2c9cd04674edea400000006007553480156200003757600080fd5b5060405162003010380380620030108339810160408190526200005a91620002c4565b6200006533620001d0565b60005b6004811015620000e5576001600e60008c84600481106200008d576200008d620004cb565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff19166001836002811115620000cb57620000cb620004b5565b021790555080620000dc8162000481565b91505062000068565b5060005b600481101562000166576002600e60008b84600481106200010e576200010e620004cb565b602090810291909101516001600160a01b03168252810191909152604001600020805460ff191660018360028111156200014c576200014c620004b5565b0217905550806200015d8162000481565b915050620000e9565b50600380546001600160a01b03808a166001600160a01b03199283161790925560048054898416908316179055600580549288169290911691909117905560088490556001839055620001bb82600a620003b6565b600955600a5550620004fa9650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516200022d81620004e1565b919050565b600082601f8301126200024457600080fd5b604051608081016001600160401b03811182821017156200027557634e487b7160e01b600052604160045260246000fd5b6040528083608081018610156200028b57600080fd5b60005b6004811015620002b957620002a38262000220565b835260209283019291909101906001016200028e565b509195945050505050565b60008060008060008060008060006101e08a8c031215620002e457600080fd5b620002f08b8b62000232565b9850620003018b60808c0162000232565b97506101008a01516200031481620004e1565b6101208b01519097506200032881620004e1565b6101408b01519096506200033c81620004e1565b809550506101608a015193506101808a015192506101a08a015191506101c08a015190509295985092959850929598565b600181815b80851115620003ae5781600019048211156200039257620003926200049f565b80851615620003a057918102915b93841c939080029062000372565b509250929050565b6000620003c48383620003cb565b9392505050565b600082620003dc575060016200047b565b81620003eb575060006200047b565b81600181146200040457600281146200040f576200042f565b60019150506200047b565b60ff8411156200042357620004236200049f565b50506001821b6200047b565b5060208310610133831016604e8410600b841016171562000454575081810a6200047b565b6200046083836200036d565b80600019048211156200047757620004776200049f565b0290505b92915050565b60006000198214156200049857620004986200049f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0381168114620004f757600080fd5b50565b612b06806200050a6000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c806366234ffa116101305780639d38d064116100b8578063d88c69101161007c578063d88c691014610593578063d8aed145146105a6578063e260d747146105b9578063f05735db146105c2578063f2fde38b146105d557600080fd5b80639d38d0641461053e5780639e3aa5b114610547578063b13de2661461055a578063b2016bd41461056d578063c37077091461058057600080fd5b80637c3a00fd116100ff5780637c3a00fd146104eb57806389a30271146104f45780638ac2edc1146105075780638da5cb5b1461051a578063913198721461052b57600080fd5b806366234ffa1461048b5780636c016c0014610494578063715018a6146104d05780637a3c4c17146104d857600080fd5b8063415f1240116101be5780634ddde78d116101825780634ddde78d14610440578063587a03c2146104495780635f84f3021461045c5780636198e3391461046f57806362965d8e1461048257600080fd5b8063415f1240146103eb578063425378b4146103fe5780634437152a14610407578063484f13711461041a57806349b274ed1461042d57600080fd5b806324a6665e1161020557806324a6665e146102b05780632cb2f33414610372578063333daaa014610385578063357bcef014610398578063365c7504146103c857600080fd5b806301d73641146102375780630833a6c61461024c5780630ecbcdab1461027257806316f0115b14610285575b600080fd5b61024a61024536600461293a565b6105e8565b005b61025f61025a36600461293a565b610918565b6040519081526020015b60405180910390f35b61024a61028036600461296c565b610a1d565b600b54610298906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b6103236102be36600461293a565b600c602090815260009182526040918290208054835160a08101855260018301546001600160a01b0390811682526002840154948201949094526003830154948101949094526004820154606085015260059091015460ff1615156080840152169082565b604080516001600160a01b0393841681528251909316602080850191909152820151838201528101516060808401919091528101516080808401919091520151151560a082015260c001610269565b61025f61038036600461293a565b61109b565b61024a61039336600461293a565b611101565b6103bb6103a6366004612830565b600e6020526000908152604090205460ff1681565b60405161026991906129f7565b6103db6103d636600461293a565b611469565b6040519015158152602001610269565b61024a6103f936600461293a565b6114ba565b61025f600a5481565b61024a610415366004612830565b6117bf565b61025f61042836600461293a565b6117e9565b6103db61043b36600461293a565b611852565b61025f60095481565b61024a61045736600461293a565b61187f565b61024a61046a36600461293a565b61188c565b61024a61047d36600461293a565b611899565b61025f60015481565b61025f60075481565b6104bb6104a236600461293a565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610269565b61024a611994565b61025f6104e636600461293a565b6119a8565b61025f60065481565b600554610298906001600160a01b031681565b61024a61051536600461293a565b611ab3565b6000546001600160a01b0316610298565b600454610298906001600160a01b031681565b61025f60025481565b61025f61055536600461293a565b611fde565b61024a61056836600461293a565b612009565b600354610298906001600160a01b031681565b61024a61058e36600461293a565b612058565b61025f6105a136600461293a565b612065565b61024a6105b436600461296c565b612222565b61025f60085481565b61025f6105d036600461293a565b612510565b61024a6105e3366004612830565b612664565b6000818152600c60205260409020600401546106079061070890612a78565b421161061257600080fd5b6000818152600d602052604081209061062a83610918565b9050610635836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505082600001548211156107fc5782546106af9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646106d885605a612a59565b6106e29190612a37565b86546106ee9190612a1f565b6040518363ffffffff1660e01b815260040161070b9291906129de565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d919061286a565b506005546001600160a01b031663a9059cbb33606461077d85600a612a59565b6107879190612a37565b6040518363ffffffff1660e01b81526004016107a49291906129de565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061286a565b50610886565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926108329291169086906004016129de565b602060405180830381600087803b15801561084c57600080fd5b505af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610884919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f7510f2e218f218a66429c54a712775c000c398117e38b240be7ef52310a51e829060646108d286605a612a59565b6108dc9190612a37565b60646108e987600a612a59565b6108f39190612a37565b604080519384526020840192909252908201526060015b60405180910390a350505050565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061288c565b5050604051637632bffb60e01b815260048101879052919350506001600160a01b0383169150637632bffb9060240160206040518083038186803b1580156109de57600080fd5b505afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190612953565b9392505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa3919061286a565b610ae45760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b6000828152600d6020526040812090610afc84611fde565b60048054604051633755269b60e01b81529182018790529192506000916001600160a01b031690633755269b9060240160a06040518083038186803b158015610b4457600080fd5b505afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c919061288c565b5050505090506000600b60009054906101000a90046001600160a01b03166001600160a01b03166312b583496040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190612953565b9050600854851015610c5e5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74206c657373206d696e426f72726f774c696d69740000000000006044820152606401610adb565b83548390610c6c9087612a1f565b1115610cc65760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c6044820152631a5b5a5d60e21b6064820152608401610adb565b6001826001811115610cda57610cda612aa5565b14610d175760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610adb565b6000868152600c60205260409020546001600160a01b03163314610d755760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b6044820152606401610adb565b80851115610dd35760405162461bcd60e51b815260206004820152602560248201527f7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865604482015264081c1bdbdb60da1b6064820152608401610adb565b6000868152600c6020526040902060040154610df290610e1090612a78565b421115610e2c5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6000868152600c602052604090206005015460ff1615610ea157610e4f86612510565b610e58876119a8565b11610e9c5760405162461bcd60e51b815260206004820152601460248201527374686520707269636520697320746f6f206c6f7760601b6044820152606401610adb565b610ef8565b610eaa86612510565b610eb3876119a8565b10610ef85760405162461bcd60e51b81526020600482015260156024820152740e8d0ca40e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b6044820152606401610adb565b6000610f03876117e9565b9050604051806040016040528082876000015489610f219190612a1f565b610f2b9190612a1f565b8152426020918201526000898152600d82526040902082518155910151600190910155600b546001600160a01b0316632bc355ca610f698389612a1f565b6040518263ffffffff1660e01b8152600401610f8791815260200190565b600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b5050600b5460008a8152600c602052604090819020549051633419e74d60e21b81526001600160a01b03928316945063d0679d349350610ffd92909116908a906004016129de565b600060405180830381600087803b15801561101757600080fd5b505af115801561102b573d6000803e3d6000fd5b5050506000888152600c60209081526040918290206001015482518a81526001600160a01b03909116918101919091524281830152905189925033917f1fdbee5d1bd2901710e8945918b1a052ce67662661a2ccbf68420e4e430f8dab919081900360600190a350505050505050565b6000818152600c60205260408120600581015460ff16156110e0576110bf83612065565b6110c884612510565b11156110d757610a1683612510565b610a1683612065565b6110e983612065565b6110f284612510565b10156110d757610a1683612510565b61110a81611469565b6111465760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061115e83610918565b9050611169836126dd565b600b548254604051631b45a68d60e01b81526001600160a01b0390921691631b45a68d9161119d9160040190815260200190565b600060405180830381600087803b1580156111b757600080fd5b505af11580156111cb573d6000803e3d6000fd5b5050600554600b54855460405163a9059cbb60e01b81526001600160a01b03938416955063a9059cbb945061120693909216916004016129de565b602060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611258919061286a565b506005546000848152600c602052604090205483546001600160a01b039283169263a9059cbb92169060649061128f90600a612a59565b6112999190612a37565b85546112a59190612a1f565b6112af9085612a78565b6040518363ffffffff1660e01b81526004016112cc9291906129de565b602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e919061286a565b5060055482546001600160a01b039091169063a9059cbb90339060649061134690600a612a59565b6113509190612a37565b6040518363ffffffff1660e01b815260040161136d9291906129de565b602060405180830381600087803b15801561138757600080fd5b505af115801561139b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bf919061286a565b506000838152600c6020526040902054825484916001600160a01b0316907ff28455920a5bcb3aeff7a6bbdd4fed497e6f159330fe161026128b5c381bdd909060649061140d90600a612a59565b6114179190612a37565b85546114239190612a1f565b61142d9085612a78565b8554606461143c82600a612a59565b6114469190612a37565b6040805193845260208401929092529082015260600160405180910390a3505050565b6000818152600c60205260408120600581015460ff161561149f5761148d83612510565b611496846119a8565b11159392505050565b6114a883612510565b6114b1846119a8565b10159392505050565b6114c381611852565b6114ff5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061151783610918565b9050611522836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b5050505082600001548211156116e957825461159c9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646115c585605a612a59565b6115cf9190612a37565b86546115db9190612a1f565b6040518363ffffffff1660e01b81526004016115f89291906129de565b602060405180830381600087803b15801561161257600080fd5b505af1158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a919061286a565b506005546001600160a01b031663a9059cbb33606461166a85600a612a59565b6116749190612a37565b6040518363ffffffff1660e01b81526004016116919291906129de565b602060405180830381600087803b1580156116ab57600080fd5b505af11580156116bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e3919061286a565b50611773565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9261171f9291169086906004016129de565b602060405180830381600087803b15801561173957600080fd5b505af115801561174d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611771919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f4e91025e01b2329df1ec1067d27aafec4d1c41f682ccd794dee04321e0b1e8dc9060646108d286605a612a59565b6117c7612750565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d6020526040812060018101548290603c9061180b9042612a78565b6118159190612a37565b9050600754600654826118289190612a59565b835461183690606490612a37565b6118409190612a59565b61184a9190612a37565b949350505050565b6000818152600c60205260408120600581015460ff16156118765761148d83612065565b6114a883612065565b611887612750565b600755565b611894612750565b600655565b6000818152600d6020526040902054156118e95760405162461bcd60e51b81526020600482015260116024820152701bdc1d1a5bdb881a5cc8189b1bd8dad959607a1b6044820152606401610adb565b6003546000828152600c6020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561194c57600080fd5b505af1158015611960573d6000803e3d6000fd5b50506040518392503391507f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f190600090a350565b61199c612750565b6119a660006127aa565b565b6000818152600c6020908152604080832060018101548251635c4443cf60e11b81529251919385936001600160a01b039092169263b888879e926004808201939291829003018186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a36919061284d565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa6919061298e565b5091979650505050505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0157600080fd5b505afa158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b39919061286a565b611b755760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b6044820152606401610adb565b60048054604051633755269b60e01b8152918201839052600091829182916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611bc057600080fd5b505afa158015611bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf8919061288c565b9450505092509250610e108163ffffffff16611c149190612a78565b421115611c4e5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6040516335b2346d60e21b81526004810185905260009081906001600160a01b0385169063d6c8d1b490602401604080518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190612907565b90925090506001856001811115611ce357611ce3612aa5565b14611d235760405162461bcd60e51b815260206004820152601060248201526f6f7074696f6e2069732061637469766560801b6044820152606401610adb565b6003546040516331a9108f60e11b81526004810188905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f919061284d565b6001600160a01b031614611de55760405162461bcd60e51b815260206004820152600d60248201526c3cb7ba903737ba1037bbb732b960991b6044820152606401610adb565b6001600160a01b0384166000908152600e602052604081205460ff166002811115611e1257611e12612aa5565b1415611e595760405162461bcd60e51b81526020600482015260166024820152751cdd1c985d1959de481b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610adb565b6003546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611eab57600080fd5b505af1158015611ebf573d6000803e3d6000fd5b506000925060019150611ecf9050565b6001600160a01b0386166000908152600e602052604090205460ff166002811115611efc57611efc612aa5565b14611f08576000611f0b565b60015b604080518082018252338152815160a0810183526001600160a01b0398891681526001600160801b03968716602082810191909152959096168683015263ffffffff9096166060808701919091529115156080808701919091528487019586526000998a52600c855298819020955186549088166001600160a01b03199182161787559451805160018801805491909916961695909517909655918301516002850155509281015160038301559182015160048201559201516005909201805492151560ff199093169290921790915550565b6000600154600254611fef84610918565b611ff99190612a37565b6120039190612a59565b92915050565b612011612750565b611f408111156120535760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642076616c756560981b6044820152606401610adb565b600155565b612060612750565b600855565b6000818152600d60209081526040808320600c909252808320600480549251633755269b60e01b8152908101869052909184916001600160a01b0390911690633755269b9060240160a06040518083038186803b1580156120c557600080fd5b505afa1580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd919061288c565b505050915050600080826001600160a01b031663d6c8d1b4886040518263ffffffff1660e01b815260040161213491815260200190565b604080518083038186803b15801561214b57600080fd5b505afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121839190612907565b6005860154919350915060ff16156121e15760095485546001600160801b038416916121ae91612a59565b6121b89190612a37565b6121c3906078612a59565b6121d6906001600160801b038316612a1f565b979650505050505050565b60095485546001600160801b038416916121fa91612a59565b6122049190612a37565b61220f906078612a59565b6121d6906001600160801b038316612a78565b6000828152600d602052604090205461226f5760405162461bcd60e51b815260206004820152600f60248201526e1bdc1d1a5bdb881c995919595b5959608a1b6044820152606401610adb565b600061227a836117e9565b6000848152600d6020526040902054909150612297908290612a1f565b8211156122d85760405162461bcd60e51b815260206004820152600f60248201526e1d1bdbc81b5d58da08185b5bdd5b9d608a1b6044820152606401610adb565b6000838152600c60205260409020546001600160a01b031633146122fb57600080fd5b6000838152600d60205260408120548390612317908490612a1f565b6123219190612a78565b600b549091506001600160a01b0316631b45a68d61233f8486612a78565b6040518263ffffffff1660e01b815260040161235d91815260200190565b600060405180830381600087803b15801561237757600080fd5b505af115801561238b573d6000803e3d6000fd5b505060408051808201825284815242602080830191825260008a8152600d8252848120935184559151600190930192909255600554600c9092528290205491516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101889052911692506323b872dd9150606401602060405180830381600087803b15801561241a57600080fd5b505af115801561242e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612452919061286a565b50600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926124899291169087906004016129de565b602060405180830381600087803b1580156124a357600080fd5b505af11580156124b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124db919061286a565b50604051838152849033907f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d09060200161090a565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f919061288c565b50506040516335b2346d60e21b81526004810187905291935060009250506001600160a01b0383169063d6c8d1b490602401604080518083038186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126109190612907565b6000868152600c602052604090206005015490925060ff16159050612653576064600a5460646126409190612a1f565b611840906001600160801b038416612a59565b6064600a5460646126409190612a78565b61266c612750565b6001600160a01b0381166126d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610adb565b6126da816127aa565b50565b6000818152600c6020526040908190206001810154915163b07f0a4160e01b81526004810184905290916001600160a01b03169063b07f0a4190602401600060405180830381600087803b15801561273457600080fd5b505af1158015612748573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146119a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610adb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160801b038116811461281157600080fd5b919050565b805169ffffffffffffffffffff8116811461281157600080fd5b60006020828403121561284257600080fd5b8135610a1681612abb565b60006020828403121561285f57600080fd5b8151610a1681612abb565b60006020828403121561287c57600080fd5b81518015158114610a1657600080fd5b600080600080600060a086880312156128a457600080fd5b8551600281106128b357600080fd5b60208701519095506128c481612abb565b93506128d2604087016127fa565b92506128e0606087016127fa565b9150608086015163ffffffff811681146128f957600080fd5b809150509295509295909350565b6000806040838503121561291a57600080fd5b612923836127fa565b9150612931602084016127fa565b90509250929050565b60006020828403121561294c57600080fd5b5035919050565b60006020828403121561296557600080fd5b5051919050565b6000806040838503121561297f57600080fd5b50508035926020909101359150565b600080600080600060a086880312156129a657600080fd5b6129af86612816565b94506020860151935060408601519250606086015191506129d260808701612816565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6020810160038310612a1957634e487b7160e01b600052602160045260246000fd5b91905290565b60008219821115612a3257612a32612a8f565b500190565b600082612a5457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612a7357612a73612a8f565b500290565b600082821015612a8a57612a8a612a8f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146126da57600080fdfea26469706673582212200556ab8b8fc2039302625e5615c6a929509002d0fa9901ec439d51bc5df3ba1364736f6c63430008060033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106102325760003560e01c806366234ffa116101305780639d38d064116100b8578063d88c69101161007c578063d88c691014610593578063d8aed145146105a6578063e260d747146105b9578063f05735db146105c2578063f2fde38b146105d557600080fd5b80639d38d0641461053e5780639e3aa5b114610547578063b13de2661461055a578063b2016bd41461056d578063c37077091461058057600080fd5b80637c3a00fd116100ff5780637c3a00fd146104eb57806389a30271146104f45780638ac2edc1146105075780638da5cb5b1461051a578063913198721461052b57600080fd5b806366234ffa1461048b5780636c016c0014610494578063715018a6146104d05780637a3c4c17146104d857600080fd5b8063415f1240116101be5780634ddde78d116101825780634ddde78d14610440578063587a03c2146104495780635f84f3021461045c5780636198e3391461046f57806362965d8e1461048257600080fd5b8063415f1240146103eb578063425378b4146103fe5780634437152a14610407578063484f13711461041a57806349b274ed1461042d57600080fd5b806324a6665e1161020557806324a6665e146102b05780632cb2f33414610372578063333daaa014610385578063357bcef014610398578063365c7504146103c857600080fd5b806301d73641146102375780630833a6c61461024c5780630ecbcdab1461027257806316f0115b14610285575b600080fd5b61024a61024536600461293a565b6105e8565b005b61025f61025a36600461293a565b610918565b6040519081526020015b60405180910390f35b61024a61028036600461296c565b610a1d565b600b54610298906001600160a01b031681565b6040516001600160a01b039091168152602001610269565b6103236102be36600461293a565b600c602090815260009182526040918290208054835160a08101855260018301546001600160a01b0390811682526002840154948201949094526003830154948101949094526004820154606085015260059091015460ff1615156080840152169082565b604080516001600160a01b0393841681528251909316602080850191909152820151838201528101516060808401919091528101516080808401919091520151151560a082015260c001610269565b61025f61038036600461293a565b61109b565b61024a61039336600461293a565b611101565b6103bb6103a6366004612830565b600e6020526000908152604090205460ff1681565b60405161026991906129f7565b6103db6103d636600461293a565b611469565b6040519015158152602001610269565b61024a6103f936600461293a565b6114ba565b61025f600a5481565b61024a610415366004612830565b6117bf565b61025f61042836600461293a565b6117e9565b6103db61043b36600461293a565b611852565b61025f60095481565b61024a61045736600461293a565b61187f565b61024a61046a36600461293a565b61188c565b61024a61047d36600461293a565b611899565b61025f60015481565b61025f60075481565b6104bb6104a236600461293a565b600d602052600090815260409020805460019091015482565b60408051928352602083019190915201610269565b61024a611994565b61025f6104e636600461293a565b6119a8565b61025f60065481565b600554610298906001600160a01b031681565b61024a61051536600461293a565b611ab3565b6000546001600160a01b0316610298565b600454610298906001600160a01b031681565b61025f60025481565b61025f61055536600461293a565b611fde565b61024a61056836600461293a565b612009565b600354610298906001600160a01b031681565b61024a61058e36600461293a565b612058565b61025f6105a136600461293a565b612065565b61024a6105b436600461296c565b612222565b61025f60085481565b61025f6105d036600461293a565b612510565b61024a6105e3366004612830565b612664565b6000818152600c60205260409020600401546106079061070890612a78565b421161061257600080fd5b6000818152600d602052604081209061062a83610918565b9050610635836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561067f57600080fd5b505af1158015610693573d6000803e3d6000fd5b5050505082600001548211156107fc5782546106af9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646106d885605a612a59565b6106e29190612a37565b86546106ee9190612a1f565b6040518363ffffffff1660e01b815260040161070b9291906129de565b602060405180830381600087803b15801561072557600080fd5b505af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d919061286a565b506005546001600160a01b031663a9059cbb33606461077d85600a612a59565b6107879190612a37565b6040518363ffffffff1660e01b81526004016107a49291906129de565b602060405180830381600087803b1580156107be57600080fd5b505af11580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f6919061286a565b50610886565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926108329291169086906004016129de565b602060405180830381600087803b15801561084c57600080fd5b505af1158015610860573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610884919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f7510f2e218f218a66429c54a712775c000c398117e38b240be7ef52310a51e829060646108d286605a612a59565b6108dc9190612a37565b60646108e987600a612a59565b6108f39190612a37565b604080519384526020840192909252908201526060015b60405180910390a350505050565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561095f57600080fd5b505afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061288c565b5050604051637632bffb60e01b815260048101879052919350506001600160a01b0383169150637632bffb9060240160206040518083038186803b1580156109de57600080fd5b505afa1580156109f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a169190612953565b9392505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6b57600080fd5b505afa158015610a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa3919061286a565b610ae45760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b6000828152600d6020526040812090610afc84611fde565b60048054604051633755269b60e01b81529182018790529192506000916001600160a01b031690633755269b9060240160a06040518083038186803b158015610b4457600080fd5b505afa158015610b58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7c919061288c565b5050505090506000600b60009054906101000a90046001600160a01b03166001600160a01b03166312b583496040518163ffffffff1660e01b815260040160206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190612953565b9050600854851015610c5e5760405162461bcd60e51b815260206004820152601a60248201527f616d6f756e74206c657373206d696e426f72726f774c696d69740000000000006044820152606401610adb565b83548390610c6c9087612a1f565b1115610cc65760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74202b20646174612e626f72726f776564206c657373206d61784c6044820152631a5b5a5d60e21b6064820152608401610adb565b6001826001811115610cda57610cda612aa5565b14610d175760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420737461746560981b6044820152606401610adb565b6000868152600c60205260409020546001600160a01b03163314610d755760405162461bcd60e51b81526020600482015260156024820152743cb7ba9030b932903737ba103a34329037bbb732b960591b6044820152606401610adb565b80851115610dd35760405162461bcd60e51b815260206004820152602560248201527f7468657265206973206e6f7420656e6f756768206d6f6e657920696e20746865604482015264081c1bdbdb60da1b6064820152608401610adb565b6000868152600c6020526040902060040154610df290610e1090612a78565b421115610e2c5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6000868152600c602052604090206005015460ff1615610ea157610e4f86612510565b610e58876119a8565b11610e9c5760405162461bcd60e51b815260206004820152601460248201527374686520707269636520697320746f6f206c6f7760601b6044820152606401610adb565b610ef8565b610eaa86612510565b610eb3876119a8565b10610ef85760405162461bcd60e51b81526020600482015260156024820152740e8d0ca40e0e4d2c6ca40d2e640e8dede40d0d2ced605b1b6044820152606401610adb565b6000610f03876117e9565b9050604051806040016040528082876000015489610f219190612a1f565b610f2b9190612a1f565b8152426020918201526000898152600d82526040902082518155910151600190910155600b546001600160a01b0316632bc355ca610f698389612a1f565b6040518263ffffffff1660e01b8152600401610f8791815260200190565b600060405180830381600087803b158015610fa157600080fd5b505af1158015610fb5573d6000803e3d6000fd5b5050600b5460008a8152600c602052604090819020549051633419e74d60e21b81526001600160a01b03928316945063d0679d349350610ffd92909116908a906004016129de565b600060405180830381600087803b15801561101757600080fd5b505af115801561102b573d6000803e3d6000fd5b5050506000888152600c60209081526040918290206001015482518a81526001600160a01b03909116918101919091524281830152905189925033917f1fdbee5d1bd2901710e8945918b1a052ce67662661a2ccbf68420e4e430f8dab919081900360600190a350505050505050565b6000818152600c60205260408120600581015460ff16156110e0576110bf83612065565b6110c884612510565b11156110d757610a1683612510565b610a1683612065565b6110e983612065565b6110f284612510565b10156110d757610a1683612510565b61110a81611469565b6111465760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061115e83610918565b9050611169836126dd565b600b548254604051631b45a68d60e01b81526001600160a01b0390921691631b45a68d9161119d9160040190815260200190565b600060405180830381600087803b1580156111b757600080fd5b505af11580156111cb573d6000803e3d6000fd5b5050600554600b54855460405163a9059cbb60e01b81526001600160a01b03938416955063a9059cbb945061120693909216916004016129de565b602060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611258919061286a565b506005546000848152600c602052604090205483546001600160a01b039283169263a9059cbb92169060649061128f90600a612a59565b6112999190612a37565b85546112a59190612a1f565b6112af9085612a78565b6040518363ffffffff1660e01b81526004016112cc9291906129de565b602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e919061286a565b5060055482546001600160a01b039091169063a9059cbb90339060649061134690600a612a59565b6113509190612a37565b6040518363ffffffff1660e01b815260040161136d9291906129de565b602060405180830381600087803b15801561138757600080fd5b505af115801561139b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bf919061286a565b506000838152600c6020526040902054825484916001600160a01b0316907ff28455920a5bcb3aeff7a6bbdd4fed497e6f159330fe161026128b5c381bdd909060649061140d90600a612a59565b6114179190612a37565b85546114239190612a1f565b61142d9085612a78565b8554606461143c82600a612a59565b6114469190612a37565b6040805193845260208401929092529082015260600160405180910390a3505050565b6000818152600c60205260408120600581015460ff161561149f5761148d83612510565b611496846119a8565b11159392505050565b6114a883612510565b6114b1846119a8565b10159392505050565b6114c381611852565b6114ff5760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420707269636560981b6044820152606401610adb565b6000818152600d602052604081209061151783610918565b9050611522836126dd565b600b548254604051631b45a68d60e01b815260048101919091526000916001600160a01b031690631b45a68d90602401600060405180830381600087803b15801561156c57600080fd5b505af1158015611580573d6000803e3d6000fd5b5050505082600001548211156116e957825461159c9083612a78565b600554600b549192506001600160a01b039081169163a9059cbb911660646115c585605a612a59565b6115cf9190612a37565b86546115db9190612a1f565b6040518363ffffffff1660e01b81526004016115f89291906129de565b602060405180830381600087803b15801561161257600080fd5b505af1158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a919061286a565b506005546001600160a01b031663a9059cbb33606461166a85600a612a59565b6116749190612a37565b6040518363ffffffff1660e01b81526004016116919291906129de565b602060405180830381600087803b1580156116ab57600080fd5b505af11580156116bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e3919061286a565b50611773565b600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9261171f9291169086906004016129de565b602060405180830381600087803b15801561173957600080fd5b505af115801561174d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611771919061286a565b505b6000848152600c6020526040902054835485916001600160a01b0316907f4e91025e01b2329df1ec1067d27aafec4d1c41f682ccd794dee04321e0b1e8dc9060646108d286605a612a59565b6117c7612750565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600d6020526040812060018101548290603c9061180b9042612a78565b6118159190612a37565b9050600754600654826118289190612a59565b835461183690606490612a37565b6118409190612a59565b61184a9190612a37565b949350505050565b6000818152600c60205260408120600581015460ff16156118765761148d83612065565b6114a883612065565b611887612750565b600755565b611894612750565b600655565b6000818152600d6020526040902054156118e95760405162461bcd60e51b81526020600482015260116024820152701bdc1d1a5bdb881a5cc8189b1bd8dad959607a1b6044820152606401610adb565b6003546000828152600c6020526040908190205490516323b872dd60e01b81523060048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401600060405180830381600087803b15801561194c57600080fd5b505af1158015611960573d6000803e3d6000fd5b50506040518392503391507f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f190600090a350565b61199c612750565b6119a660006127aa565b565b6000818152600c6020908152604080832060018101548251635c4443cf60e11b81529251919385936001600160a01b039092169263b888879e926004808201939291829003018186803b1580156119fe57600080fd5b505afa158015611a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a36919061284d565b6001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015611a6e57600080fd5b505afa158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa6919061298e565b5091979650505050505050565b600b60009054906101000a90046001600160a01b03166001600160a01b031663ae3050e16040518163ffffffff1660e01b815260040160206040518083038186803b158015611b0157600080fd5b505afa158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b39919061286a565b611b755760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b6044820152606401610adb565b60048054604051633755269b60e01b8152918201839052600091829182916001600160a01b0390911690633755269b9060240160a06040518083038186803b158015611bc057600080fd5b505afa158015611bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf8919061288c565b9450505092509250610e108163ffffffff16611c149190612a78565b421115611c4e5760405162461bcd60e51b8152602060048201526008602482015267746f6f206c61746560c01b6044820152606401610adb565b6040516335b2346d60e21b81526004810185905260009081906001600160a01b0385169063d6c8d1b490602401604080518083038186803b158015611c9257600080fd5b505afa158015611ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cca9190612907565b90925090506001856001811115611ce357611ce3612aa5565b14611d235760405162461bcd60e51b815260206004820152601060248201526f6f7074696f6e2069732061637469766560801b6044820152606401610adb565b6003546040516331a9108f60e11b81526004810188905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611d6757600080fd5b505afa158015611d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d9f919061284d565b6001600160a01b031614611de55760405162461bcd60e51b815260206004820152600d60248201526c3cb7ba903737ba1037bbb732b960991b6044820152606401610adb565b6001600160a01b0384166000908152600e602052604081205460ff166002811115611e1257611e12612aa5565b1415611e595760405162461bcd60e51b81526020600482015260166024820152751cdd1c985d1959de481b9bdd081cdd5c1c1bdc9d195960521b6044820152606401610adb565b6003546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401600060405180830381600087803b158015611eab57600080fd5b505af1158015611ebf573d6000803e3d6000fd5b506000925060019150611ecf9050565b6001600160a01b0386166000908152600e602052604090205460ff166002811115611efc57611efc612aa5565b14611f08576000611f0b565b60015b604080518082018252338152815160a0810183526001600160a01b0398891681526001600160801b03968716602082810191909152959096168683015263ffffffff9096166060808701919091529115156080808701919091528487019586526000998a52600c855298819020955186549088166001600160a01b03199182161787559451805160018801805491909916961695909517909655918301516002850155509281015160038301559182015160048201559201516005909201805492151560ff199093169290921790915550565b6000600154600254611fef84610918565b611ff99190612a37565b6120039190612a59565b92915050565b612011612750565b611f408111156120535760405162461bcd60e51b815260206004820152600d60248201526c696e76616c69642076616c756560981b6044820152606401610adb565b600155565b612060612750565b600855565b6000818152600d60209081526040808320600c909252808320600480549251633755269b60e01b8152908101869052909184916001600160a01b0390911690633755269b9060240160a06040518083038186803b1580156120c557600080fd5b505afa1580156120d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120fd919061288c565b505050915050600080826001600160a01b031663d6c8d1b4886040518263ffffffff1660e01b815260040161213491815260200190565b604080518083038186803b15801561214b57600080fd5b505afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121839190612907565b6005860154919350915060ff16156121e15760095485546001600160801b038416916121ae91612a59565b6121b89190612a37565b6121c3906078612a59565b6121d6906001600160801b038316612a1f565b979650505050505050565b60095485546001600160801b038416916121fa91612a59565b6122049190612a37565b61220f906078612a59565b6121d6906001600160801b038316612a78565b6000828152600d602052604090205461226f5760405162461bcd60e51b815260206004820152600f60248201526e1bdc1d1a5bdb881c995919595b5959608a1b6044820152606401610adb565b600061227a836117e9565b6000848152600d6020526040902054909150612297908290612a1f565b8211156122d85760405162461bcd60e51b815260206004820152600f60248201526e1d1bdbc81b5d58da08185b5bdd5b9d608a1b6044820152606401610adb565b6000838152600c60205260409020546001600160a01b031633146122fb57600080fd5b6000838152600d60205260408120548390612317908490612a1f565b6123219190612a78565b600b549091506001600160a01b0316631b45a68d61233f8486612a78565b6040518263ffffffff1660e01b815260040161235d91815260200190565b600060405180830381600087803b15801561237757600080fd5b505af115801561238b573d6000803e3d6000fd5b505060408051808201825284815242602080830191825260008a8152600d8252848120935184559151600190930192909255600554600c9092528290205491516323b872dd60e01b81526001600160a01b03928316600482015230602482015260448101889052911692506323b872dd9150606401602060405180830381600087803b15801561241a57600080fd5b505af115801561242e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612452919061286a565b50600554600b5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926124899291169087906004016129de565b602060405180830381600087803b1580156124a357600080fd5b505af11580156124b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124db919061286a565b50604051838152849033907f77c6871227e5d2dec8dadd5354f78453203e22e669cd0ec4c19d9a8c5edb31d09060200161090a565b60048054604051633755269b60e01b815291820183905260009182916001600160a01b031690633755269b9060240160a06040518083038186803b15801561255757600080fd5b505afa15801561256b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258f919061288c565b50506040516335b2346d60e21b81526004810187905291935060009250506001600160a01b0383169063d6c8d1b490602401604080518083038186803b1580156125d857600080fd5b505afa1580156125ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126109190612907565b6000868152600c602052604090206005015490925060ff16159050612653576064600a5460646126409190612a1f565b611840906001600160801b038416612a59565b6064600a5460646126409190612a78565b61266c612750565b6001600160a01b0381166126d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610adb565b6126da816127aa565b50565b6000818152600c6020526040908190206001810154915163b07f0a4160e01b81526004810184905290916001600160a01b03169063b07f0a4190602401600060405180830381600087803b15801561273457600080fd5b505af1158015612748573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146119a65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610adb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160801b038116811461281157600080fd5b919050565b805169ffffffffffffffffffff8116811461281157600080fd5b60006020828403121561284257600080fd5b8135610a1681612abb565b60006020828403121561285f57600080fd5b8151610a1681612abb565b60006020828403121561287c57600080fd5b81518015158114610a1657600080fd5b600080600080600060a086880312156128a457600080fd5b8551600281106128b357600080fd5b60208701519095506128c481612abb565b93506128d2604087016127fa565b92506128e0606087016127fa565b9150608086015163ffffffff811681146128f957600080fd5b809150509295509295909350565b6000806040838503121561291a57600080fd5b612923836127fa565b9150612931602084016127fa565b90509250929050565b60006020828403121561294c57600080fd5b5035919050565b60006020828403121561296557600080fd5b5051919050565b6000806040838503121561297f57600080fd5b50508035926020909101359150565b600080600080600060a086880312156129a657600080fd5b6129af86612816565b94506020860151935060408601519250606086015191506129d260808701612816565b90509295509295909350565b6001600160a01b03929092168252602082015260400190565b6020810160038310612a1957634e487b7160e01b600052602160045260246000fd5b91905290565b60008219821115612a3257612a32612a8f565b500190565b600082612a5457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612a7357612a73612a8f565b500290565b600082821015612a8a57612a8a612a8f565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146126da57600080fdfea26469706673582212200556ab8b8fc2039302625e5615c6a929509002d0fa9901ec439d51bc5df3ba1364736f6c63430008060033","devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":53,"contract":"contracts/DDL.sol:DDL","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2787,"contract":"contracts/DDL.sol:DDL","label":"LTV","offset":0,"slot":"1","type":"t_uint256"},{"astId":2792,"contract":"contracts/DDL.sol:DDL","label":"LTV_DECIMALS","offset":0,"slot":"2","type":"t_uint256"},{"astId":2795,"contract":"contracts/DDL.sol:DDL","label":"collateralToken","offset":0,"slot":"3","type":"t_contract(IERC721)2147"},{"astId":2798,"contract":"contracts/DDL.sol:DDL","label":"operationalPool","offset":0,"slot":"4","type":"t_contract(IHegicOperationalTreasury)4326"},{"astId":2801,"contract":"contracts/DDL.sol:DDL","label":"USDC","offset":0,"slot":"5","type":"t_contract(IERC20)822"},{"astId":2804,"contract":"contracts/DDL.sol:DDL","label":"interestRate","offset":0,"slot":"6","type":"t_uint256"},{"astId":2809,"contract":"contracts/DDL.sol:DDL","label":"INTEREST_RATE_DECIMALS","offset":0,"slot":"7","type":"t_uint256"},{"astId":2811,"contract":"contracts/DDL.sol:DDL","label":"minBorrowLimit","offset":0,"slot":"8","type":"t_uint256"},{"astId":2813,"contract":"contracts/DDL.sol:DDL","label":"COLLATERAL_DECIMALS","offset":0,"slot":"9","type":"t_uint256"},{"astId":2815,"contract":"contracts/DDL.sol:DDL","label":"PriorLiqPriceCoef","offset":0,"slot":"10","type":"t_uint256"},{"astId":2818,"contract":"contracts/DDL.sol:DDL","label":"pool","offset":0,"slot":"11","type":"t_contract(IPoolDDL)4387"},{"astId":2849,"contract":"contracts/DDL.sol:DDL","label":"collateralInfo","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(CollateralInfo)2840_storage)"},{"astId":2854,"contract":"contracts/DDL.sol:DDL","label":"borrowedByOption","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(BorrowedByOption)2823_storage)"},{"astId":2859,"contract":"contracts/DDL.sol:DDL","label":"strategyType","offset":0,"slot":"14","type":"t_mapping(t_address,t_enum(HegicStrategyType)2844)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)822":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(IERC721)2147":{"encoding":"inplace","label":"contract IERC721","numberOfBytes":"20"},"t_contract(IHegicOperationalTreasury)4326":{"encoding":"inplace","label":"contract IHegicOperationalTreasury","numberOfBytes":"20"},"t_contract(IPoolDDL)4387":{"encoding":"inplace","label":"contract IPoolDDL","numberOfBytes":"20"},"t_enum(HegicStrategyType)2844":{"encoding":"inplace","label":"enum DDL.HegicStrategyType","numberOfBytes":"1"},"t_mapping(t_address,t_enum(HegicStrategyType)2844)":{"encoding":"mapping","key":"t_address","label":"mapping(address => enum DDL.HegicStrategyType)","numberOfBytes":"32","value":"t_enum(HegicStrategyType)2844"},"t_mapping(t_uint256,t_struct(BorrowedByOption)2823_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DDL.BorrowedByOption)","numberOfBytes":"32","value":"t_struct(BorrowedByOption)2823_storage"},"t_mapping(t_uint256,t_struct(CollateralInfo)2840_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct DDL.CollateralInfo)","numberOfBytes":"32","value":"t_struct(CollateralInfo)2840_storage"},"t_struct(BorrowedByOption)2823_storage":{"encoding":"inplace","label":"struct DDL.BorrowedByOption","members":[{"astId":2820,"contract":"contracts/DDL.sol:DDL","label":"borrowed","offset":0,"slot":"0","type":"t_uint256"},{"astId":2822,"contract":"contracts/DDL.sol:DDL","label":"newBorrowTimestamp","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_struct(CollateralInfo)2840_storage":{"encoding":"inplace","label":"struct DDL.CollateralInfo","members":[{"astId":2836,"contract":"contracts/DDL.sol:DDL","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2839,"contract":"contracts/DDL.sol:DDL","label":"strategy","offset":0,"slot":"1","type":"t_struct(optionInfo)2834_storage"}],"numberOfBytes":"192"},"t_struct(optionInfo)2834_storage":{"encoding":"inplace","label":"struct DDL.optionInfo","members":[{"astId":2825,"contract":"contracts/DDL.sol:DDL","label":"strategyAddress","offset":0,"slot":"0","type":"t_address"},{"astId":2827,"contract":"contracts/DDL.sol:DDL","label":"amount","offset":0,"slot":"1","type":"t_uint256"},{"astId":2829,"contract":"contracts/DDL.sol:DDL","label":"strike","offset":0,"slot":"2","type":"t_uint256"},{"astId":2831,"contract":"contracts/DDL.sol:DDL","label":"expiration","offset":0,"slot":"3","type":"t_uint256"},{"astId":2833,"contract":"contracts/DDL.sol:DDL","label":"isLong","offset":0,"slot":"4","type":"t_bool"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},62:function(e){e.exports=JSON.parse('{"address":"0x501783382b3FcfCbC812004a44b866C2b3011Df0","abi":[{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"address","name":"ddlContract1","type":"address"},{"internalType":"address","name":"ddlContract2","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Provide","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"INITIAL_RATE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"addTotalLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"name":"changeOpenDeDeLend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"ddlContracts","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getTotalBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxDepositAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"openDeDeLend","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"minShare","type":"uint256"}],"name":"provideFrom","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"shareOf","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"subTotalLocked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLocked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"transactionHash":"0x229644b79c3e8c699bd1d6ce51a1647f51e3c29a2362b6a44cb1420db0780903","receipt":{"to":null,"from":"0x0641bc55DDAb3b9636e82CbF87EDE3c3c533039d","contractAddress":"0x501783382b3FcfCbC812004a44b866C2b3011Df0","transactionIndex":1,"gasUsed":"6688958","logsBloom":"0xblockHash":"0xffae269bb993de39951e1a871eb7d361e35f0dbf73ae0419c707df0a1e8865fa","transactionHash":"0x229644b79c3e8c699bd1d6ce51a1647f51e3c29a2362b6a44cb1420db0780903","logs":[{"transactionIndex":1,"blockNumber":27258083,"transactionHash":"0x229644b79c3e8c699bd1d6ce51a1647f51e3c29a2362b6a44cb1420db0780903","address":"0x501783382b3FcfCbC812004a44b866C2b3011Df0","topics":["0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","0x0000000000000000000000000000000000000000000000000000000000000000","0x0000000000000000000000000641bc55ddab3b9636e82cbf87ede3c3c533039d"],"data":"0x","logIndex":0,"blockHash":"0xffae269bb993de39951e1a871eb7d361e35f0dbf73ae0419c707df0a1e8865fa"}],"blockNumber":27258083,"cumulativeGasUsed":"6688958","status":1,"byzantium":true},"args":["0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8","0x04Bdb03AfD70bED097f291dad79EEa28813B5B26","0x0154c34F9f38D2EC0Aa2BaCc8088eeB8f5f41d83"],"numDeployments":1,"solcInputHash":"5f1699bd8d1774dc9c092814512a9850","metadata":"{\\"compiler\\":{\\"version\\":\\"0.8.6+commit.11564f7e\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"_token\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"ddlContract1\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"ddlContract2\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"previousOwner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"OwnershipTransferred\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Provide\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"user\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Withdraw\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"INITIAL_RATE\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"addTotalLocked\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"value\\",\\"type\\":\\"bool\\"}],\\"name\\":\\"changeOpenDeDeLend\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"ddlContracts\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"getTotalBalance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"balance\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"maxDepositAmount\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"openDeDeLend\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"owner\\",\\"outputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"minShare\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"provideFrom\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"share\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"renounceOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"send\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"account\\",\\"type\\":\\"address\\"}],\\"name\\":\\"shareOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"share\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"subTotalLocked\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"token\\",\\"outputs\\":[{\\"internalType\\":\\"contract IERC20\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalLocked\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"newOwner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"transferOwnership\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"withdraw\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{\\"allowance(address,address)\\":{\\"details\\":\\"See {IERC20-allowance}.\\"},\\"approve(address,uint256)\\":{\\"details\\":\\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\\"},\\"balanceOf(address)\\":{\\"details\\":\\"See {IERC20-balanceOf}.\\"},\\"decimals()\\":{\\"details\\":\\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\\"},\\"decreaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\\"},\\"increaseAllowance(address,uint256)\\":{\\"details\\":\\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\\"},\\"name()\\":{\\"details\\":\\"Returns the name of the token.\\"},\\"owner()\\":{\\"details\\":\\"Returns the address of the current owner.\\"},\\"renounceOwnership()\\":{\\"details\\":\\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\\"},\\"symbol()\\":{\\"details\\":\\"Returns the symbol of the token, usually a shorter version of the name.\\"},\\"totalSupply()\\":{\\"details\\":\\"See {IERC20-totalSupply}.\\"},\\"transfer(address,uint256)\\":{\\"details\\":\\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\\"},\\"transferFrom(address,address,uint256)\\":{\\"details\\":\\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``\'s tokens of at least `amount`.\\"},\\"transferOwnership(address)\\":{\\"details\\":\\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\\"}},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"contracts/PoolDDL.sol\\":\\"PoolDDL\\"},\\"evmVersion\\":\\"berlin\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\",\\"useLiteralContent\\":true},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[]},\\"sources\\":{\\"@openzeppelin/contracts/access/Ownable.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../utils/Context.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Contract module which provides a basic access control mechanism, where\\\\n * there is an account (an owner) that can be granted exclusive access to\\\\n * specific functions.\\\\n *\\\\n * By default, the owner account will be the one that deploys the contract. This\\\\n * can later be changed with {transferOwnership}.\\\\n *\\\\n * This module is used through inheritance. It will make available the modifier\\\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\\\n * the owner.\\\\n */\\\\nabstract contract Ownable is Context {\\\\n    address private _owner;\\\\n\\\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\\\n\\\\n    /**\\\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\\\n     */\\\\n    constructor() {\\\\n        _transferOwnership(_msgSender());\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if called by any account other than the owner.\\\\n     */\\\\n    modifier onlyOwner() {\\\\n        _checkOwner();\\\\n        _;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the address of the current owner.\\\\n     */\\\\n    function owner() public view virtual returns (address) {\\\\n        return _owner;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Throws if the sender is not the owner.\\\\n     */\\\\n    function _checkOwner() internal view virtual {\\\\n        require(owner() == _msgSender(), \\\\\\"Ownable: caller is not the owner\\\\\\");\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Leaves the contract without owner. It will not be possible to call\\\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\\\n     *\\\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\\\n     * thereby removing any functionality that is only available to the owner.\\\\n     */\\\\n    function renounceOwnership() public virtual onlyOwner {\\\\n        _transferOwnership(address(0));\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Can only be called by the current owner.\\\\n     */\\\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\\\n        require(newOwner != address(0), \\\\\\"Ownable: new owner is the zero address\\\\\\");\\\\n        _transferOwnership(newOwner);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\\\n     * Internal function without access restriction.\\\\n     */\\\\n    function _transferOwnership(address newOwner) internal virtual {\\\\n        address oldOwner = _owner;\\\\n        _owner = newOwner;\\\\n        emit OwnershipTransferred(oldOwner, newOwner);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"./IERC20.sol\\\\\\";\\\\nimport \\\\\\"./extensions/IERC20Metadata.sol\\\\\\";\\\\nimport \\\\\\"../../utils/Context.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Implementation of the {IERC20} interface.\\\\n *\\\\n * This implementation is agnostic to the way tokens are created. This means\\\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\\\n *\\\\n * TIP: For a detailed writeup see our guide\\\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\\\n * to implement supply mechanisms].\\\\n *\\\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\\\n * instead returning `false` on failure. This behavior is nonetheless\\\\n * conventional and does not conflict with the expectations of ERC20\\\\n * applications.\\\\n *\\\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\\\n * This allows applications to reconstruct the allowance for all accounts just\\\\n * by listening to said events. Other implementations of the EIP may not emit\\\\n * these events, as it isn\'t required by the specification.\\\\n *\\\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\\\n * functions have been added to mitigate the well-known issues around setting\\\\n * allowances. See {IERC20-approve}.\\\\n */\\\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\\\n    mapping(address => uint256) private _balances;\\\\n\\\\n    mapping(address => mapping(address => uint256)) private _allowances;\\\\n\\\\n    uint256 private _totalSupply;\\\\n\\\\n    string private _name;\\\\n    string private _symbol;\\\\n\\\\n    /**\\\\n     * @dev Sets the values for {name} and {symbol}.\\\\n     *\\\\n     * The default value of {decimals} is 18. To select a different value for\\\\n     * {decimals} you should overload it.\\\\n     *\\\\n     * All two of these values are immutable: they can only be set once during\\\\n     * construction.\\\\n     */\\\\n    constructor(string memory name_, string memory symbol_) {\\\\n        _name = name_;\\\\n        _symbol = symbol_;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the name of the token.\\\\n     */\\\\n    function name() public view virtual override returns (string memory) {\\\\n        return _name;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\\\n     * name.\\\\n     */\\\\n    function symbol() public view virtual override returns (string memory) {\\\\n        return _symbol;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Returns the number of decimals used to get its user representation.\\\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\\\n     *\\\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\\\n     * overridden;\\\\n     *\\\\n     * NOTE: This information is only used for _display_ purposes: it in\\\\n     * no way affects any of the arithmetic of the contract, including\\\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\\\n     */\\\\n    function decimals() public view virtual override returns (uint8) {\\\\n        return 18;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC20-totalSupply}.\\\\n     */\\\\n    function totalSupply() public view virtual override returns (uint256) {\\\\n        return _totalSupply;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC20-balanceOf}.\\\\n     */\\\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\\\n        return _balances[account];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC20-transfer}.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `to` cannot be the zero address.\\\\n     * - the caller must have a balance of at least `amount`.\\\\n     */\\\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\\\n        address owner = _msgSender();\\\\n        _transfer(owner, to, amount);\\\\n        return true;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC20-allowance}.\\\\n     */\\\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\\\n        return _allowances[owner][spender];\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC20-approve}.\\\\n     *\\\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `spender` cannot be the zero address.\\\\n     */\\\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\\\n        address owner = _msgSender();\\\\n        _approve(owner, spender, amount);\\\\n        return true;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev See {IERC20-transferFrom}.\\\\n     *\\\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\\\n     *\\\\n     * NOTE: Does not update the allowance if the current allowance\\\\n     * is the maximum `uint256`.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` and `to` cannot be the zero address.\\\\n     * - `from` must have a balance of at least `amount`.\\\\n     * - the caller must have allowance for ``from``\'s tokens of at least\\\\n     * `amount`.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) public virtual override returns (bool) {\\\\n        address spender = _msgSender();\\\\n        _spendAllowance(from, spender, amount);\\\\n        _transfer(from, to, amount);\\\\n        return true;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\\\n     *\\\\n     * This is an alternative to {approve} that can be used as a mitigation for\\\\n     * problems described in {IERC20-approve}.\\\\n     *\\\\n     * Emits an {Approval} event indicating the updated allowance.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `spender` cannot be the zero address.\\\\n     */\\\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\\\n        address owner = _msgSender();\\\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\\\n        return true;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\\\n     *\\\\n     * This is an alternative to {approve} that can be used as a mitigation for\\\\n     * problems described in {IERC20-approve}.\\\\n     *\\\\n     * Emits an {Approval} event indicating the updated allowance.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `spender` cannot be the zero address.\\\\n     * - `spender` must have allowance for the caller of at least\\\\n     * `subtractedValue`.\\\\n     */\\\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\\\n        address owner = _msgSender();\\\\n        uint256 currentAllowance = allowance(owner, spender);\\\\n        require(currentAllowance >= subtractedValue, \\\\\\"ERC20: decreased allowance below zero\\\\\\");\\\\n        unchecked {\\\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\\\n        }\\\\n\\\\n        return true;\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\\\n     *\\\\n     * This internal function is equivalent to {transfer}, and can be used to\\\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `from` cannot be the zero address.\\\\n     * - `to` cannot be the zero address.\\\\n     * - `from` must have a balance of at least `amount`.\\\\n     */\\\\n    function _transfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) internal virtual {\\\\n        require(from != address(0), \\\\\\"ERC20: transfer from the zero address\\\\\\");\\\\n        require(to != address(0), \\\\\\"ERC20: transfer to the zero address\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(from, to, amount);\\\\n\\\\n        uint256 fromBalance = _balances[from];\\\\n        require(fromBalance >= amount, \\\\\\"ERC20: transfer amount exceeds balance\\\\\\");\\\\n        unchecked {\\\\n            _balances[from] = fromBalance - amount;\\\\n        }\\\\n        _balances[to] += amount;\\\\n\\\\n        emit Transfer(from, to, amount);\\\\n\\\\n        _afterTokenTransfer(from, to, amount);\\\\n    }\\\\n\\\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\\\n     * the total supply.\\\\n     *\\\\n     * Emits a {Transfer} event with `from` set to the zero address.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `account` cannot be the zero address.\\\\n     */\\\\n    function _mint(address account, uint256 amount) internal virtual {\\\\n        require(account != address(0), \\\\\\"ERC20: mint to the zero address\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(address(0), account, amount);\\\\n\\\\n        _totalSupply += amount;\\\\n        _balances[account] += amount;\\\\n        emit Transfer(address(0), account, amount);\\\\n\\\\n        _afterTokenTransfer(address(0), account, amount);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\\\n     * total supply.\\\\n     *\\\\n     * Emits a {Transfer} event with `to` set to the zero address.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `account` cannot be the zero address.\\\\n     * - `account` must have at least `amount` tokens.\\\\n     */\\\\n    function _burn(address account, uint256 amount) internal virtual {\\\\n        require(account != address(0), \\\\\\"ERC20: burn from the zero address\\\\\\");\\\\n\\\\n        _beforeTokenTransfer(account, address(0), amount);\\\\n\\\\n        uint256 accountBalance = _balances[account];\\\\n        require(accountBalance >= amount, \\\\\\"ERC20: burn amount exceeds balance\\\\\\");\\\\n        unchecked {\\\\n            _balances[account] = accountBalance - amount;\\\\n        }\\\\n        _totalSupply -= amount;\\\\n\\\\n        emit Transfer(account, address(0), amount);\\\\n\\\\n        _afterTokenTransfer(account, address(0), amount);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\\\n     *\\\\n     * This internal function is equivalent to `approve`, and can be used to\\\\n     * e.g. set automatic allowances for certain subsystems, etc.\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     *\\\\n     * Requirements:\\\\n     *\\\\n     * - `owner` cannot be the zero address.\\\\n     * - `spender` cannot be the zero address.\\\\n     */\\\\n    function _approve(\\\\n        address owner,\\\\n        address spender,\\\\n        uint256 amount\\\\n    ) internal virtual {\\\\n        require(owner != address(0), \\\\\\"ERC20: approve from the zero address\\\\\\");\\\\n        require(spender != address(0), \\\\\\"ERC20: approve to the zero address\\\\\\");\\\\n\\\\n        _allowances[owner][spender] = amount;\\\\n        emit Approval(owner, spender, amount);\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\\\n     *\\\\n     * Does not update the allowance amount in case of infinite allowance.\\\\n     * Revert if not enough allowance is available.\\\\n     *\\\\n     * Might emit an {Approval} event.\\\\n     */\\\\n    function _spendAllowance(\\\\n        address owner,\\\\n        address spender,\\\\n        uint256 amount\\\\n    ) internal virtual {\\\\n        uint256 currentAllowance = allowance(owner, spender);\\\\n        if (currentAllowance != type(uint256).max) {\\\\n            require(currentAllowance >= amount, \\\\\\"ERC20: insufficient allowance\\\\\\");\\\\n            unchecked {\\\\n                _approve(owner, spender, currentAllowance - amount);\\\\n            }\\\\n        }\\\\n    }\\\\n\\\\n    /**\\\\n     * @dev Hook that is called before any transfer of tokens. This includes\\\\n     * minting and burning.\\\\n     *\\\\n     * Calling conditions:\\\\n     *\\\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``\'s tokens\\\\n     * will be transferred to `to`.\\\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\\\n     * - when `to` is zero, `amount` of ``from``\'s tokens will be burned.\\\\n     * - `from` and `to` are never both zero.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _beforeTokenTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) internal virtual {}\\\\n\\\\n    /**\\\\n     * @dev Hook that is called after any transfer of tokens. This includes\\\\n     * minting and burning.\\\\n     *\\\\n     * Calling conditions:\\\\n     *\\\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``\'s tokens\\\\n     * has been transferred to `to`.\\\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\\\n     * - when `to` is zero, `amount` of ``from``\'s tokens have been burned.\\\\n     * - `from` and `to` are never both zero.\\\\n     *\\\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\\\n     */\\\\n    function _afterTokenTransfer(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) internal virtual {}\\\\n}\\\\n\\",\\"keccak256\\":\\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\\\n */\\\\ninterface IERC20 {\\\\n    /**\\\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\\\n     * another (`to`).\\\\n     *\\\\n     * Note that `value` may be zero.\\\\n     */\\\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\\\n     * a call to {approve}. `value` is the new allowance.\\\\n     */\\\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens in existence.\\\\n     */\\\\n    function totalSupply() external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Returns the amount of tokens owned by `account`.\\\\n     */\\\\n    function balanceOf(address account) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from the caller\'s account to `to`.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transfer(address to, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Returns the remaining number of tokens that `spender` will be\\\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\\\n     * zero by default.\\\\n     *\\\\n     * This value changes when {approve} or {transferFrom} are called.\\\\n     */\\\\n    function allowance(address owner, address spender) external view returns (uint256);\\\\n\\\\n    /**\\\\n     * @dev Sets `amount` as the allowance of `spender` over the caller\'s tokens.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\\\n     * that someone may use both the old and the new allowance by unfortunate\\\\n     * transaction ordering. One possible solution to mitigate this race\\\\n     * condition is to first reduce the spender\'s allowance to 0 and set the\\\\n     * desired value afterwards:\\\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\\\n     *\\\\n     * Emits an {Approval} event.\\\\n     */\\\\n    function approve(address spender, uint256 amount) external returns (bool);\\\\n\\\\n    /**\\\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\\\n     * allowance mechanism. `amount` is then deducted from the caller\'s\\\\n     * allowance.\\\\n     *\\\\n     * Returns a boolean value indicating whether the operation succeeded.\\\\n     *\\\\n     * Emits a {Transfer} event.\\\\n     */\\\\n    function transferFrom(\\\\n        address from,\\\\n        address to,\\\\n        uint256 amount\\\\n    ) external returns (bool);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\nimport \\\\\\"../IERC20.sol\\\\\\";\\\\n\\\\n/**\\\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\\\n *\\\\n * _Available since v4.1._\\\\n */\\\\ninterface IERC20Metadata is IERC20 {\\\\n    /**\\\\n     * @dev Returns the name of the token.\\\\n     */\\\\n    function name() external view returns (string memory);\\\\n\\\\n    /**\\\\n     * @dev Returns the symbol of the token.\\\\n     */\\\\n    function symbol() external view returns (string memory);\\\\n\\\\n    /**\\\\n     * @dev Returns the decimals places of the token.\\\\n     */\\\\n    function decimals() external view returns (uint8);\\\\n}\\\\n\\",\\"keccak256\\":\\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\\",\\"license\\":\\"MIT\\"},\\"@openzeppelin/contracts/utils/Context.sol\\":{\\"content\\":\\"// SPDX-License-Identifier: MIT\\\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\\\n\\\\npragma solidity ^0.8.0;\\\\n\\\\n/**\\\\n * @dev Provides information about the current execution context, including the\\\\n * sender of the transaction and its data. While these are generally available\\\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\\\n * manner, since when dealing with meta-transactions the account sending and\\\\n * paying for execution may not be the actual sender (as far as an application\\\\n * is concerned).\\\\n *\\\\n * This contract is only required for intermediate, library-like contracts.\\\\n */\\\\nabstract contract Context {\\\\n    function _msgSender() internal view virtual returns (address) {\\\\n        return msg.sender;\\\\n    }\\\\n\\\\n    function _msgData() internal view virtual returns (bytes calldata) {\\\\n        return msg.data;\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\\",\\"license\\":\\"MIT\\"},\\"contracts/PoolDDL.sol\\":{\\"content\\":\\"// SPDX-License-Identifier:\\\\npragma solidity 0.8.6;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/access/Ownable.sol\\\\\\";\\\\n\\\\ncontract PoolDDL is Ownable, ERC20(\\\\\\"Write DDL\\\\\\", \\\\\\"DDL\\\\\\") {\\\\n    uint256 public constant INITIAL_RATE = 1e18;\\\\n    uint256 public maxDepositAmount = type(uint256).max;\\\\n    mapping(address => bool) public ddlContracts;\\\\n    IERC20 public token;\\\\n    uint256 public totalLocked;\\\\n    bool public openDeDeLend = true;\\\\n\\\\n    event Provide(address indexed user, uint256 amount);\\\\n    event Withdraw(address indexed user, uint256 amount);\\\\n\\\\n    function changeOpenDeDeLend(bool value) external onlyOwner {\\\\n        openDeDeLend = value;\\\\n    }\\\\n\\\\n    function addTotalLocked(uint256 value) public {\\\\n        require(ddlContracts[msg.sender]);\\\\n        totalLocked += value;\\\\n    }\\\\n\\\\n    function subTotalLocked(uint256 value) public {\\\\n        require(ddlContracts[msg.sender]);\\\\n        totalLocked -= value;\\\\n    }\\\\n\\\\n    function getTotalBalance() public view returns (uint256 balance) {\\\\n        balance = token.balanceOf(address(this));\\\\n    }\\\\n\\\\n    function shareOf(address account) external view returns (uint256 share) {\\\\n        if (totalSupply() > 0)\\\\n            share = (getTotalBalance() * balanceOf(account)) / totalSupply();\\\\n        else share = 0;\\\\n    }\\\\n\\\\n    constructor(\\\\n        IERC20 _token,\\\\n        address ddlContract1,\\\\n        address ddlContract2\\\\n    ) {\\\\n        token = _token;\\\\n        ddlContracts[ddlContract1] = true;\\\\n        ddlContracts[ddlContract2] = true;\\\\n    }\\\\n\\\\n    function provideFrom(\\\\n        address account,\\\\n        uint256 amount,\\\\n        uint256 minShare\\\\n    ) external returns (uint256 share) {\\\\n        require(openDeDeLend, \\\\\\"pauseDeDeLend\\\\\\");\\\\n        uint256 totalBalance = getTotalBalance() + totalLocked;\\\\n        share = totalSupply() > 0 && totalBalance > 0\\\\n            ? (amount * totalSupply()) / totalBalance\\\\n            : amount * INITIAL_RATE;\\\\n        uint256 limit = maxDepositAmount - totalBalance;\\\\n        require(share >= minShare, \\\\\\"Pool Error: The mint limit is too large\\\\\\");\\\\n        require(share > 0, \\\\\\"Pool Error: The amount is too small\\\\\\");\\\\n        require(\\\\n            amount <= limit,\\\\n            \\\\\\"Pool Error: Depositing into the pool is not available\\\\\\"\\\\n        );\\\\n\\\\n        token.transferFrom(msg.sender, address(this), amount);\\\\n        _mint(msg.sender, share);\\\\n        emit Provide(msg.sender, amount);\\\\n    }\\\\n\\\\n    function withdraw(uint256 amount) external {\\\\n        uint256 totalBalance = getTotalBalance() + totalLocked;\\\\n        require(amount <= getTotalBalance());\\\\n        uint256 burn = (amount * totalSupply()) / totalBalance;\\\\n        require(burn <= balanceOf(msg.sender), \\\\\\"Amount is too large\\\\\\");\\\\n        _burn(msg.sender, burn);\\\\n        token.transfer(msg.sender, amount);\\\\n        emit Withdraw(msg.sender, amount);\\\\n    }\\\\n\\\\n    function send(address to, uint256 amount) public {\\\\n        require(ddlContracts[msg.sender]);\\\\n        require(amount <= getTotalBalance());\\\\n        token.transfer(to, amount);\\\\n    }\\\\n}\\\\n\\",\\"keccak256\\":\\"0xe02a7c47e3378dcf577270698f595a59128076b7aa23e6f6a578679425e5b924\\"}},\\"version\\":1}","bytecode":"0x6080604052600019600655600a805460ff191660011790553480156200002457600080fd5b506040516200185e3803806200185e83398101604081905262000047916200021d565b6040518060400160405280600981526020016815dc9a5d194811111360ba1b8152506040518060400160405280600381526020016211111360ea1b8152506200009f620000996200012360201b60201c565b62000127565b8151620000b490600490602085019062000177565b508051620000ca90600590602084019062000177565b5050600880546001600160a01b0319166001600160a01b0395861617905550908216600090815260076020526040808220805460ff199081166001908117909255939094168252902080549091169091179055620002c7565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620001859062000271565b90600052602060002090601f016020900481019282620001a95760008555620001f4565b82601f10620001c457805160ff1916838001178555620001f4565b82800160010185558215620001f4579182015b82811115620001f4578251825591602001919060010190620001d7565b506200020292915062000206565b5090565b5b8082111562000202576000815560010162000207565b6000806000606084860312156200023357600080fd5b83516200024081620002ae565b60208501519093506200025381620002ae565b60408501519092506200026681620002ae565b809150509250925092565b600181811c908216806200028657607f821691505b60208210811415620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0381168114620002c457600080fd5b50565b61158780620002d76000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806356891412116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146103a6578063e3b86a5e146103b9578063f2fde38b146103cc578063fc0c546a146103df57600080fd5b8063a9059cbb14610373578063ae3050e114610386578063d0679d341461039357600080fd5b80638da5cb5b116100d35780638da5cb5b1461032a5780638ed832711461034f57806395d89b4114610358578063a457c2d71461036057600080fd5b806356891412146102f057806370a08231146102f9578063715018a61461032257600080fd5b806323b872dd11610166578063313ce56711610140578063313ce5671461029c57806332f13d8c146102ab57806339509351146102ce5780634dbac733146102e157600080fd5b806323b872dd146102635780632bc355ca146102765780632e1a7d4d1461028957600080fd5b806313bdde8b116101a257806313bdde8b1461022057806318160ddd146102335780631b45a68d1461023b57806321e5e2c41461025057600080fd5b806306fdde03146101c9578063095ea7b3146101e757806312b583491461020a575b600080fd5b6101d16103f2565b6040516101de919061142d565b60405180910390f35b6101fa6101f5366004611364565b610484565b60405190151581526020016101de565b61021261049c565b6040519081526020016101de565b61021261022e36600461138e565b61051d565b600354610212565b61024e6102493660046113fb565b6107e2565b005b61021261025e3660046112d3565b610818565b6101fa610271366004611328565b610871565b61024e6102843660046113fb565b610895565b61024e6102973660046113fb565b6108c3565b604051601281526020016101de565b6101fa6102b93660046112d3565b60076020526000908152604090205460ff1681565b6101fa6102dc366004611364565b610a31565b610212670de0b6b3a764000081565b61021260095481565b6102126103073660046112d3565b6001600160a01b031660009081526001602052604090205490565b61024e610a53565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101de565b61021260065481565b6101d1610a67565b6101fa61036e366004611364565b610a76565b6101fa610381366004611364565b610af1565b600a546101fa9060ff1681565b61024e6103a1366004611364565b610aff565b6102126103b43660046112f5565b610bba565b61024e6103c73660046113c1565b610be5565b61024e6103da3660046112d3565b610c00565b600854610337906001600160a01b031681565b606060048054610401906114f2565b80601f016020809104026020016040519081016040528092919081815260200182805461042d906114f2565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b600033610492818585610c79565b5060019392505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190611414565b905090565b600a5460009060ff166105675760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b600060095461057461049c565b61057e9190611482565b9050600061058b60035490565b1180156105985750600081115b6105b3576105ae670de0b6b3a7640000856114bc565b6105d1565b806105bd60035490565b6105c790866114bc565b6105d1919061149a565b91506000816006546105e391906114db565b9050838310156106455760405162461bcd60e51b815260206004820152602760248201527f506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f6044820152666f206c6172676560c81b606482015260840161055e565b600083116106a15760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d604482015262185b1b60ea1b606482015260840161055e565b8085111561070f5760405162461bcd60e51b815260206004820152603560248201527f506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520604482015274706f6f6c206973206e6f7420617661696c61626c6560581b606482015260840161055e565b6008546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079991906113de565b506107a43384610d9d565b60405185815233907fa63d9d1536f0a17779061a910d29ff26af4aa035bbd6c128b55bfde21d6a2b409060200160405180910390a250509392505050565b3360009081526007602052604090205460ff166107fe57600080fd5b806009600082825461081091906114db565b909155505050565b60008061082460035490565b1115610868576003546001600160a01b03831660009081526001602052604090205461084e61049c565b61085891906114bc565b610862919061149a565b92915050565b5060005b919050565b60003361087f858285610e7c565b61088a858585610ef6565b506001949350505050565b3360009081526007602052604090205460ff166108b157600080fd5b80600960008282546108109190611482565b60006009546108d061049c565b6108da9190611482565b90506108e461049c565b8211156108f057600080fd5b6000816108fc60035490565b61090690856114bc565b610910919061149a565b336000908152600160205260409020549091508111156109685760405162461bcd60e51b8152602060048201526013602482015272416d6f756e7420697320746f6f206c6172676560681b604482015260640161055e565b61097233826110c4565b60085460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906113de565b5060405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b600033610492818585610a448383610bba565b610a4e9190611482565b610c79565b610a5b611212565b610a65600061126c565b565b606060058054610401906114f2565b60003381610a848286610bba565b905083811015610ae45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055e565b61088a8286868403610c79565b600033610492818585610ef6565b3360009081526007602052604090205460ff16610b1b57600080fd5b610b2361049c565b811115610b2f57600080fd5b60085460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015610b7d57600080fd5b505af1158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb591906113de565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610bed611212565b600a805460ff1916911515919091179055565b610c08611212565b6001600160a01b038116610c6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161055e565b610c768161126c565b50565b6001600160a01b038316610cdb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055e565b6001600160a01b038216610d3c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610df35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055e565b8060036000828254610e059190611482565b90915550506001600160a01b03821660009081526001602052604081208054839290610e32908490611482565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610e888484610bba565b90506000198114610ef05781811015610ee35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161055e565b610ef08484848403610c79565b50505050565b6001600160a01b038316610f5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055e565b6001600160a01b038216610fbc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055e565b6001600160a01b038316600090815260016020526040902054818110156110345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055e565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061106b908490611482565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110b791815260200190565b60405180910390a3610ef0565b6001600160a01b0382166111245760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055e565b6001600160a01b038216600090815260016020526040902054818110156111985760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055e565b6001600160a01b03831660009081526001602052604081208383039055600380548492906111c79084906114db565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000546001600160a01b03163314610a655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461086c57600080fd5b6000602082840312156112e557600080fd5b6112ee826112bc565b9392505050565b6000806040838503121561130857600080fd5b611311836112bc565b915061131f602084016112bc565b90509250929050565b60008060006060848603121561133d57600080fd5b611346846112bc565b9250611354602085016112bc565b9150604084013590509250925092565b6000806040838503121561137757600080fd5b611380836112bc565b946020939093013593505050565b6000806000606084860312156113a357600080fd5b6113ac846112bc565b95602085013595506040909401359392505050565b6000602082840312156113d357600080fd5b81356112ee81611543565b6000602082840312156113f057600080fd5b81516112ee81611543565b60006020828403121561140d57600080fd5b5035919050565b60006020828403121561142657600080fd5b5051919050565b600060208083528351808285015260005b8181101561145a5785810183015185820160400152820161143e565b8181111561146c576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156114955761149561152d565b500190565b6000826114b757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114d6576114d661152d565b500290565b6000828210156114ed576114ed61152d565b500390565b600181811c9082168061150657607f821691505b6020821081141561152757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8015158114610c7657600080fdfea264697066735822122062b8fa69e4d77a3b31bf506d5485b75fc07e6a9057ccb98e3c99f75961f6f8cb64736f6c63430008060033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806356891412116100f9578063a9059cbb11610097578063dd62ed3e11610071578063dd62ed3e146103a6578063e3b86a5e146103b9578063f2fde38b146103cc578063fc0c546a146103df57600080fd5b8063a9059cbb14610373578063ae3050e114610386578063d0679d341461039357600080fd5b80638da5cb5b116100d35780638da5cb5b1461032a5780638ed832711461034f57806395d89b4114610358578063a457c2d71461036057600080fd5b806356891412146102f057806370a08231146102f9578063715018a61461032257600080fd5b806323b872dd11610166578063313ce56711610140578063313ce5671461029c57806332f13d8c146102ab57806339509351146102ce5780634dbac733146102e157600080fd5b806323b872dd146102635780632bc355ca146102765780632e1a7d4d1461028957600080fd5b806313bdde8b116101a257806313bdde8b1461022057806318160ddd146102335780631b45a68d1461023b57806321e5e2c41461025057600080fd5b806306fdde03146101c9578063095ea7b3146101e757806312b583491461020a575b600080fd5b6101d16103f2565b6040516101de919061142d565b60405180910390f35b6101fa6101f5366004611364565b610484565b60405190151581526020016101de565b61021261049c565b6040519081526020016101de565b61021261022e36600461138e565b61051d565b600354610212565b61024e6102493660046113fb565b6107e2565b005b61021261025e3660046112d3565b610818565b6101fa610271366004611328565b610871565b61024e6102843660046113fb565b610895565b61024e6102973660046113fb565b6108c3565b604051601281526020016101de565b6101fa6102b93660046112d3565b60076020526000908152604090205460ff1681565b6101fa6102dc366004611364565b610a31565b610212670de0b6b3a764000081565b61021260095481565b6102126103073660046112d3565b6001600160a01b031660009081526001602052604090205490565b61024e610a53565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101de565b61021260065481565b6101d1610a67565b6101fa61036e366004611364565b610a76565b6101fa610381366004611364565b610af1565b600a546101fa9060ff1681565b61024e6103a1366004611364565b610aff565b6102126103b43660046112f5565b610bba565b61024e6103c73660046113c1565b610be5565b61024e6103da3660046112d3565b610c00565b600854610337906001600160a01b031681565b606060048054610401906114f2565b80601f016020809104026020016040519081016040528092919081815260200182805461042d906114f2565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b600033610492818585610c79565b5060019392505050565b6008546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105189190611414565b905090565b600a5460009060ff166105675760405162461bcd60e51b815260206004820152600d60248201526c1c185d5cd95119511953195b99609a1b60448201526064015b60405180910390fd5b600060095461057461049c565b61057e9190611482565b9050600061058b60035490565b1180156105985750600081115b6105b3576105ae670de0b6b3a7640000856114bc565b6105d1565b806105bd60035490565b6105c790866114bc565b6105d1919061149a565b91506000816006546105e391906114db565b9050838310156106455760405162461bcd60e51b815260206004820152602760248201527f506f6f6c204572726f723a20546865206d696e74206c696d697420697320746f6044820152666f206c6172676560c81b606482015260840161055e565b600083116106a15760405162461bcd60e51b815260206004820152602360248201527f506f6f6c204572726f723a2054686520616d6f756e7420697320746f6f20736d604482015262185b1b60ea1b606482015260840161055e565b8085111561070f5760405162461bcd60e51b815260206004820152603560248201527f506f6f6c204572726f723a204465706f736974696e6720696e746f2074686520604482015274706f6f6c206973206e6f7420617661696c61626c6560581b606482015260840161055e565b6008546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079991906113de565b506107a43384610d9d565b60405185815233907fa63d9d1536f0a17779061a910d29ff26af4aa035bbd6c128b55bfde21d6a2b409060200160405180910390a250509392505050565b3360009081526007602052604090205460ff166107fe57600080fd5b806009600082825461081091906114db565b909155505050565b60008061082460035490565b1115610868576003546001600160a01b03831660009081526001602052604090205461084e61049c565b61085891906114bc565b610862919061149a565b92915050565b5060005b919050565b60003361087f858285610e7c565b61088a858585610ef6565b506001949350505050565b3360009081526007602052604090205460ff166108b157600080fd5b80600960008282546108109190611482565b60006009546108d061049c565b6108da9190611482565b90506108e461049c565b8211156108f057600080fd5b6000816108fc60035490565b61090690856114bc565b610910919061149a565b336000908152600160205260409020549091508111156109685760405162461bcd60e51b8152602060048201526013602482015272416d6f756e7420697320746f6f206c6172676560681b604482015260640161055e565b61097233826110c4565b60085460405163a9059cbb60e01b8152336004820152602481018590526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f691906113de565b5060405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b600033610492818585610a448383610bba565b610a4e9190611482565b610c79565b610a5b611212565b610a65600061126c565b565b606060058054610401906114f2565b60003381610a848286610bba565b905083811015610ae45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161055e565b61088a8286868403610c79565b600033610492818585610ef6565b3360009081526007602052604090205460ff16610b1b57600080fd5b610b2361049c565b811115610b2f57600080fd5b60085460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b158015610b7d57600080fd5b505af1158015610b91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb591906113de565b505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610bed611212565b600a805460ff1916911515919091179055565b610c08611212565b6001600160a01b038116610c6d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161055e565b610c768161126c565b50565b6001600160a01b038316610cdb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161055e565b6001600160a01b038216610d3c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161055e565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216610df35760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161055e565b8060036000828254610e059190611482565b90915550506001600160a01b03821660009081526001602052604081208054839290610e32908490611482565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610e888484610bba565b90506000198114610ef05781811015610ee35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161055e565b610ef08484848403610c79565b50505050565b6001600160a01b038316610f5a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161055e565b6001600160a01b038216610fbc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161055e565b6001600160a01b038316600090815260016020526040902054818110156110345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161055e565b6001600160a01b0380851660009081526001602052604080822085850390559185168152908120805484929061106b908490611482565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110b791815260200190565b60405180910390a3610ef0565b6001600160a01b0382166111245760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161055e565b6001600160a01b038216600090815260016020526040902054818110156111985760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161055e565b6001600160a01b03831660009081526001602052604081208383039055600380548492906111c79084906114db565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000546001600160a01b03163314610a655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161055e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461086c57600080fd5b6000602082840312156112e557600080fd5b6112ee826112bc565b9392505050565b6000806040838503121561130857600080fd5b611311836112bc565b915061131f602084016112bc565b90509250929050565b60008060006060848603121561133d57600080fd5b611346846112bc565b9250611354602085016112bc565b9150604084013590509250925092565b6000806040838503121561137757600080fd5b611380836112bc565b946020939093013593505050565b6000806000606084860312156113a357600080fd5b6113ac846112bc565b95602085013595506040909401359392505050565b6000602082840312156113d357600080fd5b81356112ee81611543565b6000602082840312156113f057600080fd5b81516112ee81611543565b60006020828403121561140d57600080fd5b5035919050565b60006020828403121561142657600080fd5b5051919050565b600060208083528351808285015260005b8181101561145a5785810183015185820160400152820161143e565b8181111561146c576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156114955761149561152d565b500190565b6000826114b757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114d6576114d661152d565b500290565b6000828210156114ed576114ed61152d565b500390565b600181811c9082168061150657607f821691505b6020821081141561152757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8015158114610c7657600080fdfea264697066735822122062b8fa69e4d77a3b31bf506d5485b75fc07e6a9057ccb98e3c99f75961f6f8cb64736f6c63430008060033","devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``\'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":53,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":174,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_balances","offset":0,"slot":"1","type":"t_mapping(t_address,t_uint256)"},{"astId":180,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_allowances","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":182,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":184,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_name","offset":0,"slot":"4","type":"t_string_storage"},{"astId":186,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"_symbol","offset":0,"slot":"5","type":"t_string_storage"},{"astId":4407,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"maxDepositAmount","offset":0,"slot":"6","type":"t_uint256"},{"astId":4411,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"ddlContracts","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"},{"astId":4414,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"token","offset":0,"slot":"8","type":"t_contract(IERC20)822"},{"astId":4416,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"totalLocked","offset":0,"slot":"9","type":"t_uint256"},{"astId":4419,"contract":"contracts/PoolDDL.sol:PoolDDL","label":"openDeDeLend","offset":0,"slot":"10","type":"t_bool"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)822":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}')},63:function(e){e.exports=JSON.parse('{"address":"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8","abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"numDeployments":1}')},64:function(e){e.exports=JSON.parse('{"address":"0x639Fe6ab55C921f74e7fac1ee960C0B6293ba612","abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},65:function(e){e.exports=JSON.parse('{"address":"0x6ce185860a4963106506C203335A2910413708e9","abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"numDeployments":1}')},87:function(e,n,t){},89:function(e,n){},98:function(e,n){}},[[102,1,2]]]);
//# sourceMappingURL=main.a680000f.chunk.js.map